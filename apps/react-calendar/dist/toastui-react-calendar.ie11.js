var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};
(function(global2, factory) {
  typeof exports === "object" && typeof module !== "undefined" ? module.exports = factory(require("react")) : typeof define === "function" && define.amd ? define(["react"], factory) : (global2 = typeof globalThis !== "undefined" ? globalThis : global2 || self, global2.tui = global2.tui || {}, global2.tui.ReactCalendar = factory(global2.React));
})(this, function(React) {
  "use strict";
  function _interopDefaultLegacy(e) {
    return e && typeof e === "object" && "default" in e ? e : { "default": e };
  }
  var React__default = /* @__PURE__ */ _interopDefaultLegacy(React);
  var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
  function getDefaultExportFromCjs(x) {
    return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, "default") ? x["default"] : x;
  }
  var toastuiCalendar_ie11 = { exports: {} };
  var tuiDatePicker = { exports: {} };
  var tuiTimePicker = { exports: {} };
  /*!
   * TOAST UI Time Picker
   * @version 2.1.6
   * @license MIT
   */
  var hasRequiredTuiTimePicker;
  function requireTuiTimePicker() {
    if (hasRequiredTuiTimePicker)
      return tuiTimePicker.exports;
    hasRequiredTuiTimePicker = 1;
    (function(module2, exports2) {
      (function webpackUniversalModuleDefinition(root, factory) {
        module2.exports = factory();
      })(window, function() {
        return function(modules) {
          var installedModules = {};
          function __webpack_require__(moduleId) {
            if (installedModules[moduleId]) {
              return installedModules[moduleId].exports;
            }
            var module3 = installedModules[moduleId] = {
              i: moduleId,
              l: false,
              exports: {}
            };
            modules[moduleId].call(module3.exports, module3, module3.exports, __webpack_require__);
            module3.l = true;
            return module3.exports;
          }
          __webpack_require__.m = modules;
          __webpack_require__.c = installedModules;
          __webpack_require__.d = function(exports3, name, getter) {
            if (!__webpack_require__.o(exports3, name)) {
              Object.defineProperty(exports3, name, { enumerable: true, get: getter });
            }
          };
          __webpack_require__.r = function(exports3) {
            if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
              Object.defineProperty(exports3, Symbol.toStringTag, { value: "Module" });
            }
            Object.defineProperty(exports3, "__esModule", { value: true });
          };
          __webpack_require__.t = function(value, mode) {
            if (mode & 1)
              value = __webpack_require__(value);
            if (mode & 8)
              return value;
            if (mode & 4 && typeof value === "object" && value && value.__esModule)
              return value;
            var ns = /* @__PURE__ */ Object.create(null);
            __webpack_require__.r(ns);
            Object.defineProperty(ns, "default", { enumerable: true, value });
            if (mode & 2 && typeof value != "string")
              for (var key in value)
                __webpack_require__.d(ns, key, function(key2) {
                  return value[key2];
                }.bind(null, key));
            return ns;
          };
          __webpack_require__.n = function(module3) {
            var getter = module3 && module3.__esModule ? function getDefault() {
              return module3["default"];
            } : function getModuleExports() {
              return module3;
            };
            __webpack_require__.d(getter, "a", getter);
            return getter;
          };
          __webpack_require__.o = function(object, property) {
            return Object.prototype.hasOwnProperty.call(object, property);
          };
          __webpack_require__.p = "dist";
          return __webpack_require__(__webpack_require__.s = 20);
        }([
          function(module3, exports3, __webpack_require__) {
            var isArray = __webpack_require__(3);
            function inArray(searchElement, array, startIndex) {
              var i;
              var length;
              startIndex = startIndex || 0;
              if (!isArray(array)) {
                return -1;
              }
              if (Array.prototype.indexOf) {
                return Array.prototype.indexOf.call(array, searchElement, startIndex);
              }
              length = array.length;
              for (i = startIndex; startIndex >= 0 && i < length; i += 1) {
                if (array[i] === searchElement) {
                  return i;
                }
              }
              return -1;
            }
            module3.exports = inArray;
          },
          function(module3, exports3, __webpack_require__) {
            function forEachArray(arr, iteratee, context) {
              var index = 0;
              var len = arr.length;
              context = context || null;
              for (; index < len; index += 1) {
                if (iteratee.call(context, arr[index], index, arr) === false) {
                  break;
                }
              }
            }
            module3.exports = forEachArray;
          },
          function(module3, exports3, __webpack_require__) {
            function extend(target, objects) {
              var hasOwnProp2 = Object.prototype.hasOwnProperty;
              var source, prop, i, len;
              for (i = 1, len = arguments.length; i < len; i += 1) {
                source = arguments[i];
                for (prop in source) {
                  if (hasOwnProp2.call(source, prop)) {
                    target[prop] = source[prop];
                  }
                }
              }
              return target;
            }
            module3.exports = extend;
          },
          function(module3, exports3, __webpack_require__) {
            function isArray(obj) {
              return obj instanceof Array;
            }
            module3.exports = isArray;
          },
          function(module3, exports3, __webpack_require__) {
            var isArray = __webpack_require__(3);
            var forEachArray = __webpack_require__(1);
            var forEachOwnProperties = __webpack_require__(16);
            function forEach(obj, iteratee, context) {
              if (isArray(obj)) {
                forEachArray(obj, iteratee, context);
              } else {
                forEachOwnProperties(obj, iteratee, context);
              }
            }
            module3.exports = forEach;
          },
          function(module3, exports3, __webpack_require__) {
            function isUndefined(obj) {
              return obj === void 0;
            }
            module3.exports = isUndefined;
          },
          function(module3, exports3, __webpack_require__) {
            function isString(obj) {
              return typeof obj === "string" || obj instanceof String;
            }
            module3.exports = isString;
          },
          function(module3, exports3, __webpack_require__) {
            var inArray = __webpack_require__(0);
            var forEach = __webpack_require__(4);
            var isArray = __webpack_require__(3);
            var isString = __webpack_require__(6);
            var extend = __webpack_require__(2);
            var EXPRESSION_REGEXP = /{{\s?|\s?}}/g;
            var BRACKET_NOTATION_REGEXP = /^[a-zA-Z0-9_@]+\[[a-zA-Z0-9_@"']+\]$/;
            var BRACKET_REGEXP = /\[\s?|\s?\]/;
            var DOT_NOTATION_REGEXP = /^[a-zA-Z_]+\.[a-zA-Z_]+$/;
            var DOT_REGEXP = /\./;
            var STRING_NOTATION_REGEXP = /^["']\w+["']$/;
            var STRING_REGEXP = /"|'/g;
            var NUMBER_REGEXP = /^-?\d+\.?\d*$/;
            var EXPRESSION_INTERVAL = 2;
            var BLOCK_HELPERS = {
              "if": handleIf,
              "each": handleEach,
              "with": handleWith
            };
            var isValidSplit = "a".split(/a/).length === 3;
            var splitByRegExp = function() {
              if (isValidSplit) {
                return function(text, regexp) {
                  return text.split(regexp);
                };
              }
              return function(text, regexp) {
                var result = [];
                var prevIndex = 0;
                var match, index;
                if (!regexp.global) {
                  regexp = new RegExp(regexp, "g");
                }
                match = regexp.exec(text);
                while (match !== null) {
                  index = match.index;
                  result.push(text.slice(prevIndex, index));
                  prevIndex = index + match[0].length;
                  match = regexp.exec(text);
                }
                result.push(text.slice(prevIndex));
                return result;
              };
            }();
            function getValueFromContext(exp, context) {
              var splitedExps;
              var value = context[exp];
              if (exp === "true") {
                value = true;
              } else if (exp === "false") {
                value = false;
              } else if (STRING_NOTATION_REGEXP.test(exp)) {
                value = exp.replace(STRING_REGEXP, "");
              } else if (BRACKET_NOTATION_REGEXP.test(exp)) {
                splitedExps = exp.split(BRACKET_REGEXP);
                value = getValueFromContext(splitedExps[0], context)[getValueFromContext(splitedExps[1], context)];
              } else if (DOT_NOTATION_REGEXP.test(exp)) {
                splitedExps = exp.split(DOT_REGEXP);
                value = getValueFromContext(splitedExps[0], context)[splitedExps[1]];
              } else if (NUMBER_REGEXP.test(exp)) {
                value = parseFloat(exp);
              }
              return value;
            }
            function extractElseif(ifExps, sourcesInsideBlock) {
              var exps = [ifExps];
              var sourcesInsideIf = [];
              var otherIfCount = 0;
              var start = 0;
              forEach(sourcesInsideBlock, function(source, index) {
                if (source.indexOf("if") === 0) {
                  otherIfCount += 1;
                } else if (source === "/if") {
                  otherIfCount -= 1;
                } else if (!otherIfCount && (source.indexOf("elseif") === 0 || source === "else")) {
                  exps.push(source === "else" ? ["true"] : source.split(" ").slice(1));
                  sourcesInsideIf.push(sourcesInsideBlock.slice(start, index));
                  start = index + 1;
                }
              });
              sourcesInsideIf.push(sourcesInsideBlock.slice(start));
              return {
                exps,
                sourcesInsideIf
              };
            }
            function handleIf(exps, sourcesInsideBlock, context) {
              var analyzed = extractElseif(exps, sourcesInsideBlock);
              var result = false;
              var compiledSource = "";
              forEach(analyzed.exps, function(exp, index) {
                result = handleExpression(exp, context);
                if (result) {
                  compiledSource = compile(analyzed.sourcesInsideIf[index], context);
                }
                return !result;
              });
              return compiledSource;
            }
            function handleEach(exps, sourcesInsideBlock, context) {
              var collection = handleExpression(exps, context);
              var additionalKey = isArray(collection) ? "@index" : "@key";
              var additionalContext = {};
              var result = "";
              forEach(collection, function(item, key) {
                additionalContext[additionalKey] = key;
                additionalContext["@this"] = item;
                extend(context, additionalContext);
                result += compile(sourcesInsideBlock.slice(), context);
              });
              return result;
            }
            function handleWith(exps, sourcesInsideBlock, context) {
              var asIndex = inArray("as", exps);
              var alias = exps[asIndex + 1];
              var result = handleExpression(exps.slice(0, asIndex), context);
              var additionalContext = {};
              additionalContext[alias] = result;
              return compile(sourcesInsideBlock, extend(context, additionalContext)) || "";
            }
            function extractSourcesInsideBlock(sources, start, end) {
              var sourcesInsideBlock = sources.splice(start + 1, end - start);
              sourcesInsideBlock.pop();
              return sourcesInsideBlock;
            }
            function handleBlockHelper(helperKeyword, sourcesToEnd, context) {
              var executeBlockHelper = BLOCK_HELPERS[helperKeyword];
              var helperCount = 1;
              var startBlockIndex = 0;
              var endBlockIndex;
              var index = startBlockIndex + EXPRESSION_INTERVAL;
              var expression = sourcesToEnd[index];
              while (helperCount && isString(expression)) {
                if (expression.indexOf(helperKeyword) === 0) {
                  helperCount += 1;
                } else if (expression.indexOf("/" + helperKeyword) === 0) {
                  helperCount -= 1;
                  endBlockIndex = index;
                }
                index += EXPRESSION_INTERVAL;
                expression = sourcesToEnd[index];
              }
              if (helperCount) {
                throw Error(helperKeyword + " needs {{/" + helperKeyword + "}} expression.");
              }
              sourcesToEnd[startBlockIndex] = executeBlockHelper(
                sourcesToEnd[startBlockIndex].split(" ").slice(1),
                extractSourcesInsideBlock(sourcesToEnd, startBlockIndex, endBlockIndex),
                context
              );
              return sourcesToEnd;
            }
            function handleExpression(exps, context) {
              var result = getValueFromContext(exps[0], context);
              if (result instanceof Function) {
                return executeFunction(result, exps.slice(1), context);
              }
              return result;
            }
            function executeFunction(helper, argExps, context) {
              var args = [];
              forEach(argExps, function(exp) {
                args.push(getValueFromContext(exp, context));
              });
              return helper.apply(null, args);
            }
            function compile(sources, context) {
              var index = 1;
              var expression = sources[index];
              var exps, firstExp, result;
              while (isString(expression)) {
                exps = expression.split(" ");
                firstExp = exps[0];
                if (BLOCK_HELPERS[firstExp]) {
                  result = handleBlockHelper(firstExp, sources.splice(index, sources.length - index), context);
                  sources = sources.concat(result);
                } else {
                  sources[index] = handleExpression(exps, context);
                }
                index += EXPRESSION_INTERVAL;
                expression = sources[index];
              }
              return sources.join("");
            }
            function template(text, context) {
              return compile(splitByRegExp(text, EXPRESSION_REGEXP), context);
            }
            module3.exports = template;
          },
          function(module3, exports3, __webpack_require__) {
            var extend = __webpack_require__(2);
            var isExisty = __webpack_require__(23);
            var isString = __webpack_require__(6);
            var isObject = __webpack_require__(25);
            var isArray = __webpack_require__(3);
            var isFunction = __webpack_require__(26);
            var forEach = __webpack_require__(4);
            var R_EVENTNAME_SPLIT = /\s+/g;
            function CustomEvents() {
              this.events = null;
              this.contexts = null;
            }
            CustomEvents.mixin = function(func) {
              extend(func.prototype, CustomEvents.prototype);
            };
            CustomEvents.prototype._getHandlerItem = function(handler, context) {
              var item = { handler };
              if (context) {
                item.context = context;
              }
              return item;
            };
            CustomEvents.prototype._safeEvent = function(eventName) {
              var events = this.events;
              var byName;
              if (!events) {
                events = this.events = {};
              }
              if (eventName) {
                byName = events[eventName];
                if (!byName) {
                  byName = [];
                  events[eventName] = byName;
                }
                events = byName;
              }
              return events;
            };
            CustomEvents.prototype._safeContext = function() {
              var context = this.contexts;
              if (!context) {
                context = this.contexts = [];
              }
              return context;
            };
            CustomEvents.prototype._indexOfContext = function(ctx) {
              var context = this._safeContext();
              var index = 0;
              while (context[index]) {
                if (ctx === context[index][0]) {
                  return index;
                }
                index += 1;
              }
              return -1;
            };
            CustomEvents.prototype._memorizeContext = function(ctx) {
              var context, index;
              if (!isExisty(ctx)) {
                return;
              }
              context = this._safeContext();
              index = this._indexOfContext(ctx);
              if (index > -1) {
                context[index][1] += 1;
              } else {
                context.push([ctx, 1]);
              }
            };
            CustomEvents.prototype._forgetContext = function(ctx) {
              var context, contextIndex;
              if (!isExisty(ctx)) {
                return;
              }
              context = this._safeContext();
              contextIndex = this._indexOfContext(ctx);
              if (contextIndex > -1) {
                context[contextIndex][1] -= 1;
                if (context[contextIndex][1] <= 0) {
                  context.splice(contextIndex, 1);
                }
              }
            };
            CustomEvents.prototype._bindEvent = function(eventName, handler, context) {
              var events = this._safeEvent(eventName);
              this._memorizeContext(context);
              events.push(this._getHandlerItem(handler, context));
            };
            CustomEvents.prototype.on = function(eventName, handler, context) {
              var self2 = this;
              if (isString(eventName)) {
                eventName = eventName.split(R_EVENTNAME_SPLIT);
                forEach(eventName, function(name) {
                  self2._bindEvent(name, handler, context);
                });
              } else if (isObject(eventName)) {
                context = handler;
                forEach(eventName, function(func, name) {
                  self2.on(name, func, context);
                });
              }
            };
            CustomEvents.prototype.once = function(eventName, handler, context) {
              var self2 = this;
              if (isObject(eventName)) {
                context = handler;
                forEach(eventName, function(func, name) {
                  self2.once(name, func, context);
                });
                return;
              }
              function onceHandler() {
                handler.apply(context, arguments);
                self2.off(eventName, onceHandler, context);
              }
              this.on(eventName, onceHandler, context);
            };
            CustomEvents.prototype._spliceMatches = function(arr, predicate) {
              var i = 0;
              var len;
              if (!isArray(arr)) {
                return;
              }
              for (len = arr.length; i < len; i += 1) {
                if (predicate(arr[i]) === true) {
                  arr.splice(i, 1);
                  len -= 1;
                  i -= 1;
                }
              }
            };
            CustomEvents.prototype._matchHandler = function(handler) {
              var self2 = this;
              return function(item) {
                var needRemove = handler === item.handler;
                if (needRemove) {
                  self2._forgetContext(item.context);
                }
                return needRemove;
              };
            };
            CustomEvents.prototype._matchContext = function(context) {
              var self2 = this;
              return function(item) {
                var needRemove = context === item.context;
                if (needRemove) {
                  self2._forgetContext(item.context);
                }
                return needRemove;
              };
            };
            CustomEvents.prototype._matchHandlerAndContext = function(handler, context) {
              var self2 = this;
              return function(item) {
                var matchHandler = handler === item.handler;
                var matchContext = context === item.context;
                var needRemove = matchHandler && matchContext;
                if (needRemove) {
                  self2._forgetContext(item.context);
                }
                return needRemove;
              };
            };
            CustomEvents.prototype._offByEventName = function(eventName, handler) {
              var self2 = this;
              var andByHandler = isFunction(handler);
              var matchHandler = self2._matchHandler(handler);
              eventName = eventName.split(R_EVENTNAME_SPLIT);
              forEach(eventName, function(name) {
                var handlerItems = self2._safeEvent(name);
                if (andByHandler) {
                  self2._spliceMatches(handlerItems, matchHandler);
                } else {
                  forEach(handlerItems, function(item) {
                    self2._forgetContext(item.context);
                  });
                  self2.events[name] = [];
                }
              });
            };
            CustomEvents.prototype._offByHandler = function(handler) {
              var self2 = this;
              var matchHandler = this._matchHandler(handler);
              forEach(this._safeEvent(), function(handlerItems) {
                self2._spliceMatches(handlerItems, matchHandler);
              });
            };
            CustomEvents.prototype._offByObject = function(obj, handler) {
              var self2 = this;
              var matchFunc;
              if (this._indexOfContext(obj) < 0) {
                forEach(obj, function(func, name) {
                  self2.off(name, func);
                });
              } else if (isString(handler)) {
                matchFunc = this._matchContext(obj);
                self2._spliceMatches(this._safeEvent(handler), matchFunc);
              } else if (isFunction(handler)) {
                matchFunc = this._matchHandlerAndContext(handler, obj);
                forEach(this._safeEvent(), function(handlerItems) {
                  self2._spliceMatches(handlerItems, matchFunc);
                });
              } else {
                matchFunc = this._matchContext(obj);
                forEach(this._safeEvent(), function(handlerItems) {
                  self2._spliceMatches(handlerItems, matchFunc);
                });
              }
            };
            CustomEvents.prototype.off = function(eventName, handler) {
              if (isString(eventName)) {
                this._offByEventName(eventName, handler);
              } else if (!arguments.length) {
                this.events = {};
                this.contexts = [];
              } else if (isFunction(eventName)) {
                this._offByHandler(eventName);
              } else if (isObject(eventName)) {
                this._offByObject(eventName, handler);
              }
            };
            CustomEvents.prototype.fire = function(eventName) {
              this.invoke.apply(this, arguments);
            };
            CustomEvents.prototype.invoke = function(eventName) {
              var events, args, index, item;
              if (!this.hasListener(eventName)) {
                return true;
              }
              events = this._safeEvent(eventName);
              args = Array.prototype.slice.call(arguments, 1);
              index = 0;
              while (events[index]) {
                item = events[index];
                if (item.handler.apply(item.context, args) === false) {
                  return false;
                }
                index += 1;
              }
              return true;
            };
            CustomEvents.prototype.hasListener = function(eventName) {
              return this.getListenerLength(eventName) > 0;
            };
            CustomEvents.prototype.getListenerLength = function(eventName) {
              var events = this._safeEvent(eventName);
              return events.length;
            };
            module3.exports = CustomEvents;
          },
          function(module3, exports3, __webpack_require__) {
            var inherit = __webpack_require__(27);
            var extend = __webpack_require__(2);
            function defineClass(parent, props) {
              var obj;
              if (!props) {
                props = parent;
                parent = null;
              }
              obj = props.init || function() {
              };
              if (parent) {
                inherit(obj, parent);
              }
              if (props.hasOwnProperty("static")) {
                extend(obj, props["static"]);
                delete props["static"];
              }
              extend(obj.prototype, props);
              return obj;
            }
            module3.exports = defineClass;
          },
          function(module3, exports3, __webpack_require__) {
            var isString = __webpack_require__(6);
            var forEach = __webpack_require__(4);
            var safeEvent = __webpack_require__(17);
            function on(element, types, handler, context) {
              if (isString(types)) {
                forEach(types.split(/\s+/g), function(type) {
                  bindEvent(element, type, handler, context);
                });
                return;
              }
              forEach(types, function(func, type) {
                bindEvent(element, type, func, handler);
              });
            }
            function bindEvent(element, type, handler, context) {
              function eventHandler(e) {
                handler.call(context || element, e || window.event);
              }
              if ("addEventListener" in element) {
                element.addEventListener(type, eventHandler);
              } else if ("attachEvent" in element) {
                element.attachEvent("on" + type, eventHandler);
              }
              memorizeHandler(element, type, handler, eventHandler);
            }
            function memorizeHandler(element, type, handler, wrappedHandler) {
              var events = safeEvent(element, type);
              var existInEvents = false;
              forEach(events, function(obj) {
                if (obj.handler === handler) {
                  existInEvents = true;
                  return false;
                }
                return true;
              });
              if (!existInEvents) {
                events.push({
                  handler,
                  wrappedHandler
                });
              }
            }
            module3.exports = on;
          },
          function(module3, exports3, __webpack_require__) {
            var isString = __webpack_require__(6);
            var forEach = __webpack_require__(4);
            var safeEvent = __webpack_require__(17);
            function off(element, types, handler) {
              if (isString(types)) {
                forEach(types.split(/\s+/g), function(type) {
                  unbindEvent(element, type, handler);
                });
                return;
              }
              forEach(types, function(func, type) {
                unbindEvent(element, type, func);
              });
            }
            function unbindEvent(element, type, handler) {
              var events = safeEvent(element, type);
              var index;
              if (!handler) {
                forEach(events, function(item) {
                  removeHandler(element, type, item.wrappedHandler);
                });
                events.splice(0, events.length);
              } else {
                forEach(events, function(item, idx) {
                  if (handler === item.handler) {
                    removeHandler(element, type, item.wrappedHandler);
                    index = idx;
                    return false;
                  }
                  return true;
                });
                events.splice(index, 1);
              }
            }
            function removeHandler(element, type, handler) {
              if ("removeEventListener" in element) {
                element.removeEventListener(type, handler);
              } else if ("detachEvent" in element) {
                element.detachEvent("on" + type, handler);
              }
            }
            module3.exports = off;
          },
          function(module3, exports3, __webpack_require__) {
            var matches = __webpack_require__(30);
            function closest(element, selector) {
              var parent = element.parentNode;
              if (matches(element, selector)) {
                return element;
              }
              while (parent && parent !== document) {
                if (matches(parent, selector)) {
                  return parent;
                }
                parent = parent.parentNode;
              }
              return null;
            }
            module3.exports = closest;
          },
          function(module3, exports3, __webpack_require__) {
            function removeElement(element) {
              if (element && element.parentNode) {
                element.parentNode.removeChild(element);
              }
            }
            module3.exports = removeElement;
          },
          function(module3, exports3, __webpack_require__) {
            function isHTMLNode(html) {
              if (typeof HTMLElement === "object") {
                return html && (html instanceof HTMLElement || !!html.nodeType);
              }
              return !!(html && html.nodeType);
            }
            module3.exports = isHTMLNode;
          },
          function(module3, exports3, __webpack_require__) {
            var inArray = __webpack_require__(0);
            var forEachArray = __webpack_require__(1);
            var sendHostname = __webpack_require__(35);
            var uniqueId = 0;
            var utils = {
              getUniqueId: function() {
                uniqueId += 1;
                return uniqueId;
              },
              formatTime: function(value, format) {
                var PADDING_ZERO_TYPES = ["hh", "mm"];
                value = String(value);
                return inArray(format, PADDING_ZERO_TYPES) >= 0 && value.length === 1 ? "0" + value : value;
              },
              getMeridiemHour: function(hour) {
                hour %= 12;
                if (hour === 0) {
                  hour = 12;
                }
                return hour;
              },
              getRangeArr: function(start, end, step) {
                var arr = [];
                var i;
                step = step || 1;
                if (start > end) {
                  for (i = end; i >= start; i -= step) {
                    arr.push(i);
                  }
                } else {
                  for (i = start; i <= end; i += step) {
                    arr.push(i);
                  }
                }
                return arr;
              },
              fill: function(start, end, value, target) {
                var arr = target || [];
                var replaceEnd = Math.min(arr.length - 1, end);
                var i;
                for (i = start; i <= replaceEnd; i += 1) {
                  arr[i] = value;
                }
                for (i = replaceEnd; i <= end; i += 1) {
                  arr.push(value);
                }
                return arr;
              },
              getTarget: function(ev) {
                return ev.target || ev.srcElement;
              },
              sendHostName: function() {
                sendHostname("time-picker", "UA-129987462-1");
              },
              getDisabledMinuteArr: function(enableRanges, minuteStep) {
                var arr = this.fill(0, Math.floor(60 / minuteStep) - 2, false);
                function setDisabled(enableRange) {
                  var beginDisabledMinute = Math.ceil(enableRange.begin / minuteStep);
                  var endDisabledMinute = Math.floor(enableRange.end / minuteStep);
                  arr = this.fill(beginDisabledMinute, endDisabledMinute, true, arr);
                }
                forEachArray(enableRanges, setDisabled.bind(this));
                return arr;
              },
              setDisabled: function(el, isDisabled) {
                el.disabled = isDisabled;
              }
            };
            module3.exports = utils;
          },
          function(module3, exports3, __webpack_require__) {
            function forEachOwnProperties(obj, iteratee, context) {
              var key;
              context = context || null;
              for (key in obj) {
                if (obj.hasOwnProperty(key)) {
                  if (iteratee.call(context, obj[key], key, obj) === false) {
                    break;
                  }
                }
              }
            }
            module3.exports = forEachOwnProperties;
          },
          function(module3, exports3, __webpack_require__) {
            var EVENT_KEY = "_feEventKey";
            function safeEvent(element, type) {
              var events = element[EVENT_KEY];
              var handlers;
              if (!events) {
                events = element[EVENT_KEY] = {};
              }
              handlers = events[type];
              if (!handlers) {
                handlers = events[type] = [];
              }
              return handlers;
            }
            module3.exports = safeEvent;
          },
          function(module3, exports3, __webpack_require__) {
            var isUndefined = __webpack_require__(5);
            function getClass(element) {
              if (!element || !element.className) {
                return "";
              }
              if (isUndefined(element.className.baseVal)) {
                return element.className;
              }
              return element.className.baseVal;
            }
            module3.exports = getClass;
          },
          function(module3, exports3, __webpack_require__) {
            var isArray = __webpack_require__(3);
            var isUndefined = __webpack_require__(5);
            function setClassName(element, cssClass) {
              cssClass = isArray(cssClass) ? cssClass.join(" ") : cssClass;
              cssClass = cssClass.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
              if (isUndefined(element.className.baseVal)) {
                element.className = cssClass;
                return;
              }
              element.className.baseVal = cssClass;
            }
            module3.exports = setClassName;
          },
          function(module3, exports3, __webpack_require__) {
            __webpack_require__(21);
            module3.exports = __webpack_require__(22);
          },
          function(module3, exports3, __webpack_require__) {
          },
          function(module3, exports3, __webpack_require__) {
            var inArray = __webpack_require__(0);
            var forEachArray = __webpack_require__(1);
            var CustomEvents = __webpack_require__(8);
            var defineClass = __webpack_require__(9);
            var extend = __webpack_require__(2);
            var on = __webpack_require__(10);
            var off = __webpack_require__(11);
            var addClass = __webpack_require__(29);
            var closest = __webpack_require__(12);
            var removeElement = __webpack_require__(13);
            var removeClass = __webpack_require__(32);
            var isHTMLNode = __webpack_require__(14);
            var isNumber = __webpack_require__(33);
            var Spinbox = __webpack_require__(34);
            var Selectbox = __webpack_require__(38);
            var util = __webpack_require__(15);
            var localeTexts = __webpack_require__(40);
            var tmpl = __webpack_require__(41);
            var meridiemTmpl = __webpack_require__(42);
            var SELECTOR_HOUR_ELEMENT = ".tui-timepicker-hour";
            var SELECTOR_MINUTE_ELEMENT = ".tui-timepicker-minute";
            var SELECTOR_MERIDIEM_ELEMENT = ".tui-timepicker-meridiem";
            var CLASS_NAME_LEFT_MERIDIEM = "tui-has-left";
            var CLASS_NAME_HIDDEN = "tui-hidden";
            var CLASS_NAME_CHECKED = "tui-timepicker-meridiem-checked";
            var INPUT_TYPE_SPINBOX = "spinbox";
            var INPUT_TYPE_SELECTBOX = "selectbox";
            var START_NUMBER_OF_TIME = 0;
            var END_NUMBER_OF_MINUTE = 59;
            var END_NUMBER_OF_HOUR = 23;
            var END_NUMBER_OF_HOUR_WITH_MERIDIEM = 12;
            var mergeDefaultOptions = function(options) {
              return extend(
                {
                  language: "en",
                  initialHour: 0,
                  initialMinute: 0,
                  showMeridiem: true,
                  inputType: "selectbox",
                  hourStep: 1,
                  minuteStep: 1,
                  meridiemPosition: "right",
                  format: "h:m",
                  disabledHours: [],
                  disabledMinutes: {},
                  usageStatistics: true
                },
                options
              );
            };
            var TimePicker = defineClass(
              {
                static: {
                  localeTexts
                },
                init: function(container, options) {
                  options = mergeDefaultOptions(options);
                  this.id = util.getUniqueId();
                  this.container = isHTMLNode(container) ? container : document.querySelector(container);
                  this.element = null;
                  this.meridiemElement = null;
                  this.amEl = null;
                  this.pmEl = null;
                  this.showMeridiem = options.showMeridiem;
                  this.meridiemPosition = options.meridiemPosition;
                  this.hourInput = null;
                  this.minuteInput = null;
                  this.hour = options.initialHour;
                  this.minute = options.initialMinute;
                  this.hourStep = options.hourStep;
                  this.minuteStep = options.minuteStep;
                  this.disabledHours = options.disabledHours;
                  this.disabledMinutes = options.disabledMinutes;
                  this.inputType = options.inputType;
                  this.localeText = localeTexts[options.language];
                  this.format = this.getValidTimeFormat(options.format);
                  this.render();
                  this.setEvents();
                  if (options.usageStatistics) {
                    util.sendHostName();
                  }
                },
                setEvents: function() {
                  this.hourInput.on("change", this.onChangeTimeInput, this);
                  this.minuteInput.on("change", this.onChangeTimeInput, this);
                  if (this.showMeridiem) {
                    if (this.inputType === INPUT_TYPE_SELECTBOX) {
                      on(this.meridiemElement.querySelector("select"), "change", this.onChangeMeridiem, this);
                    } else if (this.inputType === INPUT_TYPE_SPINBOX) {
                      on(this.meridiemElement, "click", this.onChangeMeridiem, this);
                    }
                  }
                },
                removeEvents: function() {
                  this.off();
                  this.hourInput.destroy();
                  this.minuteInput.destroy();
                  if (this.showMeridiem) {
                    if (this.inputType === INPUT_TYPE_SELECTBOX) {
                      off(this.meridiemElement.querySelector("select"), "change", this.onChangeMeridiem, this);
                    } else if (this.inputType === INPUT_TYPE_SPINBOX) {
                      off(this.meridiemElement, "click", this.onChangeMeridiem, this);
                    }
                  }
                },
                render: function() {
                  var context = {
                    showMeridiem: this.showMeridiem,
                    isSpinbox: this.inputType === "spinbox"
                  };
                  if (this.showMeridiem) {
                    extend(context, {
                      meridiemElement: this.makeMeridiemHTML()
                    });
                  }
                  if (this.element) {
                    removeElement(this.element);
                  }
                  this.container.innerHTML = tmpl(context);
                  this.element = this.container.firstChild;
                  this.renderTimeInputs();
                  if (this.showMeridiem) {
                    this.setMeridiemElement();
                  }
                },
                setMeridiemElement: function() {
                  if (this.meridiemPosition === "left") {
                    addClass(this.element, CLASS_NAME_LEFT_MERIDIEM);
                  }
                  this.meridiemElement = this.element.querySelector(SELECTOR_MERIDIEM_ELEMENT);
                  this.amEl = this.meridiemElement.querySelector('[value="AM"]');
                  this.pmEl = this.meridiemElement.querySelector('[value="PM"]');
                  this.syncToMeridiemElements();
                },
                makeMeridiemHTML: function() {
                  var localeText = this.localeText;
                  return meridiemTmpl({
                    am: localeText.am,
                    pm: localeText.pm,
                    radioId: this.id,
                    isSpinbox: this.inputType === "spinbox"
                  });
                },
                renderTimeInputs: function() {
                  var hour = this.hour;
                  var showMeridiem = this.showMeridiem;
                  var hourElement = this.element.querySelector(SELECTOR_HOUR_ELEMENT);
                  var minuteElement = this.element.querySelector(SELECTOR_MINUTE_ELEMENT);
                  var BoxComponent = this.inputType.toLowerCase() === "selectbox" ? Selectbox : Spinbox;
                  var formatExplode = this.format.split(":");
                  var hourItems = this.getHourItems();
                  if (showMeridiem) {
                    hour = util.getMeridiemHour(hour);
                  }
                  this.hourInput = new BoxComponent(hourElement, {
                    initialValue: hour,
                    items: hourItems,
                    format: formatExplode[0],
                    disabledItems: this.makeDisabledStatItems(hourItems)
                  });
                  this.minuteInput = new BoxComponent(minuteElement, {
                    initialValue: this.minute,
                    items: this.getMinuteItems(),
                    format: formatExplode[1]
                  });
                },
                makeDisabledStatItems: function(hourItems) {
                  var result = [];
                  var disabledHours = this.disabledHours.slice();
                  if (this.showMeridiem) {
                    disabledHours = this.meridiemableTime(disabledHours);
                  }
                  forEachArray(hourItems, function(hour) {
                    result.push(inArray(hour, disabledHours) >= 0);
                  });
                  return result;
                },
                meridiemableTime: function(disabledHours) {
                  var diffHour = 0;
                  var startHour = 0;
                  var endHour = 11;
                  var result = [];
                  if (this.hour >= 12) {
                    diffHour = 12;
                    startHour = 12;
                    endHour = 23;
                  }
                  forEachArray(disabledHours, function(hour) {
                    if (hour >= startHour && hour <= endHour) {
                      result.push(hour - diffHour === 0 ? 12 : hour - diffHour);
                    }
                  });
                  return result;
                },
                getValidTimeFormat: function(format) {
                  if (!format.match(/^[h]{1,2}:[m]{1,2}$/i)) {
                    return "h:m";
                  }
                  return format.toLowerCase();
                },
                syncToMeridiemElements: function() {
                  var selectedEl = this.hour >= 12 ? this.pmEl : this.amEl;
                  var notSelectedEl = selectedEl === this.pmEl ? this.amEl : this.pmEl;
                  selectedEl.setAttribute("selected", true);
                  selectedEl.setAttribute("checked", true);
                  addClass(selectedEl, CLASS_NAME_CHECKED);
                  notSelectedEl.removeAttribute("selected");
                  notSelectedEl.removeAttribute("checked");
                  removeClass(notSelectedEl, CLASS_NAME_CHECKED);
                },
                syncToInputs: function() {
                  var hour = this.hour;
                  var minute = this.minute;
                  if (this.showMeridiem) {
                    hour = util.getMeridiemHour(hour);
                  }
                  this.hourInput.setValue(hour, true);
                  this.minuteInput.setValue(minute, true);
                },
                onChangeMeridiem: function(ev) {
                  var hour = this.hour;
                  var target = util.getTarget(ev);
                  if (target.value && closest(target, SELECTOR_MERIDIEM_ELEMENT)) {
                    hour = this.to24Hour(target.value === "PM", hour);
                    this.setTime(hour, this.minute);
                    this.setDisabledHours();
                    this.setDisabledMinutes(hour);
                  }
                },
                onChangeTimeInput: function() {
                  var hour = this.hourInput.getValue();
                  var minute = this.minuteInput.getValue();
                  var isPM = this.hour >= 12;
                  if (this.showMeridiem) {
                    hour = this.to24Hour(isPM, hour);
                  }
                  this.setTime(hour, minute);
                  this.setDisabledMinutes(hour);
                },
                to24Hour: function(isPM, hour) {
                  hour %= 12;
                  if (isPM) {
                    hour += 12;
                  }
                  return hour;
                },
                setDisabledHours: function() {
                  var hourItems = this.getHourItems();
                  var disabledItems = this.makeDisabledStatItems(hourItems);
                  this.hourInput.setDisabledItems(disabledItems);
                },
                setDisabledMinutes: function(hour) {
                  var disabledItems;
                  disabledItems = this.disabledMinutes[hour] || [];
                  this.minuteInput.setDisabledItems(disabledItems);
                },
                getHourItems: function() {
                  var step = this.hourStep;
                  return this.showMeridiem ? util.getRangeArr(1, 12, step) : util.getRangeArr(0, 23, step);
                },
                getMinuteItems: function() {
                  return util.getRangeArr(0, 59, this.minuteStep);
                },
                validItems: function(hour, minute) {
                  if (!isNumber(hour) || !isNumber(minute)) {
                    return false;
                  }
                  if (this.showMeridiem) {
                    hour = util.getMeridiemHour(hour);
                  }
                  return inArray(hour, this.getHourItems()) > -1 && inArray(minute, this.getMinuteItems()) > -1;
                },
                setHourStep: function(step) {
                  this.hourStep = step;
                  this.hourInput.fire("changeItems", this.getHourItems());
                },
                getHourStep: function() {
                  return this.hourStep;
                },
                setMinuteStep: function(step) {
                  this.minuteStep = step;
                  this.minuteInput.fire("changeItems", this.getMinuteItems());
                },
                getMinuteStep: function() {
                  return this.minuteStep;
                },
                show: function() {
                  removeClass(this.element, CLASS_NAME_HIDDEN);
                },
                hide: function() {
                  addClass(this.element, CLASS_NAME_HIDDEN);
                },
                setHour: function(hour) {
                  return this.setTime(hour, this.minute);
                },
                setMinute: function(minute) {
                  return this.setTime(this.hour, minute);
                },
                setTime: function(hour, minute, silent) {
                  if (!this.validItems(hour, minute)) {
                    return;
                  }
                  this.hour = hour;
                  this.minute = minute;
                  this.syncToInputs();
                  if (this.showMeridiem) {
                    this.syncToMeridiemElements();
                  }
                  if (!silent) {
                    this.fire("change", {
                      hour: this.hour,
                      minute: this.minute
                    });
                  }
                },
                setRange: function(begin, end) {
                  var beginHour = begin.hour;
                  var beginMin = begin.minute;
                  var endHour, endMin;
                  if (!this.isValidRange(begin, end)) {
                    return;
                  }
                  if (end) {
                    endHour = end.hour;
                    endMin = end.minute;
                  }
                  this.setRangeHour(beginHour, endHour);
                  this.setRangeMinute(beginHour, beginMin, endHour, endMin);
                  this.applyRange(beginHour, beginMin, endHour);
                },
                setRangeHour: function(beginHour, endHour) {
                  var disabledHours = util.getRangeArr(START_NUMBER_OF_TIME, beginHour - 1);
                  if (endHour) {
                    disabledHours = disabledHours.concat(util.getRangeArr(endHour + 1, END_NUMBER_OF_HOUR));
                  }
                  this.disabledHours = disabledHours.slice();
                },
                setRangeMinute: function(beginHour, beginMin, endHour, endMin) {
                  var disabledMinRanges = [];
                  if (!beginHour && !beginMin) {
                    return;
                  }
                  disabledMinRanges.push({
                    begin: START_NUMBER_OF_TIME,
                    end: beginMin
                  });
                  if (endHour && endMin) {
                    disabledMinRanges.push({
                      begin: endMin,
                      end: END_NUMBER_OF_MINUTE
                    });
                    if (beginHour === endHour) {
                      this.disabledMinutes[beginHour] = util.getDisabledMinuteArr(disabledMinRanges, this.minuteStep).slice();
                      return;
                    }
                    this.disabledMinutes[endHour] = util.getDisabledMinuteArr([disabledMinRanges[1]], this.minuteStep).slice();
                  }
                  this.disabledMinutes[beginHour] = util.getDisabledMinuteArr([disabledMinRanges[0]], this.minuteStep).slice();
                },
                applyRange: function(beginHour, beginMin, endHour) {
                  var targetMinuteIndex = Math.ceil(beginMin / this.minuteStep);
                  var targetHour = beginHour;
                  var targetMinute = targetMinuteIndex * this.minuteStep;
                  var diffFromSelectableMinute;
                  if (this.isLaterThanSetTime(beginHour, beginMin)) {
                    if (this.disabledMinutes[targetHour][targetMinuteIndex]) {
                      diffFromSelectableMinute = this.disabledMinutes[targetHour].slice(targetMinuteIndex).findIndex(function(isMinuteDisabled) {
                        return !isMinuteDisabled;
                      }) * this.minuteStep;
                      targetMinute = diffFromSelectableMinute >= 0 ? targetMinute + diffFromSelectableMinute : 60;
                    }
                    if (this.hourStep !== 1 && beginHour % this.hourStep !== 1 || targetMinute >= 60) {
                      targetHour = beginHour + beginHour % this.hourStep + 1;
                      targetMinute = 0;
                    }
                    this.setTime(targetHour, targetMinute);
                  }
                  this.setDisabledHours();
                  this.setDisabledMinutes(this.hour);
                  if (this.showMeridiem) {
                    this.syncToMeridiemElements();
                    util.setDisabled(this.amEl, beginHour >= END_NUMBER_OF_HOUR_WITH_MERIDIEM);
                    util.setDisabled(this.pmEl, endHour < END_NUMBER_OF_HOUR_WITH_MERIDIEM);
                  }
                },
                resetMinuteRange: function() {
                  var i;
                  this.disabledMinutes = {};
                  for (i = 0; i <= END_NUMBER_OF_HOUR; i += 1) {
                    this.setDisabledMinutes(this.hour);
                  }
                },
                isValidRange: function(begin, end) {
                  var beginHour = begin.hour;
                  var beginMin = begin.minute;
                  var endHour, endMin;
                  if (!this.isValidTime(beginHour, beginMin)) {
                    return false;
                  }
                  if (!end) {
                    return true;
                  }
                  endHour = end.hour;
                  endMin = end.minute;
                  return this.isValidTime(endHour, endMin) && this.compareTimes(begin, end) > 0;
                },
                isValidTime: function(hour, minute) {
                  return hour >= START_NUMBER_OF_TIME && hour <= END_NUMBER_OF_HOUR && minute >= START_NUMBER_OF_TIME && minute <= END_NUMBER_OF_MINUTE;
                },
                isLaterThanSetTime: function(hour, minute) {
                  return hour > this.hour || hour === this.hour && minute > this.minute;
                },
                compareTimes: function(begin, end) {
                  var first = new Date(0);
                  var second = new Date(0);
                  first.setHours(begin.hour, begin.minute);
                  second.setHours(end.hour, end.minute);
                  return second.getTime() - first.getTime();
                },
                getHour: function() {
                  return this.hour;
                },
                getMinute: function() {
                  return this.minute;
                },
                changeLanguage: function(language) {
                  this.localeText = localeTexts[language];
                  this.render();
                },
                destroy: function() {
                  this.removeEvents();
                  removeElement(this.element);
                  this.container = this.showMeridiem = this.hourInput = this.minuteInput = this.hour = this.minute = this.inputType = this.element = this.meridiemElement = this.amEl = this.pmEl = null;
                }
              }
            );
            CustomEvents.mixin(TimePicker);
            module3.exports = TimePicker;
          },
          function(module3, exports3, __webpack_require__) {
            var isUndefined = __webpack_require__(5);
            var isNull = __webpack_require__(24);
            function isExisty(param) {
              return !isUndefined(param) && !isNull(param);
            }
            module3.exports = isExisty;
          },
          function(module3, exports3, __webpack_require__) {
            function isNull(obj) {
              return obj === null;
            }
            module3.exports = isNull;
          },
          function(module3, exports3, __webpack_require__) {
            function isObject(obj) {
              return obj === Object(obj);
            }
            module3.exports = isObject;
          },
          function(module3, exports3, __webpack_require__) {
            function isFunction(obj) {
              return obj instanceof Function;
            }
            module3.exports = isFunction;
          },
          function(module3, exports3, __webpack_require__) {
            var createObject = __webpack_require__(28);
            function inherit(subType, superType) {
              var prototype = createObject(superType.prototype);
              prototype.constructor = subType;
              subType.prototype = prototype;
            }
            module3.exports = inherit;
          },
          function(module3, exports3, __webpack_require__) {
            function createObject(obj) {
              function F() {
              }
              F.prototype = obj;
              return new F();
            }
            module3.exports = createObject;
          },
          function(module3, exports3, __webpack_require__) {
            var forEach = __webpack_require__(4);
            var inArray = __webpack_require__(0);
            var getClass = __webpack_require__(18);
            var setClassName = __webpack_require__(19);
            function addClass(element) {
              var cssClass = Array.prototype.slice.call(arguments, 1);
              var classList = element.classList;
              var newClass = [];
              var origin;
              if (classList) {
                forEach(cssClass, function(name) {
                  element.classList.add(name);
                });
                return;
              }
              origin = getClass(element);
              if (origin) {
                cssClass = [].concat(origin.split(/\s+/), cssClass);
              }
              forEach(cssClass, function(cls) {
                if (inArray(cls, newClass) < 0) {
                  newClass.push(cls);
                }
              });
              setClassName(element, newClass);
            }
            module3.exports = addClass;
          },
          function(module3, exports3, __webpack_require__) {
            var inArray = __webpack_require__(0);
            var toArray = __webpack_require__(31);
            var elProto = Element.prototype;
            var matchSelector = elProto.matches || elProto.webkitMatchesSelector || elProto.mozMatchesSelector || elProto.msMatchesSelector || function(selector) {
              var doc = this.document || this.ownerDocument;
              return inArray(this, toArray(doc.querySelectorAll(selector))) > -1;
            };
            function matches(element, selector) {
              return matchSelector.call(element, selector);
            }
            module3.exports = matches;
          },
          function(module3, exports3, __webpack_require__) {
            var forEachArray = __webpack_require__(1);
            function toArray(arrayLike) {
              var arr;
              try {
                arr = Array.prototype.slice.call(arrayLike);
              } catch (e) {
                arr = [];
                forEachArray(arrayLike, function(value) {
                  arr.push(value);
                });
              }
              return arr;
            }
            module3.exports = toArray;
          },
          function(module3, exports3, __webpack_require__) {
            var forEachArray = __webpack_require__(1);
            var inArray = __webpack_require__(0);
            var getClass = __webpack_require__(18);
            var setClassName = __webpack_require__(19);
            function removeClass(element) {
              var cssClass = Array.prototype.slice.call(arguments, 1);
              var classList = element.classList;
              var origin, newClass;
              if (classList) {
                forEachArray(cssClass, function(name) {
                  classList.remove(name);
                });
                return;
              }
              origin = getClass(element).split(/\s+/);
              newClass = [];
              forEachArray(origin, function(name) {
                if (inArray(name, cssClass) < 0) {
                  newClass.push(name);
                }
              });
              setClassName(element, newClass);
            }
            module3.exports = removeClass;
          },
          function(module3, exports3, __webpack_require__) {
            function isNumber(obj) {
              return typeof obj === "number" || obj instanceof Number;
            }
            module3.exports = isNumber;
          },
          function(module3, exports3, __webpack_require__) {
            var inArray = __webpack_require__(0);
            var forEachArray = __webpack_require__(1);
            var CustomEvents = __webpack_require__(8);
            var defineClass = __webpack_require__(9);
            var extend = __webpack_require__(2);
            var on = __webpack_require__(10);
            var off = __webpack_require__(11);
            var closest = __webpack_require__(12);
            var removeElement = __webpack_require__(13);
            var isHTMLNode = __webpack_require__(14);
            var util = __webpack_require__(15);
            var tmpl = __webpack_require__(37);
            var SELECTOR_UP_BUTTON = ".tui-timepicker-btn-up";
            var SELECTOR_DOWN_BUTTON = ".tui-timepicker-btn-down";
            var Spinbox = defineClass(
              {
                init: function(container, options) {
                  options = extend(
                    {
                      items: []
                    },
                    options
                  );
                  this._container = isHTMLNode(container) ? container : document.querySelector(container);
                  this._element = null;
                  this._inputElement = null;
                  this._items = options.items;
                  this._disabledItems = options.disabledItems || [];
                  this._selectedIndex = Math.max(0, inArray(options.initialValue, this._items));
                  this._format = options.format;
                  this._render();
                  this._setEvents();
                },
                _render: function() {
                  var index = inArray(this.getValue(), this._items);
                  var context;
                  if (this._disabledItems[index]) {
                    this._selectedIndex = this._findEnabledIndex();
                  }
                  context = {
                    maxLength: this._getMaxLength(),
                    initialValue: this.getValue(),
                    format: this._format,
                    formatTime: util.formatTime
                  };
                  this._container.innerHTML = tmpl(context);
                  this._element = this._container.firstChild;
                  this._inputElement = this._element.querySelector("input");
                },
                _findEnabledIndex: function() {
                  return inArray(false, this._disabledItems);
                },
                _getMaxLength: function() {
                  var lengths = [];
                  forEachArray(this._items, function(item) {
                    lengths.push(String(item).length);
                  });
                  return Math.max.apply(null, lengths);
                },
                setDisabledItems: function(disabledItems) {
                  this._disabledItems = disabledItems;
                  this._changeToInputValue();
                },
                _setEvents: function() {
                  on(this._container, "click", this._onClickHandler, this);
                  on(this._inputElement, "keydown", this._onKeydownInputElement, this);
                  on(this._inputElement, "change", this._onChangeHandler, this);
                  this.on(
                    "changeItems",
                    function(items) {
                      this._items = items;
                      this._render();
                    },
                    this
                  );
                },
                _removeEvents: function() {
                  this.off();
                  off(this._container, "click", this._onClickHandler, this);
                  off(this._inputElement, "keydown", this._onKeydownInputElement, this);
                  off(this._inputElement, "change", this._onChangeHandler, this);
                },
                _onClickHandler: function(ev) {
                  var target = util.getTarget(ev);
                  if (closest(target, SELECTOR_DOWN_BUTTON)) {
                    this._setNextValue(true);
                  } else if (closest(target, SELECTOR_UP_BUTTON)) {
                    this._setNextValue(false);
                  }
                },
                _setNextValue: function(isDown) {
                  var index = this._selectedIndex;
                  if (isDown) {
                    index = index ? index - 1 : this._items.length - 1;
                  } else {
                    index = index < this._items.length - 1 ? index + 1 : 0;
                  }
                  if (this._disabledItems[index]) {
                    this._selectedIndex = index;
                    this._setNextValue(isDown);
                  } else {
                    this.setValue(this._items[index]);
                  }
                },
                _onKeydownInputElement: function(ev) {
                  var keyCode = ev.which || ev.keyCode;
                  var isDown;
                  if (closest(util.getTarget(ev), "input")) {
                    switch (keyCode) {
                      case 38:
                        isDown = false;
                        break;
                      case 40:
                        isDown = true;
                        break;
                      default:
                        return;
                    }
                    this._setNextValue(isDown);
                  }
                },
                _onChangeHandler: function(ev) {
                  if (closest(util.getTarget(ev), "input")) {
                    this._changeToInputValue();
                  }
                },
                _changeToInputValue: function(silent) {
                  var newValue = Number(this._inputElement.value);
                  var newIndex = inArray(newValue, this._items);
                  if (this._disabledItems[newIndex]) {
                    newIndex = this._findEnabledIndex();
                    newValue = this._items[newIndex];
                  } else if (newIndex === this._selectedIndex) {
                    return;
                  }
                  if (newIndex === -1) {
                    this.setValue(this._items[this._selectedIndex], silent);
                  } else {
                    this._selectedIndex = newIndex;
                    if (!silent) {
                      this.fire("change", {
                        value: newValue
                      });
                    }
                  }
                },
                setValue: function(value, silent) {
                  this._inputElement.value = util.formatTime(value, this._format);
                  this._changeToInputValue(silent);
                },
                getValue: function() {
                  return this._items[this._selectedIndex];
                },
                destroy: function() {
                  this._removeEvents();
                  removeElement(this._element);
                  this._container = this._element = this._inputElement = this._items = this._selectedIndex = null;
                }
              }
            );
            CustomEvents.mixin(Spinbox);
            module3.exports = Spinbox;
          },
          function(module3, exports3, __webpack_require__) {
            var isUndefined = __webpack_require__(5);
            var imagePing = __webpack_require__(36);
            var ms7days = 7 * 24 * 60 * 60 * 1e3;
            function isExpired(date) {
              var now = new Date().getTime();
              return now - date > ms7days;
            }
            function sendHostname(appName, trackingId) {
              var url = "https://www.google-analytics.com/collect";
              var hostname = location.hostname;
              var hitType = "event";
              var eventCategory = "use";
              var applicationKeyForStorage = "TOAST UI " + appName + " for " + hostname + ": Statistics";
              var date = window.localStorage.getItem(applicationKeyForStorage);
              if (!isUndefined(window.tui) && window.tui.usageStatistics === false) {
                return;
              }
              if (date && !isExpired(date)) {
                return;
              }
              window.localStorage.setItem(applicationKeyForStorage, new Date().getTime());
              setTimeout(function() {
                if (document.readyState === "interactive" || document.readyState === "complete") {
                  imagePing(url, {
                    v: 1,
                    t: hitType,
                    tid: trackingId,
                    cid: hostname,
                    dp: hostname,
                    dh: appName,
                    el: appName,
                    ec: eventCategory
                  });
                }
              }, 1e3);
            }
            module3.exports = sendHostname;
          },
          function(module3, exports3, __webpack_require__) {
            var forEachOwnProperties = __webpack_require__(16);
            function imagePing(url, trackingInfo) {
              var trackingElement = document.createElement("img");
              var queryString = "";
              forEachOwnProperties(trackingInfo, function(value, key) {
                queryString += "&" + key + "=" + value;
              });
              queryString = queryString.substring(1);
              trackingElement.src = url + "?" + queryString;
              trackingElement.style.display = "none";
              document.body.appendChild(trackingElement);
              document.body.removeChild(trackingElement);
              return trackingElement;
            }
            module3.exports = imagePing;
          },
          function(module3, exports3, __webpack_require__) {
            var template = __webpack_require__(7);
            module3.exports = function(context) {
              var source = '<div class="tui-timepicker-btn-area">  <input type="text" class="tui-timepicker-spinbox-input"        maxlength="{{maxLength}}"        size="{{maxLength}}"        value="{{formatTime initialValue format}}"        aria-label="TimePicker spinbox value">  <button type="button" class="tui-timepicker-btn tui-timepicker-btn-up">    <span class="tui-ico-t-btn">Increase</span>  </button>  <button type="button" class="tui-timepicker-btn tui-timepicker-btn-down">    <span class="tui-ico-t-btn">Decrease</span>  </button></div>';
              return template(source, context);
            };
          },
          function(module3, exports3, __webpack_require__) {
            var inArray = __webpack_require__(0);
            var CustomEvents = __webpack_require__(8);
            var defineClass = __webpack_require__(9);
            var extend = __webpack_require__(2);
            var on = __webpack_require__(10);
            var off = __webpack_require__(11);
            var closest = __webpack_require__(12);
            var removeElement = __webpack_require__(13);
            var isHTMLNode = __webpack_require__(14);
            var util = __webpack_require__(15);
            var tmpl = __webpack_require__(39);
            var Selectbox = defineClass(
              {
                init: function(container, options) {
                  options = extend(
                    {
                      items: []
                    },
                    options
                  );
                  this._container = isHTMLNode(container) ? container : document.querySelector(container);
                  this._items = options.items || [];
                  this._disabledItems = options.disabledItems || [];
                  this._selectedIndex = Math.max(0, inArray(options.initialValue, this._items));
                  this._format = options.format;
                  this._element = null;
                  this._render();
                  this._setEvents();
                },
                _render: function() {
                  var context;
                  this._changeEnabledIndex();
                  context = {
                    items: this._items,
                    format: this._format,
                    initialValue: this.getValue(),
                    disabledItems: this._disabledItems,
                    formatTime: util.formatTime,
                    equals: function(a, b) {
                      return a === b;
                    }
                  };
                  if (this._element) {
                    this._removeElement();
                  }
                  this._container.innerHTML = tmpl(context);
                  this._element = this._container.firstChild;
                  on(this._element, "change", this._onChangeHandler, this);
                },
                _changeEnabledIndex: function() {
                  var index = inArray(this.getValue(), this._items);
                  if (this._disabledItems[index]) {
                    this._selectedIndex = inArray(false, this._disabledItems);
                  }
                },
                setDisabledItems: function(disabledItems) {
                  this._disabledItems = disabledItems;
                  this._render();
                },
                _setEvents: function() {
                  this.on(
                    "changeItems",
                    function(items) {
                      this._items = items;
                      this._render();
                    },
                    this
                  );
                },
                _removeEvents: function() {
                  this.off();
                },
                _removeElement: function() {
                  off(this._element, "change", this._onChangeHandler, this);
                  removeElement(this._element);
                },
                _onChangeHandler: function(ev) {
                  if (closest(util.getTarget(ev), "select")) {
                    this._setNewValue();
                  }
                },
                _setNewValue: function(silent) {
                  var newValue = Number(this._element.value);
                  this._selectedIndex = inArray(newValue, this._items);
                  if (!silent) {
                    this.fire("change", {
                      value: newValue
                    });
                  }
                },
                getValue: function() {
                  return this._items[this._selectedIndex];
                },
                setValue: function(value, silent) {
                  var newIndex = inArray(value, this._items);
                  if (newIndex > -1 && newIndex !== this._selectedIndex) {
                    this._selectedIndex = newIndex;
                    this._element.value = value;
                    this._setNewValue(silent);
                  }
                },
                destroy: function() {
                  this._removeEvents();
                  this._removeElement();
                  this._container = this._items = this._selectedIndex = this._element = null;
                }
              }
            );
            CustomEvents.mixin(Selectbox);
            module3.exports = Selectbox;
          },
          function(module3, exports3, __webpack_require__) {
            var template = __webpack_require__(7);
            module3.exports = function(context) {
              var source = '<select class="tui-timepicker-select" aria-label="Time">  {{each items}}    {{if equals initialValue @this}}      <option value="{{@this}}" selected {{if disabledItems[@index]}}disabled{{/if}}>{{formatTime @this format}}</option>    {{else}}      <option value="{{@this}}" {{if disabledItems[@index]}}disabled{{/if}}>{{formatTime @this format}}</option>    {{/if}}  {{/each}}</select>';
              return template(source, context);
            };
          },
          function(module3, exports3, __webpack_require__) {
            module3.exports = {
              en: {
                am: "AM",
                pm: "PM"
              },
              ko: {
                am: "\uC624\uC804",
                pm: "\uC624\uD6C4"
              }
            };
          },
          function(module3, exports3, __webpack_require__) {
            var template = __webpack_require__(7);
            module3.exports = function(context) {
              var source = '<div class="tui-timepicker">  <div class="tui-timepicker-body">    <div class="tui-timepicker-row">      {{if isSpinbox}}        <div class="tui-timepicker-column tui-timepicker-spinbox tui-timepicker-hour"></div>        <span class="tui-timepicker-column tui-timepicker-colon"><span class="tui-ico-colon">:</span></span>        <div class="tui-timepicker-column tui-timepicker-spinbox tui-timepicker-minute"></div>        {{if showMeridiem}}          {{meridiemElement}}        {{/if}}      {{else}}        <div class="tui-timepicker-column tui-timepicker-selectbox tui-timepicker-hour"></div>        <span class="tui-timepicker-column tui-timepicker-colon"><span class="tui-ico-colon">:</span></span>        <div class="tui-timepicker-column tui-timepicker-selectbox tui-timepicker-minute"></div>        {{if showMeridiem}}          {{meridiemElement}}        {{/if}}      {{/if}}    </div>  </div></div>';
              return template(source, context);
            };
          },
          function(module3, exports3, __webpack_require__) {
            var template = __webpack_require__(7);
            module3.exports = function(context) {
              var source = '{{if isSpinbox}}  <div class="tui-timepicker-column tui-timepicker-checkbox tui-timepicker-meridiem">    <div class="tui-timepicker-check-area">      <ul class="tui-timepicker-check-lst">        <li class="tui-timepicker-check">          <div class="tui-timepicker-radio">            <input type="radio"                  name="optionsRadios-{{radioId}}"                  value="AM"                  class="tui-timepicker-radio-am"                  id="tui-timepicker-radio-am-{{radioId}}">            <label for="tui-timepicker-radio-am-{{radioId}}" class="tui-timepicker-radio-label">              <span class="tui-timepicker-input-radio"></span>{{am}}            </label>          </div>        </li>        <li class="tui-timepicker-check">          <div class="tui-timepicker-radio">            <input type="radio"                  name="optionsRadios-{{radioId}}"                  value="PM"                  class="tui-timepicker-radio-pm"                  id="tui-timepicker-radio-pm-{{radioId}}">            <label for="tui-timepicker-radio-pm-{{radioId}}" class="tui-timepicker-radio-label">              <span class="tui-timepicker-input-radio"></span>{{pm}}            </label>          </div>        </li>      </ul>    </div>  </div>{{else}}  <div class="tui-timepicker-column tui-timepicker-selectbox tui-is-add-picker tui-timepicker-meridiem">    <select class="tui-timepicker-select" aria-label="AM/PM">      <option value="AM">{{am}}</option>      <option value="PM">{{pm}}</option>    </select>  </div>{{/if}}';
              return template(source, context);
            };
          }
        ]);
      });
    })(tuiTimePicker);
    return tuiTimePicker.exports;
  }
  /*!
   * TOAST UI Date Picker
   * @version 4.3.3
   * @author NHN Cloud. FE Development Lab <dl_javascript@nhn.com>
   * @license MIT
   */
  var hasRequiredTuiDatePicker;
  function requireTuiDatePicker() {
    if (hasRequiredTuiDatePicker)
      return tuiDatePicker.exports;
    hasRequiredTuiDatePicker = 1;
    (function(module2, exports2) {
      (function webpackUniversalModuleDefinition(root, factory) {
        module2.exports = factory(requireTuiTimePicker());
      })(window, function(__WEBPACK_EXTERNAL_MODULE__43__) {
        return function(modules) {
          var installedModules = {};
          function __webpack_require__(moduleId) {
            if (installedModules[moduleId]) {
              return installedModules[moduleId].exports;
            }
            var module3 = installedModules[moduleId] = {
              i: moduleId,
              l: false,
              exports: {}
            };
            modules[moduleId].call(module3.exports, module3, module3.exports, __webpack_require__);
            module3.l = true;
            return module3.exports;
          }
          __webpack_require__.m = modules;
          __webpack_require__.c = installedModules;
          __webpack_require__.d = function(exports3, name, getter) {
            if (!__webpack_require__.o(exports3, name)) {
              Object.defineProperty(exports3, name, { enumerable: true, get: getter });
            }
          };
          __webpack_require__.r = function(exports3) {
            if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
              Object.defineProperty(exports3, Symbol.toStringTag, { value: "Module" });
            }
            Object.defineProperty(exports3, "__esModule", { value: true });
          };
          __webpack_require__.t = function(value, mode) {
            if (mode & 1)
              value = __webpack_require__(value);
            if (mode & 8)
              return value;
            if (mode & 4 && typeof value === "object" && value && value.__esModule)
              return value;
            var ns = /* @__PURE__ */ Object.create(null);
            __webpack_require__.r(ns);
            Object.defineProperty(ns, "default", { enumerable: true, value });
            if (mode & 2 && typeof value != "string")
              for (var key in value)
                __webpack_require__.d(ns, key, function(key2) {
                  return value[key2];
                }.bind(null, key));
            return ns;
          };
          __webpack_require__.n = function(module3) {
            var getter = module3 && module3.__esModule ? function getDefault() {
              return module3["default"];
            } : function getModuleExports() {
              return module3;
            };
            __webpack_require__.d(getter, "a", getter);
            return getter;
          };
          __webpack_require__.o = function(object, property) {
            return Object.prototype.hasOwnProperty.call(object, property);
          };
          __webpack_require__.p = "dist";
          return __webpack_require__(__webpack_require__.s = 34);
        }([
          function(module3, exports3, __webpack_require__) {
            var inherit = __webpack_require__(35);
            var extend = __webpack_require__(7);
            function defineClass(parent, props) {
              var obj;
              if (!props) {
                props = parent;
                parent = null;
              }
              obj = props.init || function() {
              };
              if (parent) {
                inherit(obj, parent);
              }
              if (props.hasOwnProperty("static")) {
                extend(obj, props["static"]);
                delete props["static"];
              }
              extend(obj.prototype, props);
              return obj;
            }
            module3.exports = defineClass;
          },
          function(module3, exports3, __webpack_require__) {
            module3.exports = {
              TYPE_DATE: "date",
              TYPE_MONTH: "month",
              TYPE_YEAR: "year",
              TYPE_HOUR: "hour",
              TYPE_MINUTE: "minute",
              TYPE_MERIDIEM: "meridiem",
              MIN_DATE: new Date(1900, 0, 1),
              MAX_DATE: new Date(2999, 11, 31),
              DEFAULT_LANGUAGE_TYPE: "en",
              CLASS_NAME_SELECTED: "tui-is-selected",
              CLASS_NAME_PREV_MONTH_BTN: "tui-calendar-btn-prev-month",
              CLASS_NAME_PREV_YEAR_BTN: "tui-calendar-btn-prev-year",
              CLASS_NAME_NEXT_YEAR_BTN: "tui-calendar-btn-next-year",
              CLASS_NAME_NEXT_MONTH_BTN: "tui-calendar-btn-next-month",
              CLASS_NAME_TITLE_TODAY: "tui-calendar-title-today",
              DEFAULT_WEEK_START_DAY: "Sun",
              WEEK_START_DAY_MAP: {
                sun: 0,
                mon: 1,
                tue: 2,
                wed: 3,
                thu: 4,
                fri: 5,
                sat: 6
              }
            };
          },
          function(module3, exports3, __webpack_require__) {
            function forEachArray(arr, iteratee, context) {
              var index = 0;
              var len = arr.length;
              context = context || null;
              for (; index < len; index += 1) {
                if (iteratee.call(context, arr[index], index, arr) === false) {
                  break;
                }
              }
            }
            module3.exports = forEachArray;
          },
          function(module3, exports3, __webpack_require__) {
            var isArray = __webpack_require__(6);
            function inArray(searchElement, array, startIndex) {
              var i;
              var length;
              startIndex = startIndex || 0;
              if (!isArray(array)) {
                return -1;
              }
              if (Array.prototype.indexOf) {
                return Array.prototype.indexOf.call(array, searchElement, startIndex);
              }
              length = array.length;
              for (i = startIndex; startIndex >= 0 && i < length; i += 1) {
                if (array[i] === searchElement) {
                  return i;
                }
              }
              return -1;
            }
            module3.exports = inArray;
          },
          function(module3, exports3, __webpack_require__) {
            var forEachArray = __webpack_require__(2);
            var isHTMLNode = __webpack_require__(46);
            var sendHostname = __webpack_require__(47);
            var currentId = 0;
            var utils = {
              getTarget: function(ev) {
                return ev.target || ev.srcElement;
              },
              getElement: function(param) {
                return isHTMLNode(param) ? param : document.querySelector(param);
              },
              getSelector: function(elem) {
                var selector = "";
                if (elem.id) {
                  selector = "#" + elem.id;
                } else if (elem.className) {
                  selector = "." + elem.className.split(" ")[0];
                }
                return selector;
              },
              generateId: function() {
                currentId += 1;
                return currentId;
              },
              filter: function(arr, iteratee) {
                var result = [];
                forEachArray(arr, function(item) {
                  if (iteratee(item)) {
                    result.push(item);
                  }
                });
                return result;
              },
              sendHostName: function() {
                sendHostname("date-picker", "UA-129987462-1");
              }
            };
            module3.exports = utils;
          },
          function(module3, exports3, __webpack_require__) {
            var isDate = __webpack_require__(28);
            var isNumber = __webpack_require__(15);
            var constants = __webpack_require__(1);
            var TYPE_DATE = constants.TYPE_DATE;
            var TYPE_MONTH = constants.TYPE_MONTH;
            var TYPE_YEAR = constants.TYPE_YEAR;
            var utils = {
              getWeeksCount: function(year, month) {
                var firstDay = utils.getFirstDay(year, month), lastDate = utils.getLastDayInMonth(year, month);
                return Math.ceil((firstDay + lastDate) / 7);
              },
              isValidDate: function(date) {
                return isDate(date) && !isNaN(date.getTime());
              },
              getFirstDay: function(year, month) {
                return new Date(year, month - 1, 1).getDay();
              },
              getFirstDayTimestamp: function(year, month) {
                return new Date(year, month, 1).getTime();
              },
              getLastDayInMonth: function(year, month) {
                return new Date(year, month, 0).getDate();
              },
              prependLeadingZero: function(number) {
                var prefix = "";
                if (number < 10) {
                  prefix = "0";
                }
                return prefix + number;
              },
              getMeridiemHour: function(hour) {
                hour %= 12;
                if (hour === 0) {
                  hour = 12;
                }
                return hour;
              },
              getSafeNumber: function(any, defaultNumber) {
                if (isNaN(defaultNumber) || !isNumber(defaultNumber)) {
                  throw Error("The defaultNumber must be a valid number.");
                }
                if (isNaN(any)) {
                  return defaultNumber;
                }
                return Number(any);
              },
              getDateOfWeek: function(year, month, weekNumber, dayNumber) {
                var firstDayOfMonth = new Date(year, month - 1).getDay();
                var dateOffset = firstDayOfMonth - dayNumber - 1;
                return new Date(year, month - 1, weekNumber * 7 - dateOffset);
              },
              getRangeArr: function(start, end) {
                var arr = [];
                var i;
                if (start > end) {
                  for (i = end; i >= start; i -= 1) {
                    arr.push(i);
                  }
                } else {
                  for (i = start; i <= end; i += 1) {
                    arr.push(i);
                  }
                }
                return arr;
              },
              cloneWithStartOf: function(date, type) {
                type = type || TYPE_DATE;
                date = new Date(date);
                date.setHours(0, 0, 0, 0);
                switch (type) {
                  case TYPE_DATE:
                    break;
                  case TYPE_MONTH:
                    date.setDate(1);
                    break;
                  case TYPE_YEAR:
                    date.setMonth(0, 1);
                    break;
                  default:
                    throw Error("Unsupported type: " + type);
                }
                return date;
              },
              cloneWithEndOf: function(date, type) {
                type = type || TYPE_DATE;
                date = new Date(date);
                date.setHours(23, 59, 59, 999);
                switch (type) {
                  case TYPE_DATE:
                    break;
                  case TYPE_MONTH:
                    date.setMonth(date.getMonth() + 1, 0);
                    break;
                  case TYPE_YEAR:
                    date.setMonth(11, 31);
                    break;
                  default:
                    throw Error("Unsupported type: " + type);
                }
                return date;
              },
              compare: function(dateA, dateB, cmpLevel) {
                var aTimestamp, bTimestamp;
                if (!(utils.isValidDate(dateA) && utils.isValidDate(dateB))) {
                  return NaN;
                }
                if (!cmpLevel) {
                  aTimestamp = dateA.getTime();
                  bTimestamp = dateB.getTime();
                } else {
                  aTimestamp = utils.cloneWithStartOf(dateA, cmpLevel).getTime();
                  bTimestamp = utils.cloneWithStartOf(dateB, cmpLevel).getTime();
                }
                if (aTimestamp > bTimestamp) {
                  return 1;
                }
                return aTimestamp === bTimestamp ? 0 : -1;
              },
              isSame: function(dateA, dateB, cmpLevel) {
                return utils.compare(dateA, dateB, cmpLevel) === 0;
              },
              inRange: function(start, end, target, cmpLevel) {
                return utils.compare(start, target, cmpLevel) < 1 && utils.compare(end, target, cmpLevel) > -1;
              }
            };
            module3.exports = utils;
          },
          function(module3, exports3, __webpack_require__) {
            function isArray(obj) {
              return obj instanceof Array;
            }
            module3.exports = isArray;
          },
          function(module3, exports3, __webpack_require__) {
            function extend(target, objects) {
              var hasOwnProp2 = Object.prototype.hasOwnProperty;
              var source, prop, i, len;
              for (i = 1, len = arguments.length; i < len; i += 1) {
                source = arguments[i];
                for (prop in source) {
                  if (hasOwnProp2.call(source, prop)) {
                    target[prop] = source[prop];
                  }
                }
              }
              return target;
            }
            module3.exports = extend;
          },
          function(module3, exports3, __webpack_require__) {
            var extend = __webpack_require__(7);
            var isExisty = __webpack_require__(37);
            var isString = __webpack_require__(13);
            var isObject = __webpack_require__(22);
            var isArray = __webpack_require__(6);
            var isFunction = __webpack_require__(39);
            var forEach = __webpack_require__(9);
            var R_EVENTNAME_SPLIT = /\s+/g;
            function CustomEvents() {
              this.events = null;
              this.contexts = null;
            }
            CustomEvents.mixin = function(func) {
              extend(func.prototype, CustomEvents.prototype);
            };
            CustomEvents.prototype._getHandlerItem = function(handler, context) {
              var item = { handler };
              if (context) {
                item.context = context;
              }
              return item;
            };
            CustomEvents.prototype._safeEvent = function(eventName) {
              var events = this.events;
              var byName;
              if (!events) {
                events = this.events = {};
              }
              if (eventName) {
                byName = events[eventName];
                if (!byName) {
                  byName = [];
                  events[eventName] = byName;
                }
                events = byName;
              }
              return events;
            };
            CustomEvents.prototype._safeContext = function() {
              var context = this.contexts;
              if (!context) {
                context = this.contexts = [];
              }
              return context;
            };
            CustomEvents.prototype._indexOfContext = function(ctx) {
              var context = this._safeContext();
              var index = 0;
              while (context[index]) {
                if (ctx === context[index][0]) {
                  return index;
                }
                index += 1;
              }
              return -1;
            };
            CustomEvents.prototype._memorizeContext = function(ctx) {
              var context, index;
              if (!isExisty(ctx)) {
                return;
              }
              context = this._safeContext();
              index = this._indexOfContext(ctx);
              if (index > -1) {
                context[index][1] += 1;
              } else {
                context.push([ctx, 1]);
              }
            };
            CustomEvents.prototype._forgetContext = function(ctx) {
              var context, contextIndex;
              if (!isExisty(ctx)) {
                return;
              }
              context = this._safeContext();
              contextIndex = this._indexOfContext(ctx);
              if (contextIndex > -1) {
                context[contextIndex][1] -= 1;
                if (context[contextIndex][1] <= 0) {
                  context.splice(contextIndex, 1);
                }
              }
            };
            CustomEvents.prototype._bindEvent = function(eventName, handler, context) {
              var events = this._safeEvent(eventName);
              this._memorizeContext(context);
              events.push(this._getHandlerItem(handler, context));
            };
            CustomEvents.prototype.on = function(eventName, handler, context) {
              var self2 = this;
              if (isString(eventName)) {
                eventName = eventName.split(R_EVENTNAME_SPLIT);
                forEach(eventName, function(name) {
                  self2._bindEvent(name, handler, context);
                });
              } else if (isObject(eventName)) {
                context = handler;
                forEach(eventName, function(func, name) {
                  self2.on(name, func, context);
                });
              }
            };
            CustomEvents.prototype.once = function(eventName, handler, context) {
              var self2 = this;
              if (isObject(eventName)) {
                context = handler;
                forEach(eventName, function(func, name) {
                  self2.once(name, func, context);
                });
                return;
              }
              function onceHandler() {
                handler.apply(context, arguments);
                self2.off(eventName, onceHandler, context);
              }
              this.on(eventName, onceHandler, context);
            };
            CustomEvents.prototype._spliceMatches = function(arr, predicate) {
              var i = 0;
              var len;
              if (!isArray(arr)) {
                return;
              }
              for (len = arr.length; i < len; i += 1) {
                if (predicate(arr[i]) === true) {
                  arr.splice(i, 1);
                  len -= 1;
                  i -= 1;
                }
              }
            };
            CustomEvents.prototype._matchHandler = function(handler) {
              var self2 = this;
              return function(item) {
                var needRemove = handler === item.handler;
                if (needRemove) {
                  self2._forgetContext(item.context);
                }
                return needRemove;
              };
            };
            CustomEvents.prototype._matchContext = function(context) {
              var self2 = this;
              return function(item) {
                var needRemove = context === item.context;
                if (needRemove) {
                  self2._forgetContext(item.context);
                }
                return needRemove;
              };
            };
            CustomEvents.prototype._matchHandlerAndContext = function(handler, context) {
              var self2 = this;
              return function(item) {
                var matchHandler = handler === item.handler;
                var matchContext = context === item.context;
                var needRemove = matchHandler && matchContext;
                if (needRemove) {
                  self2._forgetContext(item.context);
                }
                return needRemove;
              };
            };
            CustomEvents.prototype._offByEventName = function(eventName, handler) {
              var self2 = this;
              var andByHandler = isFunction(handler);
              var matchHandler = self2._matchHandler(handler);
              eventName = eventName.split(R_EVENTNAME_SPLIT);
              forEach(eventName, function(name) {
                var handlerItems = self2._safeEvent(name);
                if (andByHandler) {
                  self2._spliceMatches(handlerItems, matchHandler);
                } else {
                  forEach(handlerItems, function(item) {
                    self2._forgetContext(item.context);
                  });
                  self2.events[name] = [];
                }
              });
            };
            CustomEvents.prototype._offByHandler = function(handler) {
              var self2 = this;
              var matchHandler = this._matchHandler(handler);
              forEach(this._safeEvent(), function(handlerItems) {
                self2._spliceMatches(handlerItems, matchHandler);
              });
            };
            CustomEvents.prototype._offByObject = function(obj, handler) {
              var self2 = this;
              var matchFunc;
              if (this._indexOfContext(obj) < 0) {
                forEach(obj, function(func, name) {
                  self2.off(name, func);
                });
              } else if (isString(handler)) {
                matchFunc = this._matchContext(obj);
                self2._spliceMatches(this._safeEvent(handler), matchFunc);
              } else if (isFunction(handler)) {
                matchFunc = this._matchHandlerAndContext(handler, obj);
                forEach(this._safeEvent(), function(handlerItems) {
                  self2._spliceMatches(handlerItems, matchFunc);
                });
              } else {
                matchFunc = this._matchContext(obj);
                forEach(this._safeEvent(), function(handlerItems) {
                  self2._spliceMatches(handlerItems, matchFunc);
                });
              }
            };
            CustomEvents.prototype.off = function(eventName, handler) {
              if (isString(eventName)) {
                this._offByEventName(eventName, handler);
              } else if (!arguments.length) {
                this.events = {};
                this.contexts = [];
              } else if (isFunction(eventName)) {
                this._offByHandler(eventName);
              } else if (isObject(eventName)) {
                this._offByObject(eventName, handler);
              }
            };
            CustomEvents.prototype.fire = function(eventName) {
              this.invoke.apply(this, arguments);
            };
            CustomEvents.prototype.invoke = function(eventName) {
              var events, args, index, item;
              if (!this.hasListener(eventName)) {
                return true;
              }
              events = this._safeEvent(eventName);
              args = Array.prototype.slice.call(arguments, 1);
              index = 0;
              while (events[index]) {
                item = events[index];
                if (item.handler.apply(item.context, args) === false) {
                  return false;
                }
                index += 1;
              }
              return true;
            };
            CustomEvents.prototype.hasListener = function(eventName) {
              return this.getListenerLength(eventName) > 0;
            };
            CustomEvents.prototype.getListenerLength = function(eventName) {
              var events = this._safeEvent(eventName);
              return events.length;
            };
            module3.exports = CustomEvents;
          },
          function(module3, exports3, __webpack_require__) {
            var isArray = __webpack_require__(6);
            var forEachArray = __webpack_require__(2);
            var forEachOwnProperties = __webpack_require__(23);
            function forEach(obj, iteratee, context) {
              if (isArray(obj)) {
                forEachArray(obj, iteratee, context);
              } else {
                forEachOwnProperties(obj, iteratee, context);
              }
            }
            module3.exports = forEach;
          },
          function(module3, exports3, __webpack_require__) {
            module3.exports = {
              en: {
                titles: {
                  DD: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
                  D: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                  MMM: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                  MMMM: [
                    "January",
                    "February",
                    "March",
                    "April",
                    "May",
                    "June",
                    "July",
                    "August",
                    "September",
                    "October",
                    "November",
                    "December"
                  ]
                },
                titleFormat: "MMMM yyyy",
                todayFormat: "To\\d\\ay: DD, MMMM d, yyyy",
                time: "Time",
                date: "Date"
              },
              ko: {
                titles: {
                  DD: ["\uC77C\uC694\uC77C", "\uC6D4\uC694\uC77C", "\uD654\uC694\uC77C", "\uC218\uC694\uC77C", "\uBAA9\uC694\uC77C", "\uAE08\uC694\uC77C", "\uD1A0\uC694\uC77C"],
                  D: ["\uC77C", "\uC6D4", "\uD654", "\uC218", "\uBAA9", "\uAE08", "\uD1A0"],
                  MMM: ["1\uC6D4", "2\uC6D4", "3\uC6D4", "4\uC6D4", "5\uC6D4", "6\uC6D4", "7\uC6D4", "8\uC6D4", "9\uC6D4", "10\uC6D4", "11\uC6D4", "12\uC6D4"],
                  MMMM: ["1\uC6D4", "2\uC6D4", "3\uC6D4", "4\uC6D4", "5\uC6D4", "6\uC6D4", "7\uC6D4", "8\uC6D4", "9\uC6D4", "10\uC6D4", "11\uC6D4", "12\uC6D4"]
                },
                titleFormat: "yyyy.MM",
                todayFormat: "\uC624\uB298: yyyy.MM.dd (D)",
                date: "\uB0A0\uC9DC",
                time: "\uC2DC\uAC04"
              }
            };
          },
          function(module3, exports3, __webpack_require__) {
            var inArray = __webpack_require__(3);
            var forEach = __webpack_require__(9);
            var isArray = __webpack_require__(6);
            var isString = __webpack_require__(13);
            var extend = __webpack_require__(7);
            var EXPRESSION_REGEXP = /{{\s?|\s?}}/g;
            var BRACKET_NOTATION_REGEXP = /^[a-zA-Z0-9_@]+\[[a-zA-Z0-9_@"']+\]$/;
            var BRACKET_REGEXP = /\[\s?|\s?\]/;
            var DOT_NOTATION_REGEXP = /^[a-zA-Z_]+\.[a-zA-Z_]+$/;
            var DOT_REGEXP = /\./;
            var STRING_NOTATION_REGEXP = /^["']\w+["']$/;
            var STRING_REGEXP = /"|'/g;
            var NUMBER_REGEXP = /^-?\d+\.?\d*$/;
            var EXPRESSION_INTERVAL = 2;
            var BLOCK_HELPERS = {
              "if": handleIf,
              "each": handleEach,
              "with": handleWith
            };
            var isValidSplit = "a".split(/a/).length === 3;
            var splitByRegExp = function() {
              if (isValidSplit) {
                return function(text, regexp) {
                  return text.split(regexp);
                };
              }
              return function(text, regexp) {
                var result = [];
                var prevIndex = 0;
                var match, index;
                if (!regexp.global) {
                  regexp = new RegExp(regexp, "g");
                }
                match = regexp.exec(text);
                while (match !== null) {
                  index = match.index;
                  result.push(text.slice(prevIndex, index));
                  prevIndex = index + match[0].length;
                  match = regexp.exec(text);
                }
                result.push(text.slice(prevIndex));
                return result;
              };
            }();
            function getValueFromContext(exp, context) {
              var splitedExps;
              var value = context[exp];
              if (exp === "true") {
                value = true;
              } else if (exp === "false") {
                value = false;
              } else if (STRING_NOTATION_REGEXP.test(exp)) {
                value = exp.replace(STRING_REGEXP, "");
              } else if (BRACKET_NOTATION_REGEXP.test(exp)) {
                splitedExps = exp.split(BRACKET_REGEXP);
                value = getValueFromContext(splitedExps[0], context)[getValueFromContext(splitedExps[1], context)];
              } else if (DOT_NOTATION_REGEXP.test(exp)) {
                splitedExps = exp.split(DOT_REGEXP);
                value = getValueFromContext(splitedExps[0], context)[splitedExps[1]];
              } else if (NUMBER_REGEXP.test(exp)) {
                value = parseFloat(exp);
              }
              return value;
            }
            function extractElseif(ifExps, sourcesInsideBlock) {
              var exps = [ifExps];
              var sourcesInsideIf = [];
              var otherIfCount = 0;
              var start = 0;
              forEach(sourcesInsideBlock, function(source, index) {
                if (source.indexOf("if") === 0) {
                  otherIfCount += 1;
                } else if (source === "/if") {
                  otherIfCount -= 1;
                } else if (!otherIfCount && (source.indexOf("elseif") === 0 || source === "else")) {
                  exps.push(source === "else" ? ["true"] : source.split(" ").slice(1));
                  sourcesInsideIf.push(sourcesInsideBlock.slice(start, index));
                  start = index + 1;
                }
              });
              sourcesInsideIf.push(sourcesInsideBlock.slice(start));
              return {
                exps,
                sourcesInsideIf
              };
            }
            function handleIf(exps, sourcesInsideBlock, context) {
              var analyzed = extractElseif(exps, sourcesInsideBlock);
              var result = false;
              var compiledSource = "";
              forEach(analyzed.exps, function(exp, index) {
                result = handleExpression(exp, context);
                if (result) {
                  compiledSource = compile(analyzed.sourcesInsideIf[index], context);
                }
                return !result;
              });
              return compiledSource;
            }
            function handleEach(exps, sourcesInsideBlock, context) {
              var collection = handleExpression(exps, context);
              var additionalKey = isArray(collection) ? "@index" : "@key";
              var additionalContext = {};
              var result = "";
              forEach(collection, function(item, key) {
                additionalContext[additionalKey] = key;
                additionalContext["@this"] = item;
                extend(context, additionalContext);
                result += compile(sourcesInsideBlock.slice(), context);
              });
              return result;
            }
            function handleWith(exps, sourcesInsideBlock, context) {
              var asIndex = inArray("as", exps);
              var alias = exps[asIndex + 1];
              var result = handleExpression(exps.slice(0, asIndex), context);
              var additionalContext = {};
              additionalContext[alias] = result;
              return compile(sourcesInsideBlock, extend(context, additionalContext)) || "";
            }
            function extractSourcesInsideBlock(sources, start, end) {
              var sourcesInsideBlock = sources.splice(start + 1, end - start);
              sourcesInsideBlock.pop();
              return sourcesInsideBlock;
            }
            function handleBlockHelper(helperKeyword, sourcesToEnd, context) {
              var executeBlockHelper = BLOCK_HELPERS[helperKeyword];
              var helperCount = 1;
              var startBlockIndex = 0;
              var endBlockIndex;
              var index = startBlockIndex + EXPRESSION_INTERVAL;
              var expression = sourcesToEnd[index];
              while (helperCount && isString(expression)) {
                if (expression.indexOf(helperKeyword) === 0) {
                  helperCount += 1;
                } else if (expression.indexOf("/" + helperKeyword) === 0) {
                  helperCount -= 1;
                  endBlockIndex = index;
                }
                index += EXPRESSION_INTERVAL;
                expression = sourcesToEnd[index];
              }
              if (helperCount) {
                throw Error(helperKeyword + " needs {{/" + helperKeyword + "}} expression.");
              }
              sourcesToEnd[startBlockIndex] = executeBlockHelper(
                sourcesToEnd[startBlockIndex].split(" ").slice(1),
                extractSourcesInsideBlock(sourcesToEnd, startBlockIndex, endBlockIndex),
                context
              );
              return sourcesToEnd;
            }
            function handleExpression(exps, context) {
              var result = getValueFromContext(exps[0], context);
              if (result instanceof Function) {
                return executeFunction(result, exps.slice(1), context);
              }
              return result;
            }
            function executeFunction(helper, argExps, context) {
              var args = [];
              forEach(argExps, function(exp) {
                args.push(getValueFromContext(exp, context));
              });
              return helper.apply(null, args);
            }
            function compile(sources, context) {
              var index = 1;
              var expression = sources[index];
              var exps, firstExp, result;
              while (isString(expression)) {
                exps = expression.split(" ");
                firstExp = exps[0];
                if (BLOCK_HELPERS[firstExp]) {
                  result = handleBlockHelper(firstExp, sources.splice(index, sources.length - index), context);
                  sources = sources.concat(result);
                } else {
                  sources[index] = handleExpression(exps, context);
                }
                index += EXPRESSION_INTERVAL;
                expression = sources[index];
              }
              return sources.join("");
            }
            function template(text, context) {
              return compile(splitByRegExp(text, EXPRESSION_REGEXP), context);
            }
            module3.exports = template;
          },
          function(module3, exports3, __webpack_require__) {
            function isUndefined(obj) {
              return obj === void 0;
            }
            module3.exports = isUndefined;
          },
          function(module3, exports3, __webpack_require__) {
            function isString(obj) {
              return typeof obj === "string" || obj instanceof String;
            }
            module3.exports = isString;
          },
          function(module3, exports3, __webpack_require__) {
            function removeElement(element) {
              if (element && element.parentNode) {
                element.parentNode.removeChild(element);
              }
            }
            module3.exports = removeElement;
          },
          function(module3, exports3, __webpack_require__) {
            function isNumber(obj) {
              return typeof obj === "number" || obj instanceof Number;
            }
            module3.exports = isNumber;
          },
          function(module3, exports3, __webpack_require__) {
            var forEach = __webpack_require__(9);
            var inArray = __webpack_require__(3);
            var getClass = __webpack_require__(17);
            var setClassName = __webpack_require__(24);
            function addClass(element) {
              var cssClass = Array.prototype.slice.call(arguments, 1);
              var classList = element.classList;
              var newClass = [];
              var origin;
              if (classList) {
                forEach(cssClass, function(name) {
                  element.classList.add(name);
                });
                return;
              }
              origin = getClass(element);
              if (origin) {
                cssClass = [].concat(origin.split(/\s+/), cssClass);
              }
              forEach(cssClass, function(cls) {
                if (inArray(cls, newClass) < 0) {
                  newClass.push(cls);
                }
              });
              setClassName(element, newClass);
            }
            module3.exports = addClass;
          },
          function(module3, exports3, __webpack_require__) {
            var isUndefined = __webpack_require__(12);
            function getClass(element) {
              if (!element || !element.className) {
                return "";
              }
              if (isUndefined(element.className.baseVal)) {
                return element.className;
              }
              return element.className.baseVal;
            }
            module3.exports = getClass;
          },
          function(module3, exports3, __webpack_require__) {
            var forEachArray = __webpack_require__(2);
            var inArray = __webpack_require__(3);
            var getClass = __webpack_require__(17);
            var setClassName = __webpack_require__(24);
            function removeClass(element) {
              var cssClass = Array.prototype.slice.call(arguments, 1);
              var classList = element.classList;
              var origin, newClass;
              if (classList) {
                forEachArray(cssClass, function(name) {
                  classList.remove(name);
                });
                return;
              }
              origin = getClass(element).split(/\s+/);
              newClass = [];
              forEachArray(origin, function(name) {
                if (inArray(name, cssClass) < 0) {
                  newClass.push(name);
                }
              });
              setClassName(element, newClass);
            }
            module3.exports = removeClass;
          },
          function(module3, exports3, __webpack_require__) {
            var on = __webpack_require__(31);
            var off = __webpack_require__(33);
            var mouseTouchEvent = {
              _isMobile: function() {
                return /Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile|WPDesktop/i.test(
                  navigator.userAgent
                );
              }(),
              _getEventType: function(type) {
                if (this._isMobile) {
                  if (type === "mousedown") {
                    type = "touchstart";
                  } else if (type === "click") {
                    type = "touchend";
                  }
                }
                return type;
              },
              on: function(element, type, handler, context) {
                on(element, this._getEventType(type), handler, context);
              },
              off: function(element, type, handler) {
                off(element, this._getEventType(type), handler);
              }
            };
            module3.exports = mouseTouchEvent;
          },
          function(module3, exports3, __webpack_require__) {
            var defineClass = __webpack_require__(0);
            var removeElement = __webpack_require__(14);
            var localeText = __webpack_require__(10);
            var DEFAULT_LANGUAGE_TYPE = __webpack_require__(1).DEFAULT_LANGUAGE_TYPE;
            var LayerBase = defineClass(
              {
                init: function(language) {
                  language = language || DEFAULT_LANGUAGE_TYPE;
                  this._element = null;
                  this._localeText = localeText[language];
                  this._type = "base";
                },
                _makeContext: function() {
                  throwOverrideError(this.getType(), "_makeContext");
                },
                render: function() {
                  throwOverrideError(this.getType(), "render");
                },
                getDateElements: function() {
                  throwOverrideError(this.getType(), "getDateElements");
                },
                getType: function() {
                  return this._type;
                },
                changeLanguage: function(language) {
                  this._localeText = localeText[language];
                },
                remove: function() {
                  if (this._element) {
                    removeElement(this._element);
                  }
                  this._element = null;
                }
              }
            );
            function throwOverrideError(layerType, methodName) {
              throw new Error(layerType + ' layer does not have the "' + methodName + '" method.');
            }
            module3.exports = LayerBase;
          },
          function(module3, exports3, __webpack_require__) {
            var inArray = __webpack_require__(3);
            var forEachArray = __webpack_require__(2);
            var defineClass = __webpack_require__(0);
            var CustomEvents = __webpack_require__(8);
            var addClass = __webpack_require__(16);
            var closest = __webpack_require__(25);
            var getData = __webpack_require__(26);
            var hasClass = __webpack_require__(27);
            var removeClass = __webpack_require__(18);
            var removeElement = __webpack_require__(14);
            var extend = __webpack_require__(7);
            var isArray = __webpack_require__(6);
            var isDate = __webpack_require__(28);
            var isNumber = __webpack_require__(15);
            var isObject = __webpack_require__(22);
            var TimePicker = __webpack_require__(43);
            var Calendar = __webpack_require__(29);
            var RangeModel = __webpack_require__(56);
            var constants = __webpack_require__(1);
            var localeTexts = __webpack_require__(10);
            var dateUtil = __webpack_require__(5);
            var util = __webpack_require__(4);
            var mouseTouchEvent = __webpack_require__(19);
            var tmpl = __webpack_require__(58);
            var DatePickerInput = __webpack_require__(59);
            var DEFAULT_WEEK_START_DAY = constants.DEFAULT_WEEK_START_DAY;
            var DEFAULT_LANGUAGE_TYPE = constants.DEFAULT_LANGUAGE_TYPE;
            var TYPE_DATE = constants.TYPE_DATE;
            var TYPE_MONTH = constants.TYPE_MONTH;
            var TYPE_YEAR = constants.TYPE_YEAR;
            var CLASS_NAME_NEXT_YEAR_BTN = constants.CLASS_NAME_NEXT_YEAR_BTN;
            var CLASS_NAME_NEXT_MONTH_BTN = constants.CLASS_NAME_NEXT_MONTH_BTN;
            var CLASS_NAME_PREV_YEAR_BTN = constants.CLASS_NAME_PREV_YEAR_BTN;
            var CLASS_NAME_PREV_MONTH_BTN = constants.CLASS_NAME_PREV_MONTH_BTN;
            var CLASS_NAME_SELECTED = constants.CLASS_NAME_SELECTED;
            var CLASS_NAME_TITLE_TODAY = constants.CLASS_NAME_TITLE_TODAY;
            var CLASS_NAME_SELECTABLE = "tui-is-selectable";
            var CLASS_NAME_BLOCKED = "tui-is-blocked";
            var CLASS_NAME_CHECKED = "tui-is-checked";
            var CLASS_NAME_SELECTOR_BUTTON = "tui-datepicker-selector-button";
            var CLASS_NAME_TODAY = "tui-calendar-today";
            var CLASS_NAME_HIDDEN = "tui-hidden";
            var SELECTOR_BODY = ".tui-datepicker-body";
            var SELECTOR_DATE_ICO = ".tui-ico-date";
            var SELECTOR_CALENDAR_TITLE = ".tui-calendar-title";
            var SELECTOR_CALENDAR_CONTAINER = ".tui-calendar-container";
            var SELECTOR_TIMEPICKER_CONTAINER = ".tui-timepicker-container";
            var mergeDefaultOption = function(option) {
              option = extend(
                {
                  language: DEFAULT_LANGUAGE_TYPE,
                  calendar: {},
                  input: {
                    element: null,
                    format: null
                  },
                  timePicker: null,
                  date: null,
                  showAlways: false,
                  type: TYPE_DATE,
                  selectableRanges: null,
                  openers: [],
                  autoClose: true,
                  usageStatistics: true,
                  weekStartDay: DEFAULT_WEEK_START_DAY
                },
                option
              );
              option.selectableRanges = option.selectableRanges || [[constants.MIN_DATE, constants.MAX_DATE]];
              if (!isObject(option.calendar)) {
                throw new Error("Calendar option must be an object");
              }
              if (!isObject(option.input)) {
                throw new Error("Input option must be an object");
              }
              if (!isArray(option.selectableRanges)) {
                throw new Error("Selectable-ranges must be a 2d-array");
              }
              option.localeText = localeTexts[option.language];
              option.calendar.language = option.language;
              option.calendar.type = option.type;
              option.timePicker = option.timePicker || option.timepicker;
              return option;
            };
            var DatePicker = defineClass(
              {
                static: {
                  localeTexts
                },
                init: function(container, options) {
                  options = mergeDefaultOption(options);
                  this._language = options.language;
                  this._container = util.getElement(container);
                  this._container.innerHTML = tmpl(
                    extend(options, {
                      isTab: options.timePicker && options.timePicker.layoutType === "tab"
                    })
                  );
                  this._element = this._container.firstChild;
                  this._calendar = new Calendar(
                    this._element.querySelector(SELECTOR_CALENDAR_CONTAINER),
                    extend(options.calendar, {
                      usageStatistics: options.usageStatistics,
                      weekStartDay: options.weekStartDay
                    })
                  );
                  this._timePicker = null;
                  this._datepickerInput = null;
                  this._date = null;
                  this._rangeModel = null;
                  this._openers = [];
                  this._isEnabled = true;
                  this._id = "tui-datepicker-" + util.generateId();
                  this._type = options.type;
                  this.showAlways = options.showAlways;
                  this.autoClose = options.autoClose;
                  this._initializeDatePicker(options);
                },
                _initializeDatePicker: function(option) {
                  this.setRanges(option.selectableRanges);
                  this._setEvents();
                  this._initTimePicker(option.timePicker, option.usageStatistics);
                  this.setInput(option.input.element);
                  this.setDateFormat(option.input.format);
                  this.setDate(option.date);
                  forEachArray(option.openers, this.addOpener, this);
                  if (!this.showAlways) {
                    this._hide();
                  }
                  if (this.getType() === TYPE_DATE) {
                    addClass(this._element.querySelector(SELECTOR_BODY), "tui-datepicker-type-date");
                  }
                },
                _setEvents: function() {
                  mouseTouchEvent.on(this._element, "click", this._onClickHandler, this);
                  this._calendar.on("draw", this._onDrawCalendar, this);
                },
                _removeEvents: function() {
                  mouseTouchEvent.off(this._element, "click", this._onClickHandler, this);
                  this._calendar.off();
                },
                _setDocumentEvents: function() {
                  mouseTouchEvent.on(document, "mousedown", this._onMousedownDocument, this);
                },
                _removeDocumentEvents: function() {
                  mouseTouchEvent.off(document, "mousedown", this._onMousedownDocument);
                },
                _setOpenerEvents: function(opener) {
                  mouseTouchEvent.on(opener, "click", this.toggle, this);
                },
                _removeOpenerEvents: function(opener) {
                  mouseTouchEvent.off(opener, "click", this.toggle);
                },
                _initTimePicker: function(opTimePicker, usageStatistics) {
                  var layoutType;
                  if (!opTimePicker) {
                    return;
                  }
                  layoutType = opTimePicker.layoutType || "";
                  if (isObject(opTimePicker)) {
                    opTimePicker.usageStatistics = usageStatistics;
                  } else {
                    opTimePicker = {
                      usageStatistics
                    };
                  }
                  this._timePicker = new TimePicker(
                    this._element.querySelector(SELECTOR_TIMEPICKER_CONTAINER),
                    opTimePicker
                  );
                  if (layoutType.toLowerCase() === "tab") {
                    this._timePicker.hide();
                  }
                  this._timePicker.on(
                    "change",
                    function(ev) {
                      var prevDate;
                      if (this._date) {
                        prevDate = new Date(this._date);
                        this.setDate(prevDate.setHours(ev.hour, ev.minute));
                      }
                    },
                    this
                  );
                },
                _changePicker: function(target) {
                  var btnSelector = "." + CLASS_NAME_SELECTOR_BUTTON;
                  var selectedBtn = closest(target, btnSelector);
                  var isDateElement = !!selectedBtn.querySelector(SELECTOR_DATE_ICO);
                  if (isDateElement) {
                    this._calendar.show();
                    this._timePicker.hide();
                  } else {
                    this._calendar.hide();
                    this._timePicker.show();
                  }
                  removeClass(this._element.querySelector("." + CLASS_NAME_CHECKED), CLASS_NAME_CHECKED);
                  addClass(selectedBtn, CLASS_NAME_CHECKED);
                },
                _isOpener: function(element) {
                  var el = util.getElement(element);
                  return inArray(el, this._openers) > -1;
                },
                _setTodayClassName: function(el) {
                  var timestamp, isToday;
                  if (this.getCalendarType() !== TYPE_DATE) {
                    return;
                  }
                  timestamp = Number(getData(el, "timestamp"));
                  isToday = timestamp === new Date().setHours(0, 0, 0, 0);
                  if (isToday) {
                    addClass(el, CLASS_NAME_TODAY);
                  } else {
                    removeClass(el, CLASS_NAME_TODAY);
                  }
                },
                _setSelectableClassName: function(el) {
                  var elDate = new Date(Number(getData(el, "timestamp")));
                  if (this._isSelectableOnCalendar(elDate)) {
                    addClass(el, CLASS_NAME_SELECTABLE);
                    removeClass(el, CLASS_NAME_BLOCKED);
                  } else {
                    removeClass(el, CLASS_NAME_SELECTABLE);
                    addClass(el, CLASS_NAME_BLOCKED);
                  }
                },
                _setSelectedClassName: function(el) {
                  var elDate = new Date(Number(getData(el, "timestamp")));
                  if (this._isSelectedOnCalendar(elDate)) {
                    addClass(el, CLASS_NAME_SELECTED);
                  } else {
                    removeClass(el, CLASS_NAME_SELECTED);
                  }
                },
                _isSelectableOnCalendar: function(date) {
                  var type = this.getCalendarType();
                  var start = dateUtil.cloneWithStartOf(date, type).getTime();
                  var end = dateUtil.cloneWithEndOf(date, type).getTime();
                  return this._rangeModel.hasOverlap(start, end);
                },
                _isSelectedOnCalendar: function(date) {
                  var curDate = this.getDate();
                  var calendarType = this.getCalendarType();
                  return curDate && dateUtil.isSame(curDate, date, calendarType);
                },
                _show: function() {
                  removeClass(this._element, CLASS_NAME_HIDDEN);
                },
                _hide: function() {
                  addClass(this._element, CLASS_NAME_HIDDEN);
                },
                _syncToInput: function() {
                  if (!this._date) {
                    return;
                  }
                  this._datepickerInput.setDate(this._date);
                },
                _syncFromInput: function(shouldRollback) {
                  var isFailed = false;
                  var date;
                  try {
                    date = this._datepickerInput.getDate();
                    if (this.isSelectable(date)) {
                      if (this._timePicker) {
                        this._timePicker.setTime(date.getHours(), date.getMinutes());
                      }
                      this.setDate(date);
                    } else {
                      isFailed = true;
                    }
                  } catch (err) {
                    this.fire("error", {
                      type: "ParsingError",
                      message: err.message
                    });
                    isFailed = true;
                  } finally {
                    if (isFailed) {
                      if (shouldRollback) {
                        this._syncToInput();
                      } else {
                        this.setNull();
                      }
                    }
                  }
                },
                _onMousedownDocument: function(ev) {
                  var target = util.getTarget(ev);
                  var selector = util.getSelector(target);
                  var isContain = selector ? this._element.querySelector(selector) : false;
                  var isInput = this._datepickerInput.is(target);
                  var isInOpener = inArray(target, this._openers) > -1;
                  var shouldClose = !(this.showAlways || isInput || isContain || isInOpener);
                  if (shouldClose) {
                    this.close();
                  }
                },
                _onClickHandler: function(ev) {
                  var target = util.getTarget(ev);
                  if (closest(target, "." + CLASS_NAME_SELECTABLE)) {
                    ev.preventDefault();
                    this._updateDate(target);
                  } else if (closest(target, "." + CLASS_NAME_TITLE_TODAY)) {
                    ev.preventDefault();
                    this._updateDateToToday();
                  } else if (closest(target, SELECTOR_CALENDAR_TITLE)) {
                    this.drawUpperCalendar(this._date);
                  } else if (closest(target, "." + CLASS_NAME_SELECTOR_BUTTON)) {
                    this._changePicker(target);
                  }
                },
                _updateDateToToday: function() {
                  this.setDate(Date.now());
                  this.close();
                },
                _updateDate: function(target) {
                  var timestamp = Number(getData(target, "timestamp"));
                  var newDate = new Date(timestamp);
                  var timePicker = this._timePicker;
                  var prevDate = this._date;
                  var calendarType = this.getCalendarType();
                  var pickerType = this.getType();
                  if (calendarType !== pickerType) {
                    this.drawLowerCalendar(newDate);
                  } else {
                    if (timePicker) {
                      newDate.setHours(timePicker.getHour(), timePicker.getMinute());
                    } else if (prevDate) {
                      newDate.setHours(prevDate.getHours(), prevDate.getMinutes());
                    }
                    this.setDate(newDate);
                    if (!this.showAlways && this.autoClose) {
                      this.close();
                    }
                  }
                },
                _onDrawCalendar: function(eventData) {
                  forEachArray(
                    eventData.dateElements,
                    function(el) {
                      this._setTodayClassName(el);
                      this._setSelectableClassName(el);
                      this._setSelectedClassName(el);
                    },
                    this
                  );
                  this._setDisplayHeadButtons();
                  this.fire("draw", eventData);
                },
                _setDisplayHeadButtons: function() {
                  var customStep = 60;
                  var nextYearDate = this._calendar.getNextYearDate(
                    this.getCalendarType() === TYPE_YEAR ? customStep : null
                  );
                  var prevYearDate = this._calendar.getPrevYearDate(
                    this.getCalendarType() === TYPE_YEAR ? -customStep : null
                  );
                  var maxTimestamp = this._rangeModel.getMaximumValue();
                  var minTimestamp = this._rangeModel.getMinimumValue();
                  var nextYearBtn = this._element.querySelector("." + CLASS_NAME_NEXT_YEAR_BTN);
                  var prevYearBtn = this._element.querySelector("." + CLASS_NAME_PREV_YEAR_BTN);
                  var nextMonthDate, prevMonthDate, nextMonBtn, prevMonBtn;
                  if (this.getCalendarType() === TYPE_DATE) {
                    nextMonthDate = dateUtil.cloneWithStartOf(this._calendar.getNextDate(), TYPE_MONTH);
                    prevMonthDate = dateUtil.cloneWithEndOf(this._calendar.getPrevDate(), TYPE_MONTH);
                    nextMonBtn = this._element.querySelector("." + CLASS_NAME_NEXT_MONTH_BTN);
                    prevMonBtn = this._element.querySelector("." + CLASS_NAME_PREV_MONTH_BTN);
                    this._setDisplay(nextMonBtn, nextMonthDate.getTime() <= maxTimestamp);
                    this._setDisplay(prevMonBtn, prevMonthDate.getTime() >= minTimestamp);
                    prevYearDate.setDate(1);
                    nextYearDate.setDate(1);
                  } else {
                    prevYearDate.setMonth(12, 0);
                    nextYearDate.setMonth(0, 1);
                  }
                  this._setDisplay(nextYearBtn, nextYearDate.getTime() <= maxTimestamp);
                  this._setDisplay(prevYearBtn, prevYearDate.getTime() >= minTimestamp);
                },
                _setDisplay: function(el, shouldShow) {
                  if (el) {
                    if (shouldShow) {
                      removeClass(el, CLASS_NAME_HIDDEN);
                    } else {
                      addClass(el, CLASS_NAME_HIDDEN);
                    }
                  }
                },
                _onChangeInput: function() {
                  this._syncFromInput(true);
                },
                _isChanged: function(date) {
                  var prevDate = this.getDate();
                  return !prevDate || date.getTime() !== prevDate.getTime();
                },
                _refreshFromRanges: function() {
                  if (!this.isSelectable(this._date)) {
                    this.setNull();
                  } else {
                    this._calendar.draw();
                  }
                },
                getCalendarType: function() {
                  return this._calendar.getType();
                },
                getType: function() {
                  return this._type;
                },
                isSelectable: function(date) {
                  var type = this.getType();
                  var start, end;
                  if (!dateUtil.isValidDate(date)) {
                    return false;
                  }
                  start = dateUtil.cloneWithStartOf(date, type).getTime();
                  end = dateUtil.cloneWithEndOf(date, type).getTime();
                  return this._rangeModel.hasOverlap(start, end);
                },
                isSelected: function(date) {
                  return dateUtil.isValidDate(date) && dateUtil.isSame(this._date, date, this.getType());
                },
                setRanges: function(ranges) {
                  var result = [];
                  forEachArray(ranges, function(range) {
                    var start = new Date(range[0]).getTime();
                    var end = new Date(range[1]).getTime();
                    result.push([start, end]);
                  });
                  this._rangeModel = new RangeModel(result);
                  this._refreshFromRanges();
                },
                setType: function(type) {
                  this._type = type;
                },
                addRange: function(start, end) {
                  start = new Date(start).getTime();
                  end = new Date(end).getTime();
                  this._rangeModel.add(start, end);
                  this._refreshFromRanges();
                },
                removeRange: function(start, end, type) {
                  start = new Date(start);
                  end = new Date(end);
                  if (type) {
                    start = dateUtil.cloneWithStartOf(start, type);
                    end = dateUtil.cloneWithEndOf(end, type);
                  }
                  this._rangeModel.exclude(start.getTime(), end.getTime());
                  this._refreshFromRanges();
                },
                addOpener: function(opener) {
                  opener = util.getElement(opener);
                  if (!this._isOpener(opener)) {
                    this._openers.push(opener);
                    this._setOpenerEvents(opener);
                  }
                },
                removeOpener: function(opener) {
                  var index;
                  opener = util.getElement(opener);
                  index = inArray(opener, this._openers);
                  if (index > -1) {
                    this._removeOpenerEvents(opener);
                    this._openers.splice(index, 1);
                  }
                },
                removeAllOpeners: function() {
                  forEachArray(
                    this._openers,
                    function(opener) {
                      this._removeOpenerEvents(opener);
                    },
                    this
                  );
                  this._openers = [];
                },
                open: function() {
                  if (this.isOpened() || !this._isEnabled) {
                    return;
                  }
                  this._calendar.draw({
                    date: this._date,
                    type: this._type
                  });
                  this._show();
                  if (!this.showAlways) {
                    this._setDocumentEvents();
                  }
                  this.fire("open");
                },
                drawUpperCalendar: function(date) {
                  var calendarType = this.getCalendarType();
                  if (calendarType === TYPE_DATE) {
                    this._calendar.draw({
                      date,
                      type: TYPE_MONTH
                    });
                  } else if (calendarType === TYPE_MONTH) {
                    this._calendar.draw({
                      date,
                      type: TYPE_YEAR
                    });
                  }
                },
                drawLowerCalendar: function(date) {
                  var calendarType = this.getCalendarType();
                  var pickerType = this.getType();
                  var isLast = calendarType === pickerType;
                  if (isLast) {
                    return;
                  }
                  if (calendarType === TYPE_MONTH) {
                    this._calendar.draw({
                      date,
                      type: TYPE_DATE
                    });
                  } else if (calendarType === TYPE_YEAR) {
                    this._calendar.draw({
                      date,
                      type: TYPE_MONTH
                    });
                  }
                },
                close: function() {
                  if (!this.isOpened()) {
                    return;
                  }
                  this._removeDocumentEvents();
                  this._hide();
                  this.fire("close");
                },
                toggle: function() {
                  if (this.isOpened()) {
                    this.close();
                  } else {
                    this.open();
                  }
                },
                getDate: function() {
                  if (!this._date) {
                    return null;
                  }
                  return new Date(this._date);
                },
                setDate: function(date, silent) {
                  var isValidInput, newDate, shouldUpdate;
                  if (date === null) {
                    this.setNull();
                    return;
                  }
                  isValidInput = isNumber(date) || isDate(date);
                  newDate = new Date(date);
                  shouldUpdate = isValidInput && this._isChanged(newDate) && this.isSelectable(newDate);
                  if (shouldUpdate) {
                    newDate = new Date(date);
                    this._date = newDate;
                    this._calendar.draw({ date: newDate });
                    if (this._timePicker) {
                      this._timePicker.setTime(newDate.getHours(), newDate.getMinutes(), true);
                    }
                    this._syncToInput();
                    if (!silent) {
                      this.fire("change");
                    }
                  }
                },
                setNull: function() {
                  var calendarDate = this._calendar.getDate();
                  var isChagned = this._date !== null;
                  this._date = null;
                  if (this._datepickerInput) {
                    this._datepickerInput.clearText();
                  }
                  if (this._timePicker) {
                    this._timePicker.setTime(0, 0);
                  }
                  if (!this.isSelectable(calendarDate)) {
                    this._calendar.draw({
                      date: new Date(this._rangeModel.getMinimumValue())
                    });
                  } else {
                    this._calendar.draw();
                  }
                  if (isChagned) {
                    this.fire("change");
                  }
                },
                setDateFormat: function(format) {
                  this._datepickerInput.setFormat(format);
                  this._syncToInput();
                },
                isOpened: function() {
                  return !hasClass(this._element, CLASS_NAME_HIDDEN);
                },
                getTimePicker: function() {
                  return this._timePicker;
                },
                getCalendar: function() {
                  return this._calendar;
                },
                getLocaleText: function() {
                  return localeTexts[this._language] || localeTexts[DEFAULT_LANGUAGE_TYPE];
                },
                setInput: function(element, options) {
                  var prev = this._datepickerInput;
                  var localeText = this.getLocaleText();
                  var prevFormat;
                  options = options || {};
                  if (prev) {
                    prevFormat = prev.getFormat();
                    prev.destroy();
                  }
                  this._datepickerInput = new DatePickerInput(element, {
                    format: options.format || prevFormat,
                    id: this._id,
                    localeText
                  });
                  this._datepickerInput.on(
                    {
                      change: this._onChangeInput,
                      click: this.open
                    },
                    this
                  );
                  if (options.syncFromInput) {
                    this._syncFromInput();
                  } else {
                    this._syncToInput();
                  }
                },
                enable: function() {
                  if (this._isEnabled) {
                    return;
                  }
                  this._isEnabled = true;
                  this._datepickerInput.enable();
                  forEachArray(
                    this._openers,
                    function(opener) {
                      opener.removeAttribute("disabled");
                      this._setOpenerEvents(opener);
                    },
                    this
                  );
                },
                disable: function() {
                  if (!this._isEnabled) {
                    return;
                  }
                  this._isEnabled = false;
                  this.close();
                  this._datepickerInput.disable();
                  forEachArray(
                    this._openers,
                    function(opener) {
                      opener.setAttribute("disabled", true);
                      this._removeOpenerEvents(opener);
                    },
                    this
                  );
                },
                isDisabled: function() {
                  return !this._isEnabled;
                },
                addCssClass: function(className) {
                  addClass(this._element, className);
                },
                removeCssClass: function(className) {
                  removeClass(this._element, className);
                },
                getDateElements: function() {
                  return this._calendar.getDateElements();
                },
                findOverlappedRange: function(startDate, endDate) {
                  var startTimestamp = new Date(startDate).getTime();
                  var endTimestamp = new Date(endDate).getTime();
                  var overlappedRange = this._rangeModel.findOverlappedRange(startTimestamp, endTimestamp);
                  return [new Date(overlappedRange[0]), new Date(overlappedRange[1])];
                },
                changeLanguage: function(language) {
                  this._language = language;
                  this._calendar.changeLanguage(this._language);
                  this._datepickerInput.changeLocaleTitles(this.getLocaleText().titles);
                  this.setDateFormat(this._datepickerInput.getFormat());
                  if (this._timePicker) {
                    this._timePicker.changeLanguage(this._language);
                  }
                },
                destroy: function() {
                  this._removeDocumentEvents();
                  this._calendar.destroy();
                  if (this._timePicker) {
                    this._timePicker.destroy();
                  }
                  if (this._datepickerInput) {
                    this._datepickerInput.destroy();
                  }
                  this._removeEvents();
                  removeElement(this._element);
                  this.removeAllOpeners();
                  this._calendar = this._timePicker = this._datepickerInput = this._container = this._element = this._date = this._rangeModel = this._openers = this._isEnabled = this._id = null;
                }
              }
            );
            CustomEvents.mixin(DatePicker);
            module3.exports = DatePicker;
          },
          function(module3, exports3, __webpack_require__) {
            function isObject(obj) {
              return obj === Object(obj);
            }
            module3.exports = isObject;
          },
          function(module3, exports3, __webpack_require__) {
            function forEachOwnProperties(obj, iteratee, context) {
              var key;
              context = context || null;
              for (key in obj) {
                if (obj.hasOwnProperty(key)) {
                  if (iteratee.call(context, obj[key], key, obj) === false) {
                    break;
                  }
                }
              }
            }
            module3.exports = forEachOwnProperties;
          },
          function(module3, exports3, __webpack_require__) {
            var isArray = __webpack_require__(6);
            var isUndefined = __webpack_require__(12);
            function setClassName(element, cssClass) {
              cssClass = isArray(cssClass) ? cssClass.join(" ") : cssClass;
              cssClass = cssClass.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
              if (isUndefined(element.className.baseVal)) {
                element.className = cssClass;
                return;
              }
              element.className.baseVal = cssClass;
            }
            module3.exports = setClassName;
          },
          function(module3, exports3, __webpack_require__) {
            var matches = __webpack_require__(40);
            function closest(element, selector) {
              var parent = element.parentNode;
              if (matches(element, selector)) {
                return element;
              }
              while (parent && parent !== document) {
                if (matches(parent, selector)) {
                  return parent;
                }
                parent = parent.parentNode;
              }
              return null;
            }
            module3.exports = closest;
          },
          function(module3, exports3, __webpack_require__) {
            var convertToKebabCase = __webpack_require__(42);
            function getData(element, key) {
              if (element.dataset) {
                return element.dataset[key];
              }
              return element.getAttribute("data-" + convertToKebabCase(key));
            }
            module3.exports = getData;
          },
          function(module3, exports3, __webpack_require__) {
            var inArray = __webpack_require__(3);
            var getClass = __webpack_require__(17);
            function hasClass(element, cssClass) {
              var origin;
              if (element.classList) {
                return element.classList.contains(cssClass);
              }
              origin = getClass(element).split(/\s+/);
              return inArray(cssClass, origin) > -1;
            }
            module3.exports = hasClass;
          },
          function(module3, exports3, __webpack_require__) {
            function isDate(obj) {
              return obj instanceof Date;
            }
            module3.exports = isDate;
          },
          function(module3, exports3, __webpack_require__) {
            var defineClass = __webpack_require__(0);
            var CustomEvents = __webpack_require__(8);
            var addClass = __webpack_require__(16);
            var hasClass = __webpack_require__(27);
            var removeClass = __webpack_require__(18);
            var removeElement = __webpack_require__(14);
            var extend = __webpack_require__(7);
            var Header = __webpack_require__(44);
            var Body = __webpack_require__(49);
            var localeTexts = __webpack_require__(10);
            var constants = __webpack_require__(1);
            var dateUtil = __webpack_require__(5);
            var util = __webpack_require__(4);
            var DEFAULT_WEEK_START_DAY = constants.DEFAULT_WEEK_START_DAY;
            var DEFAULT_LANGUAGE_TYPE = constants.DEFAULT_LANGUAGE_TYPE;
            var TYPE_DATE = constants.TYPE_DATE;
            var TYPE_MONTH = constants.TYPE_MONTH;
            var TYPE_YEAR = constants.TYPE_YEAR;
            var CLASS_NAME_PREV_MONTH_BTN = constants.CLASS_NAME_PREV_MONTH_BTN;
            var CLASS_NAME_PREV_YEAR_BTN = constants.CLASS_NAME_PREV_YEAR_BTN;
            var CLASS_NAME_NEXT_YEAR_BTN = constants.CLASS_NAME_NEXT_YEAR_BTN;
            var CLASS_NAME_NEXT_MONTH_BTN = constants.CLASS_NAME_NEXT_MONTH_BTN;
            var CLASS_NAME_CALENDAR_MONTH = "tui-calendar-month";
            var CLASS_NAME_CALENDAR_YEAR = "tui-calendar-year";
            var CLASS_NAME_HIDDEN = "tui-hidden";
            var HEADER_SELECTOR = ".tui-calendar-header";
            var BODY_SELECTOR = ".tui-calendar-body";
            var Calendar = defineClass(
              {
                static: {
                  localeTexts
                },
                init: function(container, options) {
                  options = extend(
                    {
                      language: DEFAULT_LANGUAGE_TYPE,
                      showToday: true,
                      showJumpButtons: false,
                      date: new Date(),
                      type: TYPE_DATE,
                      usageStatistics: true,
                      weekStartDay: DEFAULT_WEEK_START_DAY
                    },
                    options
                  );
                  this._container = util.getElement(container);
                  this._container.innerHTML = '<div class="tui-calendar">    <div class="tui-calendar-header"></div>    <div class="tui-calendar-body"></div></div>';
                  this._element = this._container.firstChild;
                  this._date = null;
                  this._type = null;
                  this._header = null;
                  this._body = null;
                  this._initHeader(options);
                  this._initBody(options);
                  this.draw({
                    date: options.date,
                    type: options.type
                  });
                  if (options.usageStatistics) {
                    util.sendHostName();
                  }
                },
                _initHeader: function(options) {
                  var headerContainer = this._element.querySelector(HEADER_SELECTOR);
                  this._header = new Header(headerContainer, options);
                  this._header.on(
                    "click",
                    function(ev) {
                      var target = util.getTarget(ev);
                      if (hasClass(target, CLASS_NAME_PREV_MONTH_BTN)) {
                        this.drawPrev();
                      } else if (hasClass(target, CLASS_NAME_PREV_YEAR_BTN)) {
                        this._onClickPrevYear();
                      } else if (hasClass(target, CLASS_NAME_NEXT_MONTH_BTN)) {
                        this.drawNext();
                      } else if (hasClass(target, CLASS_NAME_NEXT_YEAR_BTN)) {
                        this._onClickNextYear();
                      }
                    },
                    this
                  );
                },
                _initBody: function(options) {
                  var bodyContainer = this._element.querySelector(BODY_SELECTOR);
                  this._body = new Body(bodyContainer, options);
                },
                _onClickPrevYear: function() {
                  if (this.getType() === TYPE_DATE) {
                    this.draw({
                      date: this._getRelativeDate(-12)
                    });
                  } else {
                    this.drawPrev();
                  }
                },
                _onClickNextYear: function() {
                  if (this.getType() === TYPE_DATE) {
                    this.draw({
                      date: this._getRelativeDate(12)
                    });
                  } else {
                    this.drawNext();
                  }
                },
                _isValidType: function(type) {
                  return type === TYPE_DATE || type === TYPE_MONTH || type === TYPE_YEAR;
                },
                _shouldUpdate: function(date, type) {
                  var prevDate = this._date;
                  if (!dateUtil.isValidDate(date)) {
                    throw new Error("Invalid date");
                  }
                  if (!this._isValidType(type)) {
                    throw new Error("Invalid layer type");
                  }
                  return !prevDate || prevDate.getFullYear() !== date.getFullYear() || prevDate.getMonth() !== date.getMonth() || this.getType() !== type;
                },
                _render: function() {
                  var date = this._date;
                  var type = this.getType();
                  this._header.render(date, type);
                  this._body.render(date, type);
                  removeClass(this._element, CLASS_NAME_CALENDAR_MONTH, CLASS_NAME_CALENDAR_YEAR);
                  switch (type) {
                    case TYPE_MONTH:
                      addClass(this._element, CLASS_NAME_CALENDAR_MONTH);
                      break;
                    case TYPE_YEAR:
                      addClass(this._element, CLASS_NAME_CALENDAR_YEAR);
                      break;
                  }
                },
                _getRelativeDate: function(step) {
                  var prev = this._date;
                  return new Date(prev.getFullYear(), prev.getMonth() + step);
                },
                draw: function(options) {
                  var date, type;
                  options = options || {};
                  date = options.date || this._date;
                  type = (options.type || this.getType()).toLowerCase();
                  if (this._shouldUpdate(date, type)) {
                    this._date = date;
                    this._type = type;
                    this._render();
                  }
                  this.fire("draw", {
                    date: this._date,
                    type,
                    dateElements: this._body.getDateElements()
                  });
                },
                show: function() {
                  removeClass(this._element, CLASS_NAME_HIDDEN);
                },
                hide: function() {
                  addClass(this._element, CLASS_NAME_HIDDEN);
                },
                drawNext: function() {
                  this.draw({
                    date: this.getNextDate()
                  });
                },
                drawPrev: function() {
                  this.draw({
                    date: this.getPrevDate()
                  });
                },
                getNextDate: function() {
                  if (this.getType() === TYPE_DATE) {
                    return this._getRelativeDate(1);
                  }
                  return this.getNextYearDate();
                },
                getPrevDate: function() {
                  if (this.getType() === TYPE_DATE) {
                    return this._getRelativeDate(-1);
                  }
                  return this.getPrevYearDate();
                },
                getNextYearDate: function(customStep) {
                  if (customStep) {
                    return this._getRelativeDate(customStep);
                  }
                  switch (this.getType()) {
                    case TYPE_DATE:
                    case TYPE_MONTH:
                      return this._getRelativeDate(12);
                    case TYPE_YEAR:
                      return this._getRelativeDate(108);
                    default:
                      throw new Error("Unknown layer type");
                  }
                },
                getPrevYearDate: function(customStep) {
                  if (customStep) {
                    return this._getRelativeDate(customStep);
                  }
                  switch (this.getType()) {
                    case TYPE_DATE:
                    case TYPE_MONTH:
                      return this._getRelativeDate(-12);
                    case TYPE_YEAR:
                      return this._getRelativeDate(-108);
                    default:
                      throw new Error("Unknown layer type");
                  }
                },
                changeLanguage: function(language) {
                  this._header.changeLanguage(language);
                  this._body.changeLanguage(language);
                  this._render();
                },
                getDate: function() {
                  return new Date(this._date);
                },
                getType: function() {
                  return this._type;
                },
                getDateElements: function() {
                  return this._body.getDateElements();
                },
                addCssClass: function(className) {
                  addClass(this._element, className);
                },
                removeCssClass: function(className) {
                  removeClass(this._element, className);
                },
                destroy: function() {
                  this._header.destroy();
                  this._body.destroy();
                  removeElement(this._element);
                  this._type = this._date = this._container = this._element = this._header = this._body = null;
                }
              }
            );
            CustomEvents.mixin(Calendar);
            module3.exports = Calendar;
          },
          function(module3, exports3, __webpack_require__) {
            var inArray = __webpack_require__(3);
            var forEachArray = __webpack_require__(2);
            var defineClass = __webpack_require__(0);
            var util = __webpack_require__(4);
            var dateUtil = __webpack_require__(5);
            var constants = __webpack_require__(1);
            var localeTexts = __webpack_require__(10);
            var rFormableKeys = /\\?(yyyy|yy|mmmm|mmm|mm|m|dd|d|hh|h|a)/gi;
            var mapForConverting = {
              yyyy: {
                expression: "(\\d{4}|\\d{2})",
                type: constants.TYPE_YEAR
              },
              yy: {
                expression: "(\\d{4}|\\d{2})",
                type: constants.TYPE_YEAR
              },
              y: {
                expression: "(\\d{4}|\\d{2})",
                type: constants.TYPE_YEAR
              },
              M: {
                expression: "(1[012]|0[1-9]|[1-9])",
                type: constants.TYPE_MONTH
              },
              MM: {
                expression: "(1[012]|0[1-9]|[1-9])",
                type: constants.TYPE_MONTH
              },
              MMM: {
                expression: "(1[012]|0[1-9]|[1-9])",
                type: constants.TYPE_MONTH
              },
              MMMM: {
                expression: "(1[012]|0[1-9]|[1-9])",
                type: constants.TYPE_MONTH
              },
              mmm: {
                expression: "(1[012]|0[1-9]|[1-9])",
                type: constants.TYPE_MONTH
              },
              mmmm: {
                expression: "(1[012]|0[1-9]|[1-9])",
                type: constants.TYPE_MONTH
              },
              dd: {
                expression: "([12]\\d{1}|3[01]|0[1-9]|[1-9])",
                type: constants.TYPE_DATE
              },
              d: {
                expression: "([12]\\d{1}|3[01]|0[1-9]|[1-9])",
                type: constants.TYPE_DATE
              },
              D: {
                expression: "([12]\\d{1}|3[01]|0[1-9]|[1-9])",
                type: constants.TYPE_DATE
              },
              DD: {
                expression: "([12]\\d{1}|3[01]|0[1-9]|[1-9])",
                type: constants.TYPE_DATE
              },
              h: {
                expression: "(d{1}|0\\d{1}|1\\d{1}|2[0123])",
                type: constants.TYPE_HOUR
              },
              hh: {
                expression: "(d{1}|[01]\\d{1}|2[0123])",
                type: constants.TYPE_HOUR
              },
              H: {
                expression: "(d{1}|0\\d{1}|1\\d{1}|2[0123])",
                type: constants.TYPE_HOUR
              },
              HH: {
                expression: "(d{1}|[01]\\d{1}|2[0123])",
                type: constants.TYPE_HOUR
              },
              m: {
                expression: "(d{1}|[012345]\\d{1})",
                type: constants.TYPE_MINUTE
              },
              mm: {
                expression: "(d{1}|[012345]\\d{1})",
                type: constants.TYPE_MINUTE
              },
              a: {
                expression: "([ap]m)",
                type: constants.TYPE_MERIDIEM
              },
              A: {
                expression: "([ap]m)",
                type: constants.TYPE_MERIDIEM
              }
            };
            var DateTimeFormatter = defineClass(
              {
                init: function(rawStr, titles) {
                  this._rawStr = rawStr;
                  this._keyOrder = null;
                  this._regExp = null;
                  this._titles = titles || localeTexts.en.titles;
                  this._parseFormat();
                },
                _parseFormat: function() {
                  var regExpStr = "^";
                  var matchedKeys = this._rawStr.match(rFormableKeys);
                  var keyOrder = [];
                  matchedKeys = util.filter(matchedKeys, function(key) {
                    return key[0] !== "\\";
                  });
                  forEachArray(matchedKeys, function(key, index) {
                    if (!/m/i.test(key)) {
                      key = key.toLowerCase();
                    }
                    regExpStr += mapForConverting[key].expression + "[\\D\\s]*";
                    keyOrder[index] = mapForConverting[key].type;
                  });
                  regExpStr += "$";
                  this._keyOrder = keyOrder;
                  this._regExp = new RegExp(regExpStr, "gi");
                },
                parse: function(str) {
                  var dateHash = {
                    year: 0,
                    month: 1,
                    date: 1,
                    hour: 0,
                    minute: 0
                  };
                  var hasMeridiem = false;
                  var isPM = false;
                  var matched;
                  this._regExp.lastIndex = 0;
                  matched = this._regExp.exec(str);
                  if (!matched) {
                    throw Error('DateTimeFormatter: Not matched - "' + str + '"');
                  }
                  forEachArray(this._keyOrder, function(name, index) {
                    var value = matched[index + 1];
                    if (name === constants.TYPE_MERIDIEM && /[ap]m/i.test(value)) {
                      hasMeridiem = true;
                      isPM = /pm/i.test(value);
                    } else {
                      value = Number(value);
                      if (value !== 0 && !value) {
                        throw Error("DateTimeFormatter: Unknown value - " + matched[index + 1]);
                      }
                      if (name === constants.TYPE_YEAR && value < 100) {
                        value += 2e3;
                      }
                      dateHash[name] = value;
                    }
                  });
                  if (hasMeridiem) {
                    isPM = isPM || dateHash.hour > 12;
                    dateHash.hour %= 12;
                    if (isPM) {
                      dateHash.hour += 12;
                    }
                  }
                  return new Date(
                    dateHash.year,
                    dateHash.month - 1,
                    dateHash.date,
                    dateHash.hour,
                    dateHash.minute
                  );
                },
                getRawString: function() {
                  return this._rawStr;
                },
                format: function(dateObj) {
                  var year = dateObj.getFullYear();
                  var month = dateObj.getMonth() + 1;
                  var dayInMonth = dateObj.getDate();
                  var day = dateObj.getDay();
                  var hour = dateObj.getHours();
                  var minute = dateObj.getMinutes();
                  var meridiem = "a";
                  var replaceMap;
                  if (inArray(constants.TYPE_MERIDIEM, this._keyOrder) > -1) {
                    meridiem = hour >= 12 ? "pm" : "am";
                    hour = dateUtil.getMeridiemHour(hour);
                  }
                  replaceMap = {
                    yyyy: year,
                    yy: String(year).substr(2, 2),
                    M: month,
                    MM: dateUtil.prependLeadingZero(month),
                    MMM: this._titles.MMM[month - 1],
                    MMMM: this._titles.MMMM[month - 1],
                    d: dayInMonth,
                    dd: dateUtil.prependLeadingZero(dayInMonth),
                    D: this._titles.D[day],
                    DD: this._titles.DD[day],
                    hh: dateUtil.prependLeadingZero(hour),
                    h: hour,
                    mm: dateUtil.prependLeadingZero(minute),
                    m: minute,
                    A: meridiem.toUpperCase(),
                    a: meridiem
                  };
                  return this._rawStr.replace(rFormableKeys, function(key) {
                    if (key[0] === "\\") {
                      return key.substr(1);
                    }
                    return replaceMap[key] || replaceMap[key.toLowerCase()] || "";
                  });
                }
              }
            );
            module3.exports = DateTimeFormatter;
          },
          function(module3, exports3, __webpack_require__) {
            var isString = __webpack_require__(13);
            var forEach = __webpack_require__(9);
            var safeEvent = __webpack_require__(32);
            function on(element, types, handler, context) {
              if (isString(types)) {
                forEach(types.split(/\s+/g), function(type) {
                  bindEvent(element, type, handler, context);
                });
                return;
              }
              forEach(types, function(func, type) {
                bindEvent(element, type, func, handler);
              });
            }
            function bindEvent(element, type, handler, context) {
              function eventHandler(e) {
                handler.call(context || element, e || window.event);
              }
              if ("addEventListener" in element) {
                element.addEventListener(type, eventHandler);
              } else if ("attachEvent" in element) {
                element.attachEvent("on" + type, eventHandler);
              }
              memorizeHandler(element, type, handler, eventHandler);
            }
            function memorizeHandler(element, type, handler, wrappedHandler) {
              var events = safeEvent(element, type);
              var existInEvents = false;
              forEach(events, function(obj) {
                if (obj.handler === handler) {
                  existInEvents = true;
                  return false;
                }
                return true;
              });
              if (!existInEvents) {
                events.push({
                  handler,
                  wrappedHandler
                });
              }
            }
            module3.exports = on;
          },
          function(module3, exports3, __webpack_require__) {
            var EVENT_KEY = "_feEventKey";
            function safeEvent(element, type) {
              var events = element[EVENT_KEY];
              var handlers;
              if (!events) {
                events = element[EVENT_KEY] = {};
              }
              handlers = events[type];
              if (!handlers) {
                handlers = events[type] = [];
              }
              return handlers;
            }
            module3.exports = safeEvent;
          },
          function(module3, exports3, __webpack_require__) {
            var isString = __webpack_require__(13);
            var forEach = __webpack_require__(9);
            var safeEvent = __webpack_require__(32);
            function off(element, types, handler) {
              if (isString(types)) {
                forEach(types.split(/\s+/g), function(type) {
                  unbindEvent(element, type, handler);
                });
                return;
              }
              forEach(types, function(func, type) {
                unbindEvent(element, type, func);
              });
            }
            function unbindEvent(element, type, handler) {
              var events = safeEvent(element, type);
              var index;
              if (!handler) {
                forEach(events, function(item) {
                  removeHandler(element, type, item.wrappedHandler);
                });
                events.splice(0, events.length);
              } else {
                forEach(events, function(item, idx) {
                  if (handler === item.handler) {
                    removeHandler(element, type, item.wrappedHandler);
                    index = idx;
                    return false;
                  }
                  return true;
                });
                events.splice(index, 1);
              }
            }
            function removeHandler(element, type, handler) {
              if ("removeEventListener" in element) {
                element.removeEventListener(type, handler);
              } else if ("detachEvent" in element) {
                element.detachEvent("on" + type, handler);
              }
            }
            module3.exports = off;
          },
          function(module3, exports3, __webpack_require__) {
            var DatePicker = __webpack_require__(21);
            var DateRangePicker = __webpack_require__(60);
            var Calendar = __webpack_require__(29);
            __webpack_require__(61);
            DatePicker.createCalendar = function(wrapperElement, options) {
              return new Calendar(wrapperElement, options);
            };
            DatePicker.createRangePicker = function(options) {
              return new DateRangePicker(options);
            };
            module3.exports = DatePicker;
          },
          function(module3, exports3, __webpack_require__) {
            var createObject = __webpack_require__(36);
            function inherit(subType, superType) {
              var prototype = createObject(superType.prototype);
              prototype.constructor = subType;
              subType.prototype = prototype;
            }
            module3.exports = inherit;
          },
          function(module3, exports3, __webpack_require__) {
            function createObject(obj) {
              function F() {
              }
              F.prototype = obj;
              return new F();
            }
            module3.exports = createObject;
          },
          function(module3, exports3, __webpack_require__) {
            var isUndefined = __webpack_require__(12);
            var isNull = __webpack_require__(38);
            function isExisty(param) {
              return !isUndefined(param) && !isNull(param);
            }
            module3.exports = isExisty;
          },
          function(module3, exports3, __webpack_require__) {
            function isNull(obj) {
              return obj === null;
            }
            module3.exports = isNull;
          },
          function(module3, exports3, __webpack_require__) {
            function isFunction(obj) {
              return obj instanceof Function;
            }
            module3.exports = isFunction;
          },
          function(module3, exports3, __webpack_require__) {
            var inArray = __webpack_require__(3);
            var toArray = __webpack_require__(41);
            var elProto = Element.prototype;
            var matchSelector = elProto.matches || elProto.webkitMatchesSelector || elProto.mozMatchesSelector || elProto.msMatchesSelector || function(selector) {
              var doc = this.document || this.ownerDocument;
              return inArray(this, toArray(doc.querySelectorAll(selector))) > -1;
            };
            function matches(element, selector) {
              return matchSelector.call(element, selector);
            }
            module3.exports = matches;
          },
          function(module3, exports3, __webpack_require__) {
            var forEachArray = __webpack_require__(2);
            function toArray(arrayLike) {
              var arr;
              try {
                arr = Array.prototype.slice.call(arrayLike);
              } catch (e) {
                arr = [];
                forEachArray(arrayLike, function(value) {
                  arr.push(value);
                });
              }
              return arr;
            }
            module3.exports = toArray;
          },
          function(module3, exports3, __webpack_require__) {
            function convertToKebabCase(key) {
              return key.replace(/([A-Z])/g, function(match) {
                return "-" + match.toLowerCase();
              });
            }
            module3.exports = convertToKebabCase;
          },
          function(module3, exports3) {
            module3.exports = __WEBPACK_EXTERNAL_MODULE__43__;
          },
          function(module3, exports3, __webpack_require__) {
            var defineClass = __webpack_require__(0);
            var CustomEvents = __webpack_require__(8);
            var closest = __webpack_require__(25);
            var removeElement = __webpack_require__(14);
            var localeTexts = __webpack_require__(10);
            var headerTmpl = __webpack_require__(45);
            var DateTimeFormatter = __webpack_require__(30);
            var constants = __webpack_require__(1);
            var util = __webpack_require__(4);
            var mouseTouchEvent = __webpack_require__(19);
            var TYPE_DATE = constants.TYPE_DATE;
            var TYPE_MONTH = constants.TYPE_MONTH;
            var TYPE_YEAR = constants.TYPE_YEAR;
            var CLASS_NAME_TITLE_MONTH = "tui-calendar-title-month";
            var CLASS_NAME_TITLE_YEAR = "tui-calendar-title-year";
            var CLASS_NAME_TITLE_YEAR_TO_YEAR = "tui-calendar-title-year-to-year";
            var SELECTOR_INNER_ELEM = ".tui-calendar-header-inner";
            var SELECTOR_INFO_ELEM = ".tui-calendar-header-info";
            var SELECTOR_BTN = ".tui-calendar-btn";
            var YEAR_TITLE_FORMAT = "yyyy";
            var Header = defineClass(
              {
                init: function(container, option) {
                  this._container = util.getElement(container);
                  this._innerElement = null;
                  this._infoElement = null;
                  this._showToday = option.showToday;
                  this._showJumpButtons = option.showJumpButtons;
                  this._yearMonthTitleFormatter = null;
                  this._yearTitleFormatter = null;
                  this._todayFormatter = null;
                  this._setFormatters(localeTexts[option.language]);
                  this._setEvents(option);
                },
                _setFormatters: function(localeText) {
                  this._yearMonthTitleFormatter = new DateTimeFormatter(
                    localeText.titleFormat,
                    localeText.titles
                  );
                  this._yearTitleFormatter = new DateTimeFormatter(YEAR_TITLE_FORMAT, localeText.titles);
                  this._todayFormatter = new DateTimeFormatter(localeText.todayFormat, localeText.titles);
                },
                _setEvents: function() {
                  mouseTouchEvent.on(this._container, "click", this._onClickHandler, this);
                },
                _removeEvents: function() {
                  this.off();
                  mouseTouchEvent.off(this._container, "click", this._onClickHandler);
                },
                _onClickHandler: function(ev) {
                  var target = util.getTarget(ev);
                  if (closest(target, SELECTOR_BTN)) {
                    this.fire("click", ev);
                  }
                },
                _getTitleClass: function(type) {
                  switch (type) {
                    case TYPE_DATE:
                      return CLASS_NAME_TITLE_MONTH;
                    case TYPE_MONTH:
                      return CLASS_NAME_TITLE_YEAR;
                    case TYPE_YEAR:
                      return CLASS_NAME_TITLE_YEAR_TO_YEAR;
                    default:
                      return "";
                  }
                },
                _getTitleText: function(date, type) {
                  var currentYear, start, end;
                  switch (type) {
                    case TYPE_DATE:
                      return this._yearMonthTitleFormatter.format(date);
                    case TYPE_MONTH:
                      return this._yearTitleFormatter.format(date);
                    case TYPE_YEAR:
                      currentYear = date.getFullYear();
                      start = new Date(currentYear - 4, 0, 1);
                      end = new Date(currentYear + 4, 0, 1);
                      return this._yearTitleFormatter.format(start) + " - " + this._yearTitleFormatter.format(end);
                    default:
                      return "";
                  }
                },
                changeLanguage: function(language) {
                  this._setFormatters(localeTexts[language]);
                },
                render: function(date, type) {
                  var context = {
                    showToday: this._showToday,
                    showJumpButtons: this._showJumpButtons,
                    todayText: this._todayFormatter.format(new Date()),
                    isDateCalendar: type === TYPE_DATE,
                    titleClass: this._getTitleClass(type),
                    title: this._getTitleText(date, type)
                  };
                  this._container.innerHTML = headerTmpl(context).replace(/^\s+|\s+$/g, "");
                  this._innerElement = this._container.querySelector(SELECTOR_INNER_ELEM);
                  if (context.showToday) {
                    this._infoElement = this._container.querySelector(SELECTOR_INFO_ELEM);
                  }
                },
                destroy: function() {
                  this._removeEvents();
                  removeElement(this._innerElement);
                  removeElement(this._infoElement);
                  this._container = this._showToday = this._showJumpButtons = this._yearMonthTitleFormatter = this._yearTitleFormatter = this._todayFormatter = this._innerElement = this._infoElement = null;
                }
              }
            );
            CustomEvents.mixin(Header);
            module3.exports = Header;
          },
          function(module3, exports3, __webpack_require__) {
            var template = __webpack_require__(11);
            module3.exports = function(context) {
              var source = '{{if isDateCalendar}}  {{if showJumpButtons}}    <div class="tui-calendar-header-inner tui-calendar-has-btns">      <button class="tui-calendar-btn tui-calendar-btn-prev-year">Prev year</button>      <button class="tui-calendar-btn tui-calendar-btn-prev-month">Prev month</button>      <em class="tui-calendar-title {{titleClass}}">{{title}}</em>      <button class="tui-calendar-btn tui-calendar-btn-next-month">Next month</button>      <button class="tui-calendar-btn tui-calendar-btn-next-year">Next year</button>    </div>  {{else}}    <div class="tui-calendar-header-inner">      <button class="tui-calendar-btn tui-calendar-btn-prev-month">Prev month</button>      <em class="tui-calendar-title {{titleClass}}">{{title}}</em>      <button class="tui-calendar-btn tui-calendar-btn-next-month">Next month</button>    </div>  {{/if}}{{else}}  <div class="tui-calendar-header-inner">    <button class="tui-calendar-btn tui-calendar-btn-prev-year">Prev year</button>    <em class="tui-calendar-title {{titleClass}}">{{title}}</em>    <button class="tui-calendar-btn tui-calendar-btn-next-year">Next year</button>  </div>{{/if}}{{if showToday}}  <div class="tui-calendar-header-info">    <p class="tui-calendar-title-today">{{todayText}}</p>  </div>{{/if}}';
              return template(source, context);
            };
          },
          function(module3, exports3, __webpack_require__) {
            function isHTMLNode(html) {
              if (typeof HTMLElement === "object") {
                return html && (html instanceof HTMLElement || !!html.nodeType);
              }
              return !!(html && html.nodeType);
            }
            module3.exports = isHTMLNode;
          },
          function(module3, exports3, __webpack_require__) {
            var isUndefined = __webpack_require__(12);
            var imagePing = __webpack_require__(48);
            var ms7days = 7 * 24 * 60 * 60 * 1e3;
            function isExpired(date) {
              var now = new Date().getTime();
              return now - date > ms7days;
            }
            function sendHostname(appName, trackingId) {
              var url = "https://www.google-analytics.com/collect";
              var hostname = location.hostname;
              var hitType = "event";
              var eventCategory = "use";
              var applicationKeyForStorage = "TOAST UI " + appName + " for " + hostname + ": Statistics";
              var date = window.localStorage.getItem(applicationKeyForStorage);
              if (!isUndefined(window.tui) && window.tui.usageStatistics === false) {
                return;
              }
              if (date && !isExpired(date)) {
                return;
              }
              window.localStorage.setItem(applicationKeyForStorage, new Date().getTime());
              setTimeout(function() {
                if (document.readyState === "interactive" || document.readyState === "complete") {
                  imagePing(url, {
                    v: 1,
                    t: hitType,
                    tid: trackingId,
                    cid: hostname,
                    dp: hostname,
                    dh: appName,
                    el: appName,
                    ec: eventCategory
                  });
                }
              }, 1e3);
            }
            module3.exports = sendHostname;
          },
          function(module3, exports3, __webpack_require__) {
            var forEachOwnProperties = __webpack_require__(23);
            function imagePing(url, trackingInfo) {
              var trackingElement = document.createElement("img");
              var queryString = "";
              forEachOwnProperties(trackingInfo, function(value, key) {
                queryString += "&" + key + "=" + value;
              });
              queryString = queryString.substring(1);
              trackingElement.src = url + "?" + queryString;
              trackingElement.style.display = "none";
              document.body.appendChild(trackingElement);
              document.body.removeChild(trackingElement);
              return trackingElement;
            }
            module3.exports = imagePing;
          },
          function(module3, exports3, __webpack_require__) {
            var forEachArray = __webpack_require__(2);
            var defineClass = __webpack_require__(0);
            var DateLayer = __webpack_require__(50);
            var MonthLayer = __webpack_require__(52);
            var YearLayer = __webpack_require__(54);
            var constants = __webpack_require__(1);
            var TYPE_DATE = constants.TYPE_DATE;
            var TYPE_MONTH = constants.TYPE_MONTH;
            var TYPE_YEAR = constants.TYPE_YEAR;
            var Body = defineClass(
              {
                init: function(bodyContainer, options) {
                  var language = options.language;
                  var weekStartDay = options.weekStartDay;
                  this._container = bodyContainer;
                  this._dateLayer = new DateLayer(language, weekStartDay);
                  this._monthLayer = new MonthLayer(language);
                  this._yearLayer = new YearLayer(language);
                  this._currentLayer = this._dateLayer;
                },
                _getLayer: function(type) {
                  switch (type) {
                    case TYPE_DATE:
                      return this._dateLayer;
                    case TYPE_MONTH:
                      return this._monthLayer;
                    case TYPE_YEAR:
                      return this._yearLayer;
                    default:
                      return this._currentLayer;
                  }
                },
                _eachLayer: function(fn) {
                  forEachArray([this._dateLayer, this._monthLayer, this._yearLayer], fn);
                },
                changeLanguage: function(language) {
                  this._eachLayer(function(layer) {
                    layer.changeLanguage(language);
                  });
                },
                render: function(date, type) {
                  var nextLayer = this._getLayer(type);
                  var prevLayer = this._currentLayer;
                  prevLayer.remove();
                  nextLayer.render(date, this._container);
                  this._currentLayer = nextLayer;
                },
                getDateElements: function() {
                  return this._currentLayer.getDateElements();
                },
                destroy: function() {
                  this._eachLayer(function(layer) {
                    layer.remove();
                  });
                  this._container = this._currentLayer = this._dateLayer = this._monthLayer = this._yearLayer = null;
                }
              }
            );
            module3.exports = Body;
          },
          function(module3, exports3, __webpack_require__) {
            var defineClass = __webpack_require__(0);
            var dateUtil = __webpack_require__(5);
            var bodyTmpl = __webpack_require__(51);
            var LayerBase = __webpack_require__(20);
            var TYPE_DATE = __webpack_require__(1).TYPE_DATE;
            var WEEK_START_DAY_MAP = __webpack_require__(1).WEEK_START_DAY_MAP;
            var DATE_SELECTOR = ".tui-calendar-date";
            var DAYS_OF_WEEK = 7;
            var DateLayer = defineClass(
              LayerBase,
              {
                init: function(language, weekStartDay) {
                  LayerBase.call(this, language);
                  this.weekStartDay = WEEK_START_DAY_MAP[String(weekStartDay).toLowerCase()] || 0;
                },
                _type: TYPE_DATE,
                _makeContext: function(date) {
                  var daysShort = this._localeText.titles.D;
                  var year, month, days, i;
                  date = date || new Date();
                  year = date.getFullYear();
                  month = date.getMonth() + 1;
                  if (this.weekStartDay) {
                    days = daysShort.slice();
                    for (i = 0; i < this.weekStartDay; i += 1) {
                      days.push(days.shift());
                    }
                    daysShort = days;
                  }
                  return {
                    Sun: daysShort[0],
                    Mon: daysShort[1],
                    Tue: daysShort[2],
                    Wed: daysShort[3],
                    Thu: daysShort[4],
                    Fri: daysShort[5],
                    Sat: daysShort[6],
                    year,
                    month,
                    weeks: this._getWeeks(year, month)
                  };
                },
                _getWeeks: function(year, month) {
                  var weekNumber = 0;
                  var weeksCount = 6;
                  var weeks = [];
                  var week, dates, i;
                  while (weekNumber < weeksCount) {
                    dates = [];
                    for (i = this.weekStartDay; i < DAYS_OF_WEEK + this.weekStartDay; i += 1) {
                      dates.push(dateUtil.getDateOfWeek(year, month, weekNumber, i));
                    }
                    week = this._getWeek(year, month, dates);
                    if (this.weekStartDay && !_isFirstWeek(weekNumber, week[0].dayInMonth)) {
                      weeks.push(this._getFirstWeek(year, month));
                      weeksCount -= 1;
                    }
                    weeks.push(week);
                    weekNumber += 1;
                  }
                  return weeks;
                },
                _getWeek: function(currentYear, currentMonth, dates) {
                  var firstDateOfCurrentMonth = new Date(currentYear, currentMonth - 1, 1);
                  var lastDateOfCurrentMonth = new Date(currentYear, currentMonth, 0);
                  var contexts = [];
                  var i = 0;
                  var length = dates.length;
                  var date, className;
                  for (; i < length; i += 1) {
                    className = "tui-calendar-date";
                    date = dates[i];
                    if (date < firstDateOfCurrentMonth) {
                      className += " tui-calendar-prev-month";
                    }
                    if (date > lastDateOfCurrentMonth) {
                      className += " tui-calendar-next-month";
                    }
                    if (date.getDay() === 0) {
                      className += " tui-calendar-sun";
                    } else if (date.getDay() === 6) {
                      className += " tui-calendar-sat";
                    }
                    contexts.push({
                      dayInMonth: date.getDate(),
                      className,
                      timestamp: date.getTime()
                    });
                  }
                  return contexts;
                },
                render: function(date, container) {
                  var context = this._makeContext(date);
                  container.innerHTML = bodyTmpl(context);
                  this._element = container.firstChild;
                },
                getDateElements: function() {
                  return this._element.querySelectorAll(DATE_SELECTOR);
                },
                _getFirstWeek: function(year, month) {
                  var firstWeekDates = [];
                  var i;
                  for (i = this.weekStartDay; i < DAYS_OF_WEEK + this.weekStartDay; i += 1) {
                    firstWeekDates.push(dateUtil.getDateOfWeek(year, month, -1, i));
                  }
                  return this._getWeek(year, month, firstWeekDates);
                }
              }
            );
            function _isFirstWeek(weekIndex, dayInMonth) {
              return weekIndex || dayInMonth === 1 || dayInMonth > DAYS_OF_WEEK;
            }
            module3.exports = DateLayer;
          },
          function(module3, exports3, __webpack_require__) {
            var template = __webpack_require__(11);
            module3.exports = function(context) {
              var source = '<table class="tui-calendar-body-inner" cellspacing="0" cellpadding="0">  <caption><span>Dates</span></caption>  <thead class="tui-calendar-body-header">    <tr>      <th class="tui-sun" scope="col">{{Sun}}</th>      <th scope="col">{{Mon}}</th>      <th scope="col">{{Tue}}</th>      <th scope="col">{{Wed}}</th>      <th scope="col">{{Thu}}</th>      <th scope="col">{{Fri}}</th>      <th class="tui-sat" scope="col">{{Sat}}</th>    </tr>  </thead>  <tbody>    {{each weeks}}    <tr class="tui-calendar-week">      {{each @this}}      <td class="{{@this["className"]}}" data-timestamp="{{@this["timestamp"]}}">{{@this["dayInMonth"]}}</td>      {{/each}}    </tr>    {{/each}}  </tbody></table>';
              return template(source, context);
            };
          },
          function(module3, exports3, __webpack_require__) {
            var defineClass = __webpack_require__(0);
            var bodyTmpl = __webpack_require__(53);
            var LayerBase = __webpack_require__(20);
            var TYPE_MONTH = __webpack_require__(1).TYPE_MONTH;
            var dateUtil = __webpack_require__(5);
            var DATE_SELECTOR = ".tui-calendar-month";
            var MonthLayer = defineClass(
              LayerBase,
              {
                init: function(language) {
                  LayerBase.call(this, language);
                },
                _type: TYPE_MONTH,
                _makeContext: function(date) {
                  var monthsShort = this._localeText.titles.MMM;
                  return {
                    year: date.getFullYear(),
                    Jan: monthsShort[0],
                    Feb: monthsShort[1],
                    Mar: monthsShort[2],
                    Apr: monthsShort[3],
                    May: monthsShort[4],
                    Jun: monthsShort[5],
                    Jul: monthsShort[6],
                    Aug: monthsShort[7],
                    Sep: monthsShort[8],
                    Oct: monthsShort[9],
                    Nov: monthsShort[10],
                    Dec: monthsShort[11],
                    getFirstDayTimestamp: dateUtil.getFirstDayTimestamp
                  };
                },
                render: function(date, container) {
                  var context = this._makeContext(date);
                  container.innerHTML = bodyTmpl(context);
                  this._element = container.firstChild;
                },
                getDateElements: function() {
                  return this._element.querySelectorAll(DATE_SELECTOR);
                }
              }
            );
            module3.exports = MonthLayer;
          },
          function(module3, exports3, __webpack_require__) {
            var template = __webpack_require__(11);
            module3.exports = function(context) {
              var source = '<table class="tui-calendar-body-inner">  <caption><span>Months</span></caption>  <tbody>    <tr class="tui-calendar-month-group">      <td class="tui-calendar-month" data-timestamp={{getFirstDayTimestamp year 0}}>{{Jan}}</td>      <td class="tui-calendar-month" data-timestamp={{getFirstDayTimestamp year 1}}>{{Feb}}</td>      <td class="tui-calendar-month" data-timestamp={{getFirstDayTimestamp year 2}}>{{Mar}}</td>      <td class="tui-calendar-month" data-timestamp={{getFirstDayTimestamp year 3}}>{{Apr}}</td>    </tr>    <tr class="tui-calendar-month-group">      <td class="tui-calendar-month" data-timestamp={{getFirstDayTimestamp year 4}}>{{May}}</td>      <td class="tui-calendar-month" data-timestamp={{getFirstDayTimestamp year 5}}>{{Jun}}</td>      <td class="tui-calendar-month" data-timestamp={{getFirstDayTimestamp year 6}}>{{Jul}}</td>      <td class="tui-calendar-month" data-timestamp={{getFirstDayTimestamp year 7}}>{{Aug}}</td>    </tr>    <tr class="tui-calendar-month-group">      <td class="tui-calendar-month" data-timestamp={{getFirstDayTimestamp year 8}}>{{Sep}}</td>      <td class="tui-calendar-month" data-timestamp={{getFirstDayTimestamp year 9}}>{{Oct}}</td>      <td class="tui-calendar-month" data-timestamp={{getFirstDayTimestamp year 10}}>{{Nov}}</td>      <td class="tui-calendar-month" data-timestamp={{getFirstDayTimestamp year 11}}>{{Dec}}</td>    </tr>  </tbody></table>';
              return template(source, context);
            };
          },
          function(module3, exports3, __webpack_require__) {
            var defineClass = __webpack_require__(0);
            var bodyTmpl = __webpack_require__(55);
            var LayerBase = __webpack_require__(20);
            var TYPE_YEAR = __webpack_require__(1).TYPE_YEAR;
            var dateUtil = __webpack_require__(5);
            var DATE_SELECTOR = ".tui-calendar-year";
            var YearLayer = defineClass(
              LayerBase,
              {
                init: function(language) {
                  LayerBase.call(this, language);
                },
                _type: TYPE_YEAR,
                _makeContext: function(date) {
                  var year = date.getFullYear();
                  return {
                    yearGroups: [
                      dateUtil.getRangeArr(year - 4, year - 2),
                      dateUtil.getRangeArr(year - 1, year + 1),
                      dateUtil.getRangeArr(year + 2, year + 4)
                    ],
                    getFirstDayTimestamp: dateUtil.getFirstDayTimestamp
                  };
                },
                render: function(date, container) {
                  var context = this._makeContext(date);
                  container.innerHTML = bodyTmpl(context);
                  this._element = container.firstChild;
                },
                getDateElements: function() {
                  return this._element.querySelectorAll(DATE_SELECTOR);
                }
              }
            );
            module3.exports = YearLayer;
          },
          function(module3, exports3, __webpack_require__) {
            var template = __webpack_require__(11);
            module3.exports = function(context) {
              var source = '<table class="tui-calendar-body-inner">  <caption><span>Years</span></caption>  <tbody>    {{each yearGroups}}    <tr class="tui-calendar-year-group">      {{each @this}}      <td class="tui-calendar-year" data-timestamp={{getFirstDayTimestamp @this 0}}>        {{@this}}      </td>      {{/each}}    </tr>    {{/each}}  </tbody></table>';
              return template(source, context);
            };
          },
          function(module3, exports3, __webpack_require__) {
            var forEachArray = __webpack_require__(2);
            var defineClass = __webpack_require__(0);
            var isNumber = __webpack_require__(15);
            var Range = __webpack_require__(57);
            var util = __webpack_require__(4);
            var RangeModel = defineClass(
              {
                init: function(ranges) {
                  ranges = ranges || [];
                  this._ranges = [];
                  forEachArray(
                    ranges,
                    function(range) {
                      this.add(range[0], range[1]);
                    },
                    this
                  );
                },
                contains: function(start, end) {
                  var i = 0;
                  var length = this._ranges.length;
                  var range;
                  for (; i < length; i += 1) {
                    range = this._ranges[i];
                    if (range.contains(start, end)) {
                      return true;
                    }
                  }
                  return false;
                },
                hasOverlap: function(start, end) {
                  var i = 0;
                  var length = this._ranges.length;
                  var range;
                  for (; i < length; i += 1) {
                    range = this._ranges[i];
                    if (range.isOverlapped(start, end)) {
                      return true;
                    }
                  }
                  return false;
                },
                add: function(start, end) {
                  var overlapped = false;
                  var i = 0;
                  var len = this._ranges.length;
                  var range;
                  for (; i < len; i += 1) {
                    range = this._ranges[i];
                    overlapped = range.isOverlapped(start, end);
                    if (overlapped) {
                      range.merge(start, end);
                      break;
                    }
                    if (start < range.start) {
                      break;
                    }
                  }
                  if (!overlapped) {
                    this._ranges.splice(i, 0, new Range(start, end));
                  }
                },
                getMinimumValue: function() {
                  return this._ranges[0].start;
                },
                getMaximumValue: function() {
                  var length = this._ranges.length;
                  return this._ranges[length - 1].end;
                },
                exclude: function(start, end) {
                  if (!isNumber(end)) {
                    end = start;
                  }
                  forEachArray(
                    this._ranges,
                    function(range) {
                      var rangeEnd;
                      if (range.isOverlapped(start, end)) {
                        rangeEnd = range.end;
                        range.exclude(start, end);
                        if (end + 1 <= rangeEnd) {
                          this.add(end + 1, rangeEnd);
                        }
                      }
                    },
                    this
                  );
                  this._ranges = util.filter(this._ranges, function(range) {
                    return !range.isEmpty();
                  });
                },
                findOverlappedRange: function(start, end) {
                  var i = 0;
                  var len = this._ranges.length;
                  var range;
                  for (; i < len; i += 1) {
                    range = this._ranges[i];
                    if (range.isOverlapped(start, end)) {
                      return [range.start, range.end];
                    }
                  }
                  return null;
                }
              }
            );
            module3.exports = RangeModel;
          },
          function(module3, exports3, __webpack_require__) {
            var defineClass = __webpack_require__(0);
            var isNumber = __webpack_require__(15);
            var Range = defineClass(
              {
                init: function(start, end) {
                  this.setRange(start, end);
                },
                setRange: function(start, end) {
                  if (!isNumber(end)) {
                    end = start;
                  }
                  this.start = Math.min(start, end);
                  this.end = Math.max(start, end);
                },
                merge: function(start, end) {
                  if (!isNumber(start) || !isNumber(end) || !this.isOverlapped(start, end)) {
                    return;
                  }
                  this.start = Math.min(start, this.start);
                  this.end = Math.max(end, this.end);
                },
                isEmpty: function() {
                  return !isNumber(this.start) || !isNumber(this.end);
                },
                setEmpty: function() {
                  this.start = this.end = null;
                },
                contains: function(start, end) {
                  if (!isNumber(end)) {
                    end = start;
                  }
                  return this.start <= start && end <= this.end;
                },
                isOverlapped: function(start, end) {
                  if (!isNumber(end)) {
                    end = start;
                  }
                  return this.start <= end && this.end >= start;
                },
                exclude: function(start, end) {
                  if (start <= this.start && end >= this.end) {
                    this.setEmpty();
                  } else if (this.contains(start)) {
                    this.setRange(this.start, start - 1);
                  } else if (this.contains(end)) {
                    this.setRange(end + 1, this.end);
                  }
                }
              }
            );
            module3.exports = Range;
          },
          function(module3, exports3, __webpack_require__) {
            var template = __webpack_require__(11);
            module3.exports = function(context) {
              var source = '<div class="tui-datepicker">  {{if timePicker}}    {{if isTab}}      <div class="tui-datepicker-selector">        <button type="button" class="tui-datepicker-selector-button tui-is-checked" aria-label="selected">          <span class="tui-ico-date"></span>{{localeText["date"]}}        </button>        <button type="button" class="tui-datepicker-selector-button">          <span class="tui-ico-time"></span>{{localeText["time"]}}        </button>      </div>      <div class="tui-datepicker-body">        <div class="tui-calendar-container"></div>        <div class="tui-timepicker-container"></div>      </div>    {{else}}      <div class="tui-datepicker-body">        <div class="tui-calendar-container"></div>      </div>      <div class="tui-datepicker-footer">        <div class="tui-timepicker-container"></div>      </div>    {{/if}}  {{else}}    <div class="tui-datepicker-body">      <div class="tui-calendar-container"></div>    </div>  {{/if}}</div>';
              return template(source, context);
            };
          },
          function(module3, exports3, __webpack_require__) {
            var defineClass = __webpack_require__(0);
            var CustomEvents = __webpack_require__(8);
            var on = __webpack_require__(31);
            var off = __webpack_require__(33);
            var DateTimeFormatter = __webpack_require__(30);
            var mouseTouchEvent = __webpack_require__(19);
            var util = __webpack_require__(4);
            var DEFAULT_FORMAT = "yyyy-MM-dd";
            var DatePickerInput = defineClass(
              {
                init: function(inputElement, option) {
                  option.format = option.format || DEFAULT_FORMAT;
                  this._input = util.getElement(inputElement);
                  this._id = option.id;
                  this._titles = option.localeText.titles;
                  this._formatter = new DateTimeFormatter(option.format, this._titles);
                  this._setEvents();
                },
                changeLocaleTitles: function(titles) {
                  this._titles = titles;
                },
                _setEvents: function() {
                  if (this._input) {
                    on(this._input, "change", this._onChangeHandler, this);
                    mouseTouchEvent.on(this._input, "click", this._onClickHandler, this);
                  }
                },
                _removeEvents: function() {
                  this.off();
                  if (this._input) {
                    off(this._input, "change", this._onChangeHandler);
                    mouseTouchEvent.off(this._input, "click", this._onClickHandler);
                  }
                },
                _onChangeHandler: function() {
                  this.fire("change");
                },
                _onClickHandler: function() {
                  this.fire("click");
                },
                is: function(el) {
                  return this._input === el;
                },
                enable: function() {
                  if (this._input) {
                    this._input.removeAttribute("disabled");
                  }
                },
                disable: function() {
                  if (this._input) {
                    this._input.setAttribute("disabled", true);
                  }
                },
                getFormat: function() {
                  return this._formatter.getRawString();
                },
                setFormat: function(format) {
                  if (!format) {
                    return;
                  }
                  this._formatter = new DateTimeFormatter(format, this._titles);
                },
                clearText: function() {
                  if (this._input) {
                    this._input.value = "";
                  }
                },
                setDate: function(date) {
                  if (this._input) {
                    this._input.value = this._formatter.format(date);
                  }
                },
                getDate: function() {
                  var value = "";
                  if (this._input) {
                    value = this._input.value;
                  }
                  return this._formatter.parse(value);
                },
                destroy: function() {
                  this._removeEvents();
                  this._input = this._id = this._formatter = null;
                }
              }
            );
            CustomEvents.mixin(DatePickerInput);
            module3.exports = DatePickerInput;
          },
          function(module3, exports3, __webpack_require__) {
            var forEachArray = __webpack_require__(2);
            var defineClass = __webpack_require__(0);
            var CustomEvents = __webpack_require__(8);
            var addClass = __webpack_require__(16);
            var getData = __webpack_require__(26);
            var removeClass = __webpack_require__(18);
            var extend = __webpack_require__(7);
            var DatePicker = __webpack_require__(21);
            var dateUtil = __webpack_require__(5);
            var constants = __webpack_require__(1);
            var util = __webpack_require__(4);
            var CLASS_NAME_RANGE_PICKER = "tui-rangepicker";
            var CLASS_NAME_SELECTED = constants.CLASS_NAME_SELECTED;
            var CLASS_NAME_SELECTED_RANGE = "tui-is-selected-range";
            var DateRangePicker = defineClass(
              {
                init: function(options) {
                  var startpickerOpt, endpickerOpt;
                  options = options || {};
                  startpickerOpt = options.startpicker;
                  endpickerOpt = options.endpicker;
                  if (!startpickerOpt) {
                    throw new Error('The "startpicker" option is required.');
                  }
                  if (!endpickerOpt) {
                    throw new Error('The "endpicker" option is required.');
                  }
                  this._startpicker = null;
                  this._endpicker = null;
                  this._isRangeSet = false;
                  this._preEndPickerDate = new Date().getDate();
                  this._initializePickers(options);
                  this._syncRangesToEndpicker();
                },
                _initializePickers: function(options) {
                  var startpickerContainer = util.getElement(options.startpicker.container);
                  var endpickerContainer = util.getElement(options.endpicker.container);
                  var startInput = util.getElement(options.startpicker.input);
                  var endInput = util.getElement(options.endpicker.input);
                  var startpickerOpt = extend({}, options, {
                    input: {
                      element: startInput,
                      format: options.format
                    },
                    date: options.startpicker.date,
                    weekStartDay: options.startpicker.weekStartDay
                  });
                  var endpickerOpt = extend({}, options, {
                    input: {
                      element: endInput,
                      format: options.format
                    },
                    date: options.endpicker.date,
                    weekStartDay: options.endpicker.weekStartDay
                  });
                  this._startpicker = new DatePicker(startpickerContainer, startpickerOpt);
                  this._startpicker.addCssClass(CLASS_NAME_RANGE_PICKER);
                  this._startpicker.on("change", this._onChangeStartpicker, this);
                  this._startpicker.on("draw", this._onDrawPicker, this);
                  this._endpicker = new DatePicker(endpickerContainer, endpickerOpt);
                  this._endpicker.addCssClass(CLASS_NAME_RANGE_PICKER);
                  this._endpicker.on("change", this._onChangeEndpicker, this);
                  this._endpicker.on("draw", this._onDrawPicker, this);
                },
                _onDrawPicker: function(eventData) {
                  var calendarType = eventData.type;
                  var startDate = this._startpicker.getDate();
                  var endDate = this._endpicker.getDate();
                  if (!startDate) {
                    return;
                  }
                  if (!endDate) {
                    endDate = new Date(NaN);
                  }
                  forEachArray(
                    eventData.dateElements,
                    function(el) {
                      var elDate = new Date(Number(getData(el, "timestamp")));
                      var isInRange = dateUtil.inRange(startDate, endDate, elDate, calendarType);
                      var isSelected = dateUtil.isSame(startDate, elDate, calendarType) || dateUtil.isSame(endDate, elDate, calendarType);
                      this._setRangeClass(el, isInRange);
                      this._setSelectedClass(el, isSelected);
                    },
                    this
                  );
                },
                _setRangeClass: function(el, isInRange) {
                  if (isInRange) {
                    addClass(el, CLASS_NAME_SELECTED_RANGE);
                  } else {
                    removeClass(el, CLASS_NAME_SELECTED_RANGE);
                  }
                },
                _setSelectedClass: function(el, isSelected) {
                  if (isSelected) {
                    addClass(el, CLASS_NAME_SELECTED);
                  } else {
                    removeClass(el, CLASS_NAME_SELECTED);
                  }
                },
                _syncRangesToEndpicker: function() {
                  var startDate = this._startpicker.getDate();
                  var overlappedRange;
                  if (startDate) {
                    overlappedRange = this._startpicker.findOverlappedRange(
                      dateUtil.cloneWithStartOf(startDate).getTime(),
                      dateUtil.cloneWithEndOf(startDate).getTime()
                    );
                    this._endpicker.enable();
                    this._endpicker.setRanges([[startDate.getTime(), overlappedRange[1].getTime()]]);
                    this._setTimeRangeOnEndPicker();
                  } else {
                    this._endpicker.setNull();
                    this._endpicker.disable();
                  }
                },
                _onChangeStartpicker: function() {
                  this._syncRangesToEndpicker();
                  this.fire("change:start");
                },
                _onChangeEndpicker: function() {
                  var date;
                  var endPickerDate = this._endpicker.getDate();
                  if (endPickerDate) {
                    date = endPickerDate.getDate();
                    if (this._preEndPickerDate !== date) {
                      this._setTimeRangeOnEndPicker();
                    }
                    this._preEndPickerDate = date;
                  } else {
                    this._preEndPickerDate = null;
                  }
                  this.fire("change:end");
                },
                _isStartAndEndDateSame: function() {
                  return !!this._endpicker.getDate() && !!this._startpicker.getDate() && dateUtil.compare(
                    this._endpicker.getDate(),
                    this._startpicker.getDate(),
                    constants.TYPE_DATE
                  ) === 0;
                },
                _setTimeRangeOnEndPicker: function() {
                  var pickerDate, timeRange, timeRangeToSet;
                  var endTimePicker = this._endpicker._timePicker;
                  if (!endTimePicker) {
                    return;
                  }
                  pickerDate = this._endpicker.getDate() || this._startpicker.getDate();
                  timeRange = this._getTimeRangeFromStartPicker();
                  timeRangeToSet = pickerDate && timeRange[pickerDate.getDate()];
                  if (this._isStartAndEndDateSame() && timeRangeToSet) {
                    endTimePicker.setRange(timeRangeToSet);
                    this._isRangeSet = true;
                  } else if (this._isRangeSet) {
                    endTimePicker.setRange({ hour: 0, minute: 0 });
                    endTimePicker.resetMinuteRange();
                    this._isRangeSet = false;
                  }
                },
                _getTimeRangeFromStartPicker: function() {
                  var startDate = this._startpicker.getDate();
                  var timeRange = {};
                  timeRange[startDate.getDate()] = {
                    hour: startDate.getHours(),
                    minute: startDate.getMinutes()
                  };
                  return timeRange;
                },
                getStartpicker: function() {
                  return this._startpicker;
                },
                getEndpicker: function() {
                  return this._endpicker;
                },
                setStartDate: function(date) {
                  this._startpicker.setDate(date);
                },
                getStartDate: function() {
                  return this._startpicker.getDate();
                },
                getEndDate: function() {
                  return this._endpicker.getDate();
                },
                setEndDate: function(date) {
                  this._endpicker.setDate(date);
                },
                setRanges: function(ranges) {
                  this._startpicker.setRanges(ranges);
                  this._syncRangesToEndpicker();
                },
                addRange: function(start, end) {
                  this._startpicker.addRange(start, end);
                  this._syncRangesToEndpicker();
                },
                removeRange: function(start, end, type) {
                  this._startpicker.removeRange(start, end, type);
                  this._syncRangesToEndpicker();
                },
                changeLanguage: function(language) {
                  this._startpicker.changeLanguage(language);
                  this._endpicker.changeLanguage(language);
                },
                destroy: function() {
                  this.off();
                  this._startpicker.destroy();
                  this._endpicker.destroy();
                  this._startpicker = this._endpicker = null;
                }
              }
            );
            CustomEvents.mixin(DateRangePicker);
            module3.exports = DateRangePicker;
          },
          function(module3, exports3, __webpack_require__) {
          }
        ]);
      });
    })(tuiDatePicker);
    return tuiDatePicker.exports;
  }
  /*!
   * TOAST UI Calendar 2nd Edition
   * @version 2.1.3 | Fri Aug 16 2024
   * @author NHN Cloud FE Development Lab <dl_javascript@nhn.com>
   * @license MIT
   */
  (function(module2, exports2) {
    (function webpackUniversalModuleDefinition(root, factory) {
      module2.exports = factory(requireTuiDatePicker());
    })(commonjsGlobal, function(__WEBPACK_EXTERNAL_MODULE__411__) {
      return function() {
        var __webpack_modules__ = {
          1651: function(module3) {
            /*! @license DOMPurify 2.5.6 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/2.5.6/LICENSE */
            (function(global2, factory) {
              module3.exports = factory();
            })(this, function() {
              function _typeof(obj) {
                "@babel/helpers - typeof";
                return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
                  return typeof obj2;
                } : function(obj2) {
                  return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                }, _typeof(obj);
              }
              function _setPrototypeOf(o, p) {
                _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf2(o2, p2) {
                  o2.__proto__ = p2;
                  return o2;
                };
                return _setPrototypeOf(o, p);
              }
              function _isNativeReflectConstruct() {
                if (typeof Reflect === "undefined" || !Reflect.construct)
                  return false;
                if (Reflect.construct.sham)
                  return false;
                if (typeof Proxy === "function")
                  return true;
                try {
                  Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  }));
                  return true;
                } catch (e) {
                  return false;
                }
              }
              function _construct(Parent, args, Class) {
                if (_isNativeReflectConstruct()) {
                  _construct = Reflect.construct;
                } else {
                  _construct = function _construct2(Parent2, args2, Class2) {
                    var a = [null];
                    a.push.apply(a, args2);
                    var Constructor = Function.bind.apply(Parent2, a);
                    var instance = new Constructor();
                    if (Class2)
                      _setPrototypeOf(instance, Class2.prototype);
                    return instance;
                  };
                }
                return _construct.apply(null, arguments);
              }
              function _toConsumableArray(arr) {
                return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
              }
              function _arrayWithoutHoles(arr) {
                if (Array.isArray(arr))
                  return _arrayLikeToArray(arr);
              }
              function _iterableToArray(iter) {
                if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
                  return Array.from(iter);
              }
              function _unsupportedIterableToArray(o, minLen) {
                if (!o)
                  return;
                if (typeof o === "string")
                  return _arrayLikeToArray(o, minLen);
                var n = Object.prototype.toString.call(o).slice(8, -1);
                if (n === "Object" && o.constructor)
                  n = o.constructor.name;
                if (n === "Map" || n === "Set")
                  return Array.from(o);
                if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                  return _arrayLikeToArray(o, minLen);
              }
              function _arrayLikeToArray(arr, len) {
                if (len == null || len > arr.length)
                  len = arr.length;
                for (var i = 0, arr2 = new Array(len); i < len; i++)
                  arr2[i] = arr[i];
                return arr2;
              }
              function _nonIterableSpread() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }
              var hasOwnProperty = Object.hasOwnProperty, setPrototypeOf = Object.setPrototypeOf, isFrozen = Object.isFrozen, getPrototypeOf = Object.getPrototypeOf, getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
              var freeze = Object.freeze, seal = Object.seal, create = Object.create;
              var _ref = typeof Reflect !== "undefined" && Reflect, apply = _ref.apply, construct = _ref.construct;
              if (!apply) {
                apply = function apply2(fun, thisValue, args) {
                  return fun.apply(thisValue, args);
                };
              }
              if (!freeze) {
                freeze = function freeze2(x) {
                  return x;
                };
              }
              if (!seal) {
                seal = function seal2(x) {
                  return x;
                };
              }
              if (!construct) {
                construct = function construct2(Func, args) {
                  return _construct(Func, _toConsumableArray(args));
                };
              }
              var arrayForEach = unapply(Array.prototype.forEach);
              var arrayPop = unapply(Array.prototype.pop);
              var arrayPush = unapply(Array.prototype.push);
              var stringToLowerCase = unapply(String.prototype.toLowerCase);
              var stringToString = unapply(String.prototype.toString);
              var stringMatch = unapply(String.prototype.match);
              var stringReplace = unapply(String.prototype.replace);
              var stringIndexOf = unapply(String.prototype.indexOf);
              var stringTrim = unapply(String.prototype.trim);
              var regExpTest = unapply(RegExp.prototype.test);
              var typeErrorCreate = unconstruct(TypeError);
              function unapply(func) {
                return function(thisArg) {
                  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                    args[_key - 1] = arguments[_key];
                  }
                  return apply(func, thisArg, args);
                };
              }
              function unconstruct(func) {
                return function() {
                  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                    args[_key2] = arguments[_key2];
                  }
                  return construct(func, args);
                };
              }
              function addToSet(set, array, transformCaseFunc) {
                var _transformCaseFunc;
                transformCaseFunc = (_transformCaseFunc = transformCaseFunc) !== null && _transformCaseFunc !== void 0 ? _transformCaseFunc : stringToLowerCase;
                if (setPrototypeOf) {
                  setPrototypeOf(set, null);
                }
                var l = array.length;
                while (l--) {
                  var element = array[l];
                  if (typeof element === "string") {
                    var lcElement = transformCaseFunc(element);
                    if (lcElement !== element) {
                      if (!isFrozen(array)) {
                        array[l] = lcElement;
                      }
                      element = lcElement;
                    }
                  }
                  set[element] = true;
                }
                return set;
              }
              function clone(object) {
                var newObject = create(null);
                var property;
                for (property in object) {
                  if (apply(hasOwnProperty, object, [property]) === true) {
                    newObject[property] = object[property];
                  }
                }
                return newObject;
              }
              function lookupGetter(object, prop) {
                while (object !== null) {
                  var desc = getOwnPropertyDescriptor(object, prop);
                  if (desc) {
                    if (desc.get) {
                      return unapply(desc.get);
                    }
                    if (typeof desc.value === "function") {
                      return unapply(desc.value);
                    }
                  }
                  object = getPrototypeOf(object);
                }
                function fallbackValue(element) {
                  console.warn("fallback value for", element);
                  return null;
                }
                return fallbackValue;
              }
              var html$1 = freeze(["a", "abbr", "acronym", "address", "area", "article", "aside", "audio", "b", "bdi", "bdo", "big", "blink", "blockquote", "body", "br", "button", "canvas", "caption", "center", "cite", "code", "col", "colgroup", "content", "data", "datalist", "dd", "decorator", "del", "details", "dfn", "dialog", "dir", "div", "dl", "dt", "element", "em", "fieldset", "figcaption", "figure", "font", "footer", "form", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "i", "img", "input", "ins", "kbd", "label", "legend", "li", "main", "map", "mark", "marquee", "menu", "menuitem", "meter", "nav", "nobr", "ol", "optgroup", "option", "output", "p", "picture", "pre", "progress", "q", "rp", "rt", "ruby", "s", "samp", "section", "select", "shadow", "small", "source", "spacer", "span", "strike", "strong", "style", "sub", "summary", "sup", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "time", "tr", "track", "tt", "u", "ul", "var", "video", "wbr"]);
              var svg$1 = freeze(["svg", "a", "altglyph", "altglyphdef", "altglyphitem", "animatecolor", "animatemotion", "animatetransform", "circle", "clippath", "defs", "desc", "ellipse", "filter", "font", "g", "glyph", "glyphref", "hkern", "image", "line", "lineargradient", "marker", "mask", "metadata", "mpath", "path", "pattern", "polygon", "polyline", "radialgradient", "rect", "stop", "style", "switch", "symbol", "text", "textpath", "title", "tref", "tspan", "view", "vkern"]);
              var svgFilters = freeze(["feBlend", "feColorMatrix", "feComponentTransfer", "feComposite", "feConvolveMatrix", "feDiffuseLighting", "feDisplacementMap", "feDistantLight", "feFlood", "feFuncA", "feFuncB", "feFuncG", "feFuncR", "feGaussianBlur", "feImage", "feMerge", "feMergeNode", "feMorphology", "feOffset", "fePointLight", "feSpecularLighting", "feSpotLight", "feTile", "feTurbulence"]);
              var svgDisallowed = freeze(["animate", "color-profile", "cursor", "discard", "fedropshadow", "font-face", "font-face-format", "font-face-name", "font-face-src", "font-face-uri", "foreignobject", "hatch", "hatchpath", "mesh", "meshgradient", "meshpatch", "meshrow", "missing-glyph", "script", "set", "solidcolor", "unknown", "use"]);
              var mathMl$1 = freeze(["math", "menclose", "merror", "mfenced", "mfrac", "mglyph", "mi", "mlabeledtr", "mmultiscripts", "mn", "mo", "mover", "mpadded", "mphantom", "mroot", "mrow", "ms", "mspace", "msqrt", "mstyle", "msub", "msup", "msubsup", "mtable", "mtd", "mtext", "mtr", "munder", "munderover"]);
              var mathMlDisallowed = freeze(["maction", "maligngroup", "malignmark", "mlongdiv", "mscarries", "mscarry", "msgroup", "mstack", "msline", "msrow", "semantics", "annotation", "annotation-xml", "mprescripts", "none"]);
              var text = freeze(["#text"]);
              var html = freeze(["accept", "action", "align", "alt", "autocapitalize", "autocomplete", "autopictureinpicture", "autoplay", "background", "bgcolor", "border", "capture", "cellpadding", "cellspacing", "checked", "cite", "class", "clear", "color", "cols", "colspan", "controls", "controlslist", "coords", "crossorigin", "datetime", "decoding", "default", "dir", "disabled", "disablepictureinpicture", "disableremoteplayback", "download", "draggable", "enctype", "enterkeyhint", "face", "for", "headers", "height", "hidden", "high", "href", "hreflang", "id", "inputmode", "integrity", "ismap", "kind", "label", "lang", "list", "loading", "loop", "low", "max", "maxlength", "media", "method", "min", "minlength", "multiple", "muted", "name", "nonce", "noshade", "novalidate", "nowrap", "open", "optimum", "pattern", "placeholder", "playsinline", "poster", "preload", "pubdate", "radiogroup", "readonly", "rel", "required", "rev", "reversed", "role", "rows", "rowspan", "spellcheck", "scope", "selected", "shape", "size", "sizes", "span", "srclang", "start", "src", "srcset", "step", "style", "summary", "tabindex", "title", "translate", "type", "usemap", "valign", "value", "width", "xmlns", "slot"]);
              var svg = freeze(["accent-height", "accumulate", "additive", "alignment-baseline", "ascent", "attributename", "attributetype", "azimuth", "basefrequency", "baseline-shift", "begin", "bias", "by", "class", "clip", "clippathunits", "clip-path", "clip-rule", "color", "color-interpolation", "color-interpolation-filters", "color-profile", "color-rendering", "cx", "cy", "d", "dx", "dy", "diffuseconstant", "direction", "display", "divisor", "dur", "edgemode", "elevation", "end", "fill", "fill-opacity", "fill-rule", "filter", "filterunits", "flood-color", "flood-opacity", "font-family", "font-size", "font-size-adjust", "font-stretch", "font-style", "font-variant", "font-weight", "fx", "fy", "g1", "g2", "glyph-name", "glyphref", "gradientunits", "gradienttransform", "height", "href", "id", "image-rendering", "in", "in2", "k", "k1", "k2", "k3", "k4", "kerning", "keypoints", "keysplines", "keytimes", "lang", "lengthadjust", "letter-spacing", "kernelmatrix", "kernelunitlength", "lighting-color", "local", "marker-end", "marker-mid", "marker-start", "markerheight", "markerunits", "markerwidth", "maskcontentunits", "maskunits", "max", "mask", "media", "method", "mode", "min", "name", "numoctaves", "offset", "operator", "opacity", "order", "orient", "orientation", "origin", "overflow", "paint-order", "path", "pathlength", "patterncontentunits", "patterntransform", "patternunits", "points", "preservealpha", "preserveaspectratio", "primitiveunits", "r", "rx", "ry", "radius", "refx", "refy", "repeatcount", "repeatdur", "restart", "result", "rotate", "scale", "seed", "shape-rendering", "specularconstant", "specularexponent", "spreadmethod", "startoffset", "stddeviation", "stitchtiles", "stop-color", "stop-opacity", "stroke-dasharray", "stroke-dashoffset", "stroke-linecap", "stroke-linejoin", "stroke-miterlimit", "stroke-opacity", "stroke", "stroke-width", "style", "surfacescale", "systemlanguage", "tabindex", "targetx", "targety", "transform", "transform-origin", "text-anchor", "text-decoration", "text-rendering", "textlength", "type", "u1", "u2", "unicode", "values", "viewbox", "visibility", "version", "vert-adv-y", "vert-origin-x", "vert-origin-y", "width", "word-spacing", "wrap", "writing-mode", "xchannelselector", "ychannelselector", "x", "x1", "x2", "xmlns", "y", "y1", "y2", "z", "zoomandpan"]);
              var mathMl = freeze(["accent", "accentunder", "align", "bevelled", "close", "columnsalign", "columnlines", "columnspan", "denomalign", "depth", "dir", "display", "displaystyle", "encoding", "fence", "frame", "height", "href", "id", "largeop", "length", "linethickness", "lspace", "lquote", "mathbackground", "mathcolor", "mathsize", "mathvariant", "maxsize", "minsize", "movablelimits", "notation", "numalign", "open", "rowalign", "rowlines", "rowspacing", "rowspan", "rspace", "rquote", "scriptlevel", "scriptminsize", "scriptsizemultiplier", "selection", "separator", "separators", "stretchy", "subscriptshift", "supscriptshift", "symmetric", "voffset", "width", "xmlns"]);
              var xml = freeze(["xlink:href", "xml:id", "xlink:title", "xml:space", "xmlns:xlink"]);
              var MUSTACHE_EXPR = seal(/\{\{[\w\W]*|[\w\W]*\}\}/gm);
              var ERB_EXPR = seal(/<%[\w\W]*|[\w\W]*%>/gm);
              var TMPLIT_EXPR = seal(/\${[\w\W]*}/gm);
              var DATA_ATTR = seal(/^data-[\-\w.\u00B7-\uFFFF]/);
              var ARIA_ATTR = seal(/^aria-[\-\w]+$/);
              var IS_ALLOWED_URI = seal(
                /^(?:(?:(?:f|ht)tps?|mailto|tel|callto|cid|xmpp):|[^a-z]|[a-z+.\-]+(?:[^a-z+.\-:]|$))/i
              );
              var IS_SCRIPT_OR_DATA = seal(/^(?:\w+script|data):/i);
              var ATTR_WHITESPACE = seal(
                /[\u0000-\u0020\u00A0\u1680\u180E\u2000-\u2029\u205F\u3000]/g
              );
              var DOCTYPE_NAME = seal(/^html$/i);
              var CUSTOM_ELEMENT = seal(/^[a-z][.\w]*(-[.\w]+)+$/i);
              var getGlobal = function getGlobal2() {
                return typeof window === "undefined" ? null : window;
              };
              var _createTrustedTypesPolicy = function _createTrustedTypesPolicy2(trustedTypes, document2) {
                if (_typeof(trustedTypes) !== "object" || typeof trustedTypes.createPolicy !== "function") {
                  return null;
                }
                var suffix = null;
                var ATTR_NAME = "data-tt-policy-suffix";
                if (document2.currentScript && document2.currentScript.hasAttribute(ATTR_NAME)) {
                  suffix = document2.currentScript.getAttribute(ATTR_NAME);
                }
                var policyName = "dompurify" + (suffix ? "#" + suffix : "");
                try {
                  return trustedTypes.createPolicy(policyName, {
                    createHTML: function createHTML(html2) {
                      return html2;
                    },
                    createScriptURL: function createScriptURL(scriptUrl) {
                      return scriptUrl;
                    }
                  });
                } catch (_) {
                  console.warn("TrustedTypes policy " + policyName + " could not be created.");
                  return null;
                }
              };
              function createDOMPurify() {
                var window2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : getGlobal();
                var DOMPurify = function DOMPurify2(root) {
                  return createDOMPurify(root);
                };
                DOMPurify.version = "2.5.6";
                DOMPurify.removed = [];
                if (!window2 || !window2.document || window2.document.nodeType !== 9) {
                  DOMPurify.isSupported = false;
                  return DOMPurify;
                }
                var originalDocument = window2.document;
                var document2 = window2.document;
                var DocumentFragment = window2.DocumentFragment, HTMLTemplateElement = window2.HTMLTemplateElement, Node = window2.Node, Element2 = window2.Element, NodeFilter = window2.NodeFilter, _window$NamedNodeMap = window2.NamedNodeMap, NamedNodeMap = _window$NamedNodeMap === void 0 ? window2.NamedNodeMap || window2.MozNamedAttrMap : _window$NamedNodeMap, HTMLFormElement = window2.HTMLFormElement, DOMParser = window2.DOMParser, trustedTypes = window2.trustedTypes;
                var ElementPrototype = Element2.prototype;
                var cloneNode = lookupGetter(ElementPrototype, "cloneNode");
                var getNextSibling = lookupGetter(ElementPrototype, "nextSibling");
                var getChildNodes = lookupGetter(ElementPrototype, "childNodes");
                var getParentNode = lookupGetter(ElementPrototype, "parentNode");
                if (typeof HTMLTemplateElement === "function") {
                  var template = document2.createElement("template");
                  if (template.content && template.content.ownerDocument) {
                    document2 = template.content.ownerDocument;
                  }
                }
                var trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);
                var emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML("") : "";
                var _document = document2, implementation = _document.implementation, createNodeIterator = _document.createNodeIterator, createDocumentFragment = _document.createDocumentFragment, getElementsByTagName = _document.getElementsByTagName;
                var importNode = originalDocument.importNode;
                var documentMode = {};
                try {
                  documentMode = clone(document2).documentMode ? document2.documentMode : {};
                } catch (_) {
                }
                var hooks = {};
                DOMPurify.isSupported = typeof getParentNode === "function" && implementation && implementation.createHTMLDocument !== void 0 && documentMode !== 9;
                var MUSTACHE_EXPR$1 = MUSTACHE_EXPR, ERB_EXPR$1 = ERB_EXPR, TMPLIT_EXPR$1 = TMPLIT_EXPR, DATA_ATTR$1 = DATA_ATTR, ARIA_ATTR$1 = ARIA_ATTR, IS_SCRIPT_OR_DATA$1 = IS_SCRIPT_OR_DATA, ATTR_WHITESPACE$1 = ATTR_WHITESPACE, CUSTOM_ELEMENT$1 = CUSTOM_ELEMENT;
                var IS_ALLOWED_URI$1 = IS_ALLOWED_URI;
                var ALLOWED_TAGS = null;
                var DEFAULT_ALLOWED_TAGS = addToSet({}, [].concat(_toConsumableArray(html$1), _toConsumableArray(svg$1), _toConsumableArray(svgFilters), _toConsumableArray(mathMl$1), _toConsumableArray(text)));
                var ALLOWED_ATTR = null;
                var DEFAULT_ALLOWED_ATTR = addToSet({}, [].concat(_toConsumableArray(html), _toConsumableArray(svg), _toConsumableArray(mathMl), _toConsumableArray(xml)));
                var CUSTOM_ELEMENT_HANDLING = Object.seal(Object.create(null, {
                  tagNameCheck: {
                    writable: true,
                    configurable: false,
                    enumerable: true,
                    value: null
                  },
                  attributeNameCheck: {
                    writable: true,
                    configurable: false,
                    enumerable: true,
                    value: null
                  },
                  allowCustomizedBuiltInElements: {
                    writable: true,
                    configurable: false,
                    enumerable: true,
                    value: false
                  }
                }));
                var FORBID_TAGS = null;
                var FORBID_ATTR = null;
                var ALLOW_ARIA_ATTR = true;
                var ALLOW_DATA_ATTR = true;
                var ALLOW_UNKNOWN_PROTOCOLS = false;
                var ALLOW_SELF_CLOSE_IN_ATTR = true;
                var SAFE_FOR_TEMPLATES = false;
                var SAFE_FOR_XML = true;
                var WHOLE_DOCUMENT = false;
                var SET_CONFIG = false;
                var FORCE_BODY = false;
                var RETURN_DOM = false;
                var RETURN_DOM_FRAGMENT = false;
                var RETURN_TRUSTED_TYPE = false;
                var SANITIZE_DOM = true;
                var SANITIZE_NAMED_PROPS = false;
                var SANITIZE_NAMED_PROPS_PREFIX = "user-content-";
                var KEEP_CONTENT = true;
                var IN_PLACE = false;
                var USE_PROFILES = {};
                var FORBID_CONTENTS = null;
                var DEFAULT_FORBID_CONTENTS = addToSet({}, ["annotation-xml", "audio", "colgroup", "desc", "foreignobject", "head", "iframe", "math", "mi", "mn", "mo", "ms", "mtext", "noembed", "noframes", "noscript", "plaintext", "script", "style", "svg", "template", "thead", "title", "video", "xmp"]);
                var DATA_URI_TAGS = null;
                var DEFAULT_DATA_URI_TAGS = addToSet({}, ["audio", "video", "img", "source", "image", "track"]);
                var URI_SAFE_ATTRIBUTES = null;
                var DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ["alt", "class", "for", "id", "label", "name", "pattern", "placeholder", "role", "summary", "title", "value", "style", "xmlns"]);
                var MATHML_NAMESPACE = "http://www.w3.org/1998/Math/MathML";
                var SVG_NAMESPACE = "http://www.w3.org/2000/svg";
                var HTML_NAMESPACE = "http://www.w3.org/1999/xhtml";
                var NAMESPACE = HTML_NAMESPACE;
                var IS_EMPTY_INPUT = false;
                var ALLOWED_NAMESPACES = null;
                var DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);
                var PARSER_MEDIA_TYPE;
                var SUPPORTED_PARSER_MEDIA_TYPES = ["application/xhtml+xml", "text/html"];
                var DEFAULT_PARSER_MEDIA_TYPE = "text/html";
                var transformCaseFunc;
                var CONFIG = null;
                var formElement = document2.createElement("form");
                var isRegexOrFunction = function isRegexOrFunction2(testValue) {
                  return testValue instanceof RegExp || testValue instanceof Function;
                };
                var _parseConfig = function _parseConfig2(cfg) {
                  if (CONFIG && CONFIG === cfg) {
                    return;
                  }
                  if (!cfg || _typeof(cfg) !== "object") {
                    cfg = {};
                  }
                  cfg = clone(cfg);
                  PARSER_MEDIA_TYPE = SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE;
                  transformCaseFunc = PARSER_MEDIA_TYPE === "application/xhtml+xml" ? stringToString : stringToLowerCase;
                  ALLOWED_TAGS = "ALLOWED_TAGS" in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;
                  ALLOWED_ATTR = "ALLOWED_ATTR" in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;
                  ALLOWED_NAMESPACES = "ALLOWED_NAMESPACES" in cfg ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;
                  URI_SAFE_ATTRIBUTES = "ADD_URI_SAFE_ATTR" in cfg ? addToSet(
                    clone(DEFAULT_URI_SAFE_ATTRIBUTES),
                    cfg.ADD_URI_SAFE_ATTR,
                    transformCaseFunc
                  ) : DEFAULT_URI_SAFE_ATTRIBUTES;
                  DATA_URI_TAGS = "ADD_DATA_URI_TAGS" in cfg ? addToSet(
                    clone(DEFAULT_DATA_URI_TAGS),
                    cfg.ADD_DATA_URI_TAGS,
                    transformCaseFunc
                  ) : DEFAULT_DATA_URI_TAGS;
                  FORBID_CONTENTS = "FORBID_CONTENTS" in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;
                  FORBID_TAGS = "FORBID_TAGS" in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};
                  FORBID_ATTR = "FORBID_ATTR" in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};
                  USE_PROFILES = "USE_PROFILES" in cfg ? cfg.USE_PROFILES : false;
                  ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false;
                  ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false;
                  ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false;
                  ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false;
                  SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false;
                  SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false;
                  WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false;
                  RETURN_DOM = cfg.RETURN_DOM || false;
                  RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false;
                  RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false;
                  FORCE_BODY = cfg.FORCE_BODY || false;
                  SANITIZE_DOM = cfg.SANITIZE_DOM !== false;
                  SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false;
                  KEEP_CONTENT = cfg.KEEP_CONTENT !== false;
                  IN_PLACE = cfg.IN_PLACE || false;
                  IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI$1;
                  NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;
                  CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};
                  if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {
                    CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;
                  }
                  if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {
                    CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;
                  }
                  if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === "boolean") {
                    CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;
                  }
                  if (SAFE_FOR_TEMPLATES) {
                    ALLOW_DATA_ATTR = false;
                  }
                  if (RETURN_DOM_FRAGMENT) {
                    RETURN_DOM = true;
                  }
                  if (USE_PROFILES) {
                    ALLOWED_TAGS = addToSet({}, _toConsumableArray(text));
                    ALLOWED_ATTR = [];
                    if (USE_PROFILES.html === true) {
                      addToSet(ALLOWED_TAGS, html$1);
                      addToSet(ALLOWED_ATTR, html);
                    }
                    if (USE_PROFILES.svg === true) {
                      addToSet(ALLOWED_TAGS, svg$1);
                      addToSet(ALLOWED_ATTR, svg);
                      addToSet(ALLOWED_ATTR, xml);
                    }
                    if (USE_PROFILES.svgFilters === true) {
                      addToSet(ALLOWED_TAGS, svgFilters);
                      addToSet(ALLOWED_ATTR, svg);
                      addToSet(ALLOWED_ATTR, xml);
                    }
                    if (USE_PROFILES.mathMl === true) {
                      addToSet(ALLOWED_TAGS, mathMl$1);
                      addToSet(ALLOWED_ATTR, mathMl);
                      addToSet(ALLOWED_ATTR, xml);
                    }
                  }
                  if (cfg.ADD_TAGS) {
                    if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {
                      ALLOWED_TAGS = clone(ALLOWED_TAGS);
                    }
                    addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);
                  }
                  if (cfg.ADD_ATTR) {
                    if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {
                      ALLOWED_ATTR = clone(ALLOWED_ATTR);
                    }
                    addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);
                  }
                  if (cfg.ADD_URI_SAFE_ATTR) {
                    addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);
                  }
                  if (cfg.FORBID_CONTENTS) {
                    if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {
                      FORBID_CONTENTS = clone(FORBID_CONTENTS);
                    }
                    addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);
                  }
                  if (KEEP_CONTENT) {
                    ALLOWED_TAGS["#text"] = true;
                  }
                  if (WHOLE_DOCUMENT) {
                    addToSet(ALLOWED_TAGS, ["html", "head", "body"]);
                  }
                  if (ALLOWED_TAGS.table) {
                    addToSet(ALLOWED_TAGS, ["tbody"]);
                    delete FORBID_TAGS.tbody;
                  }
                  if (freeze) {
                    freeze(cfg);
                  }
                  CONFIG = cfg;
                };
                var MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ["mi", "mo", "mn", "ms", "mtext"]);
                var HTML_INTEGRATION_POINTS = addToSet({}, ["foreignobject", "annotation-xml"]);
                var COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ["title", "style", "font", "a", "script"]);
                var ALL_SVG_TAGS = addToSet({}, svg$1);
                addToSet(ALL_SVG_TAGS, svgFilters);
                addToSet(ALL_SVG_TAGS, svgDisallowed);
                var ALL_MATHML_TAGS = addToSet({}, mathMl$1);
                addToSet(ALL_MATHML_TAGS, mathMlDisallowed);
                var _checkValidNamespace = function _checkValidNamespace2(element) {
                  var parent = getParentNode(element);
                  if (!parent || !parent.tagName) {
                    parent = {
                      namespaceURI: NAMESPACE,
                      tagName: "template"
                    };
                  }
                  var tagName = stringToLowerCase(element.tagName);
                  var parentTagName = stringToLowerCase(parent.tagName);
                  if (!ALLOWED_NAMESPACES[element.namespaceURI]) {
                    return false;
                  }
                  if (element.namespaceURI === SVG_NAMESPACE) {
                    if (parent.namespaceURI === HTML_NAMESPACE) {
                      return tagName === "svg";
                    }
                    if (parent.namespaceURI === MATHML_NAMESPACE) {
                      return tagName === "svg" && (parentTagName === "annotation-xml" || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);
                    }
                    return Boolean(ALL_SVG_TAGS[tagName]);
                  }
                  if (element.namespaceURI === MATHML_NAMESPACE) {
                    if (parent.namespaceURI === HTML_NAMESPACE) {
                      return tagName === "math";
                    }
                    if (parent.namespaceURI === SVG_NAMESPACE) {
                      return tagName === "math" && HTML_INTEGRATION_POINTS[parentTagName];
                    }
                    return Boolean(ALL_MATHML_TAGS[tagName]);
                  }
                  if (element.namespaceURI === HTML_NAMESPACE) {
                    if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {
                      return false;
                    }
                    if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {
                      return false;
                    }
                    return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);
                  }
                  if (PARSER_MEDIA_TYPE === "application/xhtml+xml" && ALLOWED_NAMESPACES[element.namespaceURI]) {
                    return true;
                  }
                  return false;
                };
                var _forceRemove = function _forceRemove2(node) {
                  arrayPush(DOMPurify.removed, {
                    element: node
                  });
                  try {
                    node.parentNode.removeChild(node);
                  } catch (_) {
                    try {
                      node.outerHTML = emptyHTML;
                    } catch (_2) {
                      node.remove();
                    }
                  }
                };
                var _removeAttribute = function _removeAttribute2(name, node) {
                  try {
                    arrayPush(DOMPurify.removed, {
                      attribute: node.getAttributeNode(name),
                      from: node
                    });
                  } catch (_) {
                    arrayPush(DOMPurify.removed, {
                      attribute: null,
                      from: node
                    });
                  }
                  node.removeAttribute(name);
                  if (name === "is" && !ALLOWED_ATTR[name]) {
                    if (RETURN_DOM || RETURN_DOM_FRAGMENT) {
                      try {
                        _forceRemove(node);
                      } catch (_) {
                      }
                    } else {
                      try {
                        node.setAttribute(name, "");
                      } catch (_) {
                      }
                    }
                  }
                };
                var _initDocument = function _initDocument2(dirty) {
                  var doc;
                  var leadingWhitespace;
                  if (FORCE_BODY) {
                    dirty = "<remove></remove>" + dirty;
                  } else {
                    var matches = stringMatch(dirty, /^[\r\n\t ]+/);
                    leadingWhitespace = matches && matches[0];
                  }
                  if (PARSER_MEDIA_TYPE === "application/xhtml+xml" && NAMESPACE === HTML_NAMESPACE) {
                    dirty = '<html xmlns="http://www.w3.org/1999/xhtml"><head></head><body>' + dirty + "</body></html>";
                  }
                  var dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;
                  if (NAMESPACE === HTML_NAMESPACE) {
                    try {
                      doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);
                    } catch (_) {
                    }
                  }
                  if (!doc || !doc.documentElement) {
                    doc = implementation.createDocument(NAMESPACE, "template", null);
                    try {
                      doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;
                    } catch (_) {
                    }
                  }
                  var body = doc.body || doc.documentElement;
                  if (dirty && leadingWhitespace) {
                    body.insertBefore(document2.createTextNode(leadingWhitespace), body.childNodes[0] || null);
                  }
                  if (NAMESPACE === HTML_NAMESPACE) {
                    return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? "html" : "body")[0];
                  }
                  return WHOLE_DOCUMENT ? doc.documentElement : body;
                };
                var _createIterator = function _createIterator2(root) {
                  return createNodeIterator.call(
                    root.ownerDocument || root,
                    root,
                    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION,
                    null,
                    false
                  );
                };
                var _isClobbered = function _isClobbered2(elm) {
                  return elm instanceof HTMLFormElement && (typeof elm.nodeName !== "string" || typeof elm.textContent !== "string" || typeof elm.removeChild !== "function" || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== "function" || typeof elm.setAttribute !== "function" || typeof elm.namespaceURI !== "string" || typeof elm.insertBefore !== "function" || typeof elm.hasChildNodes !== "function");
                };
                var _isNode = function _isNode2(object) {
                  return _typeof(Node) === "object" ? object instanceof Node : object && _typeof(object) === "object" && typeof object.nodeType === "number" && typeof object.nodeName === "string";
                };
                var _executeHook = function _executeHook2(entryPoint, currentNode, data) {
                  if (!hooks[entryPoint]) {
                    return;
                  }
                  arrayForEach(hooks[entryPoint], function(hook) {
                    hook.call(DOMPurify, currentNode, data, CONFIG);
                  });
                };
                var _sanitizeElements = function _sanitizeElements2(currentNode) {
                  var content;
                  _executeHook("beforeSanitizeElements", currentNode, null);
                  if (_isClobbered(currentNode)) {
                    _forceRemove(currentNode);
                    return true;
                  }
                  if (regExpTest(/[\u0080-\uFFFF]/, currentNode.nodeName)) {
                    _forceRemove(currentNode);
                    return true;
                  }
                  var tagName = transformCaseFunc(currentNode.nodeName);
                  _executeHook("uponSanitizeElement", currentNode, {
                    tagName,
                    allowedTags: ALLOWED_TAGS
                  });
                  if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\w]/g, currentNode.innerHTML) && regExpTest(/<[/\w]/g, currentNode.textContent)) {
                    _forceRemove(currentNode);
                    return true;
                  }
                  if (tagName === "select" && regExpTest(/<template/i, currentNode.innerHTML)) {
                    _forceRemove(currentNode);
                    return true;
                  }
                  if (currentNode.nodeType === 7) {
                    _forceRemove(currentNode);
                    return true;
                  }
                  if (SAFE_FOR_XML && currentNode.nodeType === 8 && regExpTest(/<[/\w]/g, currentNode.data)) {
                    _forceRemove(currentNode);
                    return true;
                  }
                  if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
                    if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {
                      if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName))
                        return false;
                      if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName))
                        return false;
                    }
                    if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {
                      var parentNode = getParentNode(currentNode) || currentNode.parentNode;
                      var childNodes = getChildNodes(currentNode) || currentNode.childNodes;
                      if (childNodes && parentNode) {
                        var childCount = childNodes.length;
                        for (var i = childCount - 1; i >= 0; --i) {
                          var childClone = cloneNode(childNodes[i], true);
                          childClone.__removalCount = (currentNode.__removalCount || 0) + 1;
                          parentNode.insertBefore(childClone, getNextSibling(currentNode));
                        }
                      }
                    }
                    _forceRemove(currentNode);
                    return true;
                  }
                  if (currentNode instanceof Element2 && !_checkValidNamespace(currentNode)) {
                    _forceRemove(currentNode);
                    return true;
                  }
                  if ((tagName === "noscript" || tagName === "noembed" || tagName === "noframes") && regExpTest(/<\/no(script|embed|frames)/i, currentNode.innerHTML)) {
                    _forceRemove(currentNode);
                    return true;
                  }
                  if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {
                    content = currentNode.textContent;
                    content = stringReplace(content, MUSTACHE_EXPR$1, " ");
                    content = stringReplace(content, ERB_EXPR$1, " ");
                    content = stringReplace(content, TMPLIT_EXPR$1, " ");
                    if (currentNode.textContent !== content) {
                      arrayPush(DOMPurify.removed, {
                        element: currentNode.cloneNode()
                      });
                      currentNode.textContent = content;
                    }
                  }
                  _executeHook("afterSanitizeElements", currentNode, null);
                  return false;
                };
                var _isValidAttribute = function _isValidAttribute2(lcTag, lcName, value) {
                  if (SANITIZE_DOM && (lcName === "id" || lcName === "name") && (value in document2 || value in formElement)) {
                    return false;
                  }
                  if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR$1, lcName))
                    ;
                  else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR$1, lcName))
                    ;
                  else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {
                    if (_basicCustomElementTest(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) || lcName === "is" && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value)))
                      ;
                    else {
                      return false;
                    }
                  } else if (URI_SAFE_ATTRIBUTES[lcName])
                    ;
                  else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE$1, "")))
                    ;
                  else if ((lcName === "src" || lcName === "xlink:href" || lcName === "href") && lcTag !== "script" && stringIndexOf(value, "data:") === 0 && DATA_URI_TAGS[lcTag])
                    ;
                  else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA$1, stringReplace(value, ATTR_WHITESPACE$1, "")))
                    ;
                  else if (value) {
                    return false;
                  } else
                    ;
                  return true;
                };
                var _basicCustomElementTest = function _basicCustomElementTest2(tagName) {
                  return tagName !== "annotation-xml" && stringMatch(tagName, CUSTOM_ELEMENT$1);
                };
                var _sanitizeAttributes = function _sanitizeAttributes2(currentNode) {
                  var attr;
                  var value;
                  var lcName;
                  var l;
                  _executeHook("beforeSanitizeAttributes", currentNode, null);
                  var attributes = currentNode.attributes;
                  if (!attributes) {
                    return;
                  }
                  var hookEvent = {
                    attrName: "",
                    attrValue: "",
                    keepAttr: true,
                    allowedAttributes: ALLOWED_ATTR
                  };
                  l = attributes.length;
                  while (l--) {
                    attr = attributes[l];
                    var _attr = attr, name = _attr.name, namespaceURI = _attr.namespaceURI;
                    value = name === "value" ? attr.value : stringTrim(attr.value);
                    lcName = transformCaseFunc(name);
                    hookEvent.attrName = lcName;
                    hookEvent.attrValue = value;
                    hookEvent.keepAttr = true;
                    hookEvent.forceKeepAttr = void 0;
                    _executeHook("uponSanitizeAttribute", currentNode, hookEvent);
                    value = hookEvent.attrValue;
                    if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\/(style|title)/i, value)) {
                      _removeAttribute(name, currentNode);
                      continue;
                    }
                    if (hookEvent.forceKeepAttr) {
                      continue;
                    }
                    _removeAttribute(name, currentNode);
                    if (!hookEvent.keepAttr) {
                      continue;
                    }
                    if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\/>/i, value)) {
                      _removeAttribute(name, currentNode);
                      continue;
                    }
                    if (SAFE_FOR_TEMPLATES) {
                      value = stringReplace(value, MUSTACHE_EXPR$1, " ");
                      value = stringReplace(value, ERB_EXPR$1, " ");
                      value = stringReplace(value, TMPLIT_EXPR$1, " ");
                    }
                    var lcTag = transformCaseFunc(currentNode.nodeName);
                    if (!_isValidAttribute(lcTag, lcName, value)) {
                      continue;
                    }
                    if (SANITIZE_NAMED_PROPS && (lcName === "id" || lcName === "name")) {
                      _removeAttribute(name, currentNode);
                      value = SANITIZE_NAMED_PROPS_PREFIX + value;
                    }
                    if (trustedTypesPolicy && _typeof(trustedTypes) === "object" && typeof trustedTypes.getAttributeType === "function") {
                      if (namespaceURI)
                        ;
                      else {
                        switch (trustedTypes.getAttributeType(lcTag, lcName)) {
                          case "TrustedHTML": {
                            value = trustedTypesPolicy.createHTML(value);
                            break;
                          }
                          case "TrustedScriptURL": {
                            value = trustedTypesPolicy.createScriptURL(value);
                            break;
                          }
                        }
                      }
                    }
                    try {
                      if (namespaceURI) {
                        currentNode.setAttributeNS(namespaceURI, name, value);
                      } else {
                        currentNode.setAttribute(name, value);
                      }
                      if (_isClobbered(currentNode)) {
                        _forceRemove(currentNode);
                      } else {
                        arrayPop(DOMPurify.removed);
                      }
                    } catch (_) {
                    }
                  }
                  _executeHook("afterSanitizeAttributes", currentNode, null);
                };
                var _sanitizeShadowDOM = function _sanitizeShadowDOM2(fragment) {
                  var shadowNode;
                  var shadowIterator = _createIterator(fragment);
                  _executeHook("beforeSanitizeShadowDOM", fragment, null);
                  while (shadowNode = shadowIterator.nextNode()) {
                    _executeHook("uponSanitizeShadowNode", shadowNode, null);
                    if (_sanitizeElements(shadowNode)) {
                      continue;
                    }
                    if (shadowNode.content instanceof DocumentFragment) {
                      _sanitizeShadowDOM2(shadowNode.content);
                    }
                    _sanitizeAttributes(shadowNode);
                  }
                  _executeHook("afterSanitizeShadowDOM", fragment, null);
                };
                DOMPurify.sanitize = function(dirty) {
                  var cfg = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                  var body;
                  var importedNode;
                  var currentNode;
                  var oldNode;
                  var returnNode;
                  IS_EMPTY_INPUT = !dirty;
                  if (IS_EMPTY_INPUT) {
                    dirty = "<!-->";
                  }
                  if (typeof dirty !== "string" && !_isNode(dirty)) {
                    if (typeof dirty.toString === "function") {
                      dirty = dirty.toString();
                      if (typeof dirty !== "string") {
                        throw typeErrorCreate("dirty is not a string, aborting");
                      }
                    } else {
                      throw typeErrorCreate("toString is not a function");
                    }
                  }
                  if (!DOMPurify.isSupported) {
                    if (_typeof(window2.toStaticHTML) === "object" || typeof window2.toStaticHTML === "function") {
                      if (typeof dirty === "string") {
                        return window2.toStaticHTML(dirty);
                      }
                      if (_isNode(dirty)) {
                        return window2.toStaticHTML(dirty.outerHTML);
                      }
                    }
                    return dirty;
                  }
                  if (!SET_CONFIG) {
                    _parseConfig(cfg);
                  }
                  DOMPurify.removed = [];
                  if (typeof dirty === "string") {
                    IN_PLACE = false;
                  }
                  if (IN_PLACE) {
                    if (dirty.nodeName) {
                      var tagName = transformCaseFunc(dirty.nodeName);
                      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {
                        throw typeErrorCreate("root node is forbidden and cannot be sanitized in-place");
                      }
                    }
                  } else if (dirty instanceof Node) {
                    body = _initDocument("<!---->");
                    importedNode = body.ownerDocument.importNode(dirty, true);
                    if (importedNode.nodeType === 1 && importedNode.nodeName === "BODY") {
                      body = importedNode;
                    } else if (importedNode.nodeName === "HTML") {
                      body = importedNode;
                    } else {
                      body.appendChild(importedNode);
                    }
                  } else {
                    if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && dirty.indexOf("<") === -1) {
                      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;
                    }
                    body = _initDocument(dirty);
                    if (!body) {
                      return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : "";
                    }
                  }
                  if (body && FORCE_BODY) {
                    _forceRemove(body.firstChild);
                  }
                  var nodeIterator = _createIterator(IN_PLACE ? dirty : body);
                  while (currentNode = nodeIterator.nextNode()) {
                    if (currentNode.nodeType === 3 && currentNode === oldNode) {
                      continue;
                    }
                    if (_sanitizeElements(currentNode)) {
                      continue;
                    }
                    if (currentNode.content instanceof DocumentFragment) {
                      _sanitizeShadowDOM(currentNode.content);
                    }
                    _sanitizeAttributes(currentNode);
                    oldNode = currentNode;
                  }
                  oldNode = null;
                  if (IN_PLACE) {
                    return dirty;
                  }
                  if (RETURN_DOM) {
                    if (RETURN_DOM_FRAGMENT) {
                      returnNode = createDocumentFragment.call(body.ownerDocument);
                      while (body.firstChild) {
                        returnNode.appendChild(body.firstChild);
                      }
                    } else {
                      returnNode = body;
                    }
                    if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmod) {
                      returnNode = importNode.call(originalDocument, returnNode, true);
                    }
                    return returnNode;
                  }
                  var serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;
                  if (WHOLE_DOCUMENT && ALLOWED_TAGS["!doctype"] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {
                    serializedHTML = "<!DOCTYPE " + body.ownerDocument.doctype.name + ">\n" + serializedHTML;
                  }
                  if (SAFE_FOR_TEMPLATES) {
                    serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR$1, " ");
                    serializedHTML = stringReplace(serializedHTML, ERB_EXPR$1, " ");
                    serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR$1, " ");
                  }
                  return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;
                };
                DOMPurify.setConfig = function(cfg) {
                  _parseConfig(cfg);
                  SET_CONFIG = true;
                };
                DOMPurify.clearConfig = function() {
                  CONFIG = null;
                  SET_CONFIG = false;
                };
                DOMPurify.isValidAttribute = function(tag, attr, value) {
                  if (!CONFIG) {
                    _parseConfig({});
                  }
                  var lcTag = transformCaseFunc(tag);
                  var lcName = transformCaseFunc(attr);
                  return _isValidAttribute(lcTag, lcName, value);
                };
                DOMPurify.addHook = function(entryPoint, hookFunction) {
                  if (typeof hookFunction !== "function") {
                    return;
                  }
                  hooks[entryPoint] = hooks[entryPoint] || [];
                  arrayPush(hooks[entryPoint], hookFunction);
                };
                DOMPurify.removeHook = function(entryPoint) {
                  if (hooks[entryPoint]) {
                    return arrayPop(hooks[entryPoint]);
                  }
                };
                DOMPurify.removeHooks = function(entryPoint) {
                  if (hooks[entryPoint]) {
                    hooks[entryPoint] = [];
                  }
                };
                DOMPurify.removeAllHooks = function() {
                  hooks = {};
                };
                return DOMPurify;
              }
              var purify = createDOMPurify();
              return purify;
            });
          },
          9897: function(module3, __unused_webpack_exports, __webpack_require__2) {
            module3.exports = window.DOMPurify || (window.DOMPurify = __webpack_require__2(1651)["default"] || __webpack_require__2(1651));
          },
          9129: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var isUndefined = __webpack_require__2(1395);
            function range(start, stop, step) {
              var arr = [];
              var flag;
              if (isUndefined(stop)) {
                stop = start || 0;
                start = 0;
              }
              step = step || 1;
              flag = step < 0 ? -1 : 1;
              stop *= flag;
              for (; start * flag < stop; start += step) {
                arr.push(start);
              }
              return arr;
            }
            module3.exports = range;
          },
          5177: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var isArray = __webpack_require__2(1174);
            var forEachArray = __webpack_require__2(1436);
            var forEachOwnProperties = __webpack_require__2(792);
            function forEach(obj, iteratee, context) {
              if (isArray(obj)) {
                forEachArray(obj, iteratee, context);
              } else {
                forEachOwnProperties(obj, iteratee, context);
              }
            }
            module3.exports = forEach;
          },
          1436: function(module3) {
            function forEachArray(arr, iteratee, context) {
              var index = 0;
              var len = arr.length;
              context = context || null;
              for (; index < len; index += 1) {
                if (iteratee.call(context, arr[index], index, arr) === false) {
                  break;
                }
              }
            }
            module3.exports = forEachArray;
          },
          792: function(module3) {
            function forEachOwnProperties(obj, iteratee, context) {
              var key;
              context = context || null;
              for (key in obj) {
                if (obj.hasOwnProperty(key)) {
                  if (iteratee.call(context, obj[key], key, obj) === false) {
                    break;
                  }
                }
              }
            }
            module3.exports = forEachOwnProperties;
          },
          8363: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var extend = __webpack_require__2(6582);
            var isExisty = __webpack_require__2(745);
            var isString = __webpack_require__2(9450);
            var isObject = __webpack_require__2(460);
            var isArray = __webpack_require__2(1174);
            var isFunction = __webpack_require__2(9991);
            var forEach = __webpack_require__2(5177);
            var R_EVENTNAME_SPLIT = /\s+/g;
            function CustomEvents() {
              this.events = null;
              this.contexts = null;
            }
            CustomEvents.mixin = function(func) {
              extend(func.prototype, CustomEvents.prototype);
            };
            CustomEvents.prototype._getHandlerItem = function(handler, context) {
              var item = { handler };
              if (context) {
                item.context = context;
              }
              return item;
            };
            CustomEvents.prototype._safeEvent = function(eventName) {
              var events = this.events;
              var byName;
              if (!events) {
                events = this.events = {};
              }
              if (eventName) {
                byName = events[eventName];
                if (!byName) {
                  byName = [];
                  events[eventName] = byName;
                }
                events = byName;
              }
              return events;
            };
            CustomEvents.prototype._safeContext = function() {
              var context = this.contexts;
              if (!context) {
                context = this.contexts = [];
              }
              return context;
            };
            CustomEvents.prototype._indexOfContext = function(ctx) {
              var context = this._safeContext();
              var index = 0;
              while (context[index]) {
                if (ctx === context[index][0]) {
                  return index;
                }
                index += 1;
              }
              return -1;
            };
            CustomEvents.prototype._memorizeContext = function(ctx) {
              var context, index;
              if (!isExisty(ctx)) {
                return;
              }
              context = this._safeContext();
              index = this._indexOfContext(ctx);
              if (index > -1) {
                context[index][1] += 1;
              } else {
                context.push([ctx, 1]);
              }
            };
            CustomEvents.prototype._forgetContext = function(ctx) {
              var context, contextIndex;
              if (!isExisty(ctx)) {
                return;
              }
              context = this._safeContext();
              contextIndex = this._indexOfContext(ctx);
              if (contextIndex > -1) {
                context[contextIndex][1] -= 1;
                if (context[contextIndex][1] <= 0) {
                  context.splice(contextIndex, 1);
                }
              }
            };
            CustomEvents.prototype._bindEvent = function(eventName, handler, context) {
              var events = this._safeEvent(eventName);
              this._memorizeContext(context);
              events.push(this._getHandlerItem(handler, context));
            };
            CustomEvents.prototype.on = function(eventName, handler, context) {
              var self2 = this;
              if (isString(eventName)) {
                eventName = eventName.split(R_EVENTNAME_SPLIT);
                forEach(eventName, function(name) {
                  self2._bindEvent(name, handler, context);
                });
              } else if (isObject(eventName)) {
                context = handler;
                forEach(eventName, function(func, name) {
                  self2.on(name, func, context);
                });
              }
            };
            CustomEvents.prototype.once = function(eventName, handler, context) {
              var self2 = this;
              if (isObject(eventName)) {
                context = handler;
                forEach(eventName, function(func, name) {
                  self2.once(name, func, context);
                });
                return;
              }
              function onceHandler() {
                handler.apply(context, arguments);
                self2.off(eventName, onceHandler, context);
              }
              this.on(eventName, onceHandler, context);
            };
            CustomEvents.prototype._spliceMatches = function(arr, predicate) {
              var i = 0;
              var len;
              if (!isArray(arr)) {
                return;
              }
              for (len = arr.length; i < len; i += 1) {
                if (predicate(arr[i]) === true) {
                  arr.splice(i, 1);
                  len -= 1;
                  i -= 1;
                }
              }
            };
            CustomEvents.prototype._matchHandler = function(handler) {
              var self2 = this;
              return function(item) {
                var needRemove = handler === item.handler;
                if (needRemove) {
                  self2._forgetContext(item.context);
                }
                return needRemove;
              };
            };
            CustomEvents.prototype._matchContext = function(context) {
              var self2 = this;
              return function(item) {
                var needRemove = context === item.context;
                if (needRemove) {
                  self2._forgetContext(item.context);
                }
                return needRemove;
              };
            };
            CustomEvents.prototype._matchHandlerAndContext = function(handler, context) {
              var self2 = this;
              return function(item) {
                var matchHandler = handler === item.handler;
                var matchContext = context === item.context;
                var needRemove = matchHandler && matchContext;
                if (needRemove) {
                  self2._forgetContext(item.context);
                }
                return needRemove;
              };
            };
            CustomEvents.prototype._offByEventName = function(eventName, handler) {
              var self2 = this;
              var andByHandler = isFunction(handler);
              var matchHandler = self2._matchHandler(handler);
              eventName = eventName.split(R_EVENTNAME_SPLIT);
              forEach(eventName, function(name) {
                var handlerItems = self2._safeEvent(name);
                if (andByHandler) {
                  self2._spliceMatches(handlerItems, matchHandler);
                } else {
                  forEach(handlerItems, function(item) {
                    self2._forgetContext(item.context);
                  });
                  self2.events[name] = [];
                }
              });
            };
            CustomEvents.prototype._offByHandler = function(handler) {
              var self2 = this;
              var matchHandler = this._matchHandler(handler);
              forEach(this._safeEvent(), function(handlerItems) {
                self2._spliceMatches(handlerItems, matchHandler);
              });
            };
            CustomEvents.prototype._offByObject = function(obj, handler) {
              var self2 = this;
              var matchFunc;
              if (this._indexOfContext(obj) < 0) {
                forEach(obj, function(func, name) {
                  self2.off(name, func);
                });
              } else if (isString(handler)) {
                matchFunc = this._matchContext(obj);
                self2._spliceMatches(this._safeEvent(handler), matchFunc);
              } else if (isFunction(handler)) {
                matchFunc = this._matchHandlerAndContext(handler, obj);
                forEach(this._safeEvent(), function(handlerItems) {
                  self2._spliceMatches(handlerItems, matchFunc);
                });
              } else {
                matchFunc = this._matchContext(obj);
                forEach(this._safeEvent(), function(handlerItems) {
                  self2._spliceMatches(handlerItems, matchFunc);
                });
              }
            };
            CustomEvents.prototype.off = function(eventName, handler) {
              if (isString(eventName)) {
                this._offByEventName(eventName, handler);
              } else if (!arguments.length) {
                this.events = {};
                this.contexts = [];
              } else if (isFunction(eventName)) {
                this._offByHandler(eventName);
              } else if (isObject(eventName)) {
                this._offByObject(eventName, handler);
              }
            };
            CustomEvents.prototype.fire = function(eventName) {
              this.invoke.apply(this, arguments);
            };
            CustomEvents.prototype.invoke = function(eventName) {
              var events, args, index, item;
              if (!this.hasListener(eventName)) {
                return true;
              }
              events = this._safeEvent(eventName);
              args = Array.prototype.slice.call(arguments, 1);
              index = 0;
              while (events[index]) {
                item = events[index];
                if (item.handler.apply(item.context, args) === false) {
                  return false;
                }
                index += 1;
              }
              return true;
            };
            CustomEvents.prototype.hasListener = function(eventName) {
              return this.getListenerLength(eventName) > 0;
            };
            CustomEvents.prototype.getListenerLength = function(eventName) {
              var events = this._safeEvent(eventName);
              return events.length;
            };
            module3.exports = CustomEvents;
          },
          6582: function(module3) {
            function extend(target, objects) {
              var hasOwnProp2 = Object.prototype.hasOwnProperty;
              var source, prop, i, len;
              for (i = 1, len = arguments.length; i < len; i += 1) {
                source = arguments[i];
                for (prop in source) {
                  if (hasOwnProp2.call(source, prop)) {
                    target[prop] = source[prop];
                  }
                }
              }
              return target;
            }
            module3.exports = extend;
          },
          645: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var forEachOwnProperties = __webpack_require__2(792);
            function imagePing(url, trackingInfo) {
              var trackingElement = document.createElement("img");
              var queryString = "";
              forEachOwnProperties(trackingInfo, function(value, key) {
                queryString += "&" + key + "=" + value;
              });
              queryString = queryString.substring(1);
              trackingElement.src = url + "?" + queryString;
              trackingElement.style.display = "none";
              document.body.appendChild(trackingElement);
              document.body.removeChild(trackingElement);
              return trackingElement;
            }
            module3.exports = imagePing;
          },
          2229: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var isUndefined = __webpack_require__2(1395);
            var imagePing = __webpack_require__2(645);
            var ms7days = 7 * 24 * 60 * 60 * 1e3;
            function isExpired(date) {
              var now = new Date().getTime();
              return now - date > ms7days;
            }
            function sendHostname(appName, trackingId) {
              var url = "https://www.google-analytics.com/collect";
              var hostname = location.hostname;
              var hitType = "event";
              var eventCategory = "use";
              var applicationKeyForStorage = "TOAST UI " + appName + " for " + hostname + ": Statistics";
              var date = window.localStorage.getItem(applicationKeyForStorage);
              if (!isUndefined(window.tui) && window.tui.usageStatistics === false) {
                return;
              }
              if (date && !isExpired(date)) {
                return;
              }
              window.localStorage.setItem(applicationKeyForStorage, new Date().getTime());
              setTimeout(function() {
                if (document.readyState === "interactive" || document.readyState === "complete") {
                  imagePing(url, {
                    v: 1,
                    t: hitType,
                    tid: trackingId,
                    cid: hostname,
                    dp: hostname,
                    dh: appName,
                    el: appName,
                    ec: eventCategory
                  });
                }
              }, 1e3);
            }
            module3.exports = sendHostname;
          },
          1174: function(module3) {
            function isArray(obj) {
              return obj instanceof Array;
            }
            module3.exports = isArray;
          },
          499: function(module3) {
            function isBoolean(obj) {
              return typeof obj === "boolean" || obj instanceof Boolean;
            }
            module3.exports = isBoolean;
          },
          745: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var isUndefined = __webpack_require__2(1395);
            var isNull = __webpack_require__2(5870);
            function isExisty(param) {
              return !isUndefined(param) && !isNull(param);
            }
            module3.exports = isExisty;
          },
          9991: function(module3) {
            function isFunction(obj) {
              return obj instanceof Function;
            }
            module3.exports = isFunction;
          },
          5870: function(module3) {
            function isNull(obj) {
              return obj === null;
            }
            module3.exports = isNull;
          },
          2090: function(module3) {
            function isNumber(obj) {
              return typeof obj === "number" || obj instanceof Number;
            }
            module3.exports = isNumber;
          },
          460: function(module3) {
            function isObject(obj) {
              return obj === Object(obj);
            }
            module3.exports = isObject;
          },
          9450: function(module3) {
            function isString(obj) {
              return typeof obj === "string" || obj instanceof String;
            }
            module3.exports = isString;
          },
          1395: function(module3) {
            function isUndefined(obj) {
              return obj === void 0;
            }
            module3.exports = isUndefined;
          },
          411: function(module3) {
            module3.exports = __WEBPACK_EXTERNAL_MODULE__411__;
          },
          4977: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var isCallable = __webpack_require__2(4188);
            var tryToString = __webpack_require__2(3174);
            var $TypeError = TypeError;
            module3.exports = function(argument) {
              if (isCallable(argument))
                return argument;
              throw new $TypeError(tryToString(argument) + " is not a function");
            };
          },
          1361: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var isConstructor = __webpack_require__2(866);
            var tryToString = __webpack_require__2(3174);
            var $TypeError = TypeError;
            module3.exports = function(argument) {
              if (isConstructor(argument))
                return argument;
              throw new $TypeError(tryToString(argument) + " is not a constructor");
            };
          },
          4121: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var isPossiblePrototype = __webpack_require__2(6712);
            var $String = String;
            var $TypeError = TypeError;
            module3.exports = function(argument) {
              if (isPossiblePrototype(argument))
                return argument;
              throw new $TypeError("Can't set " + $String(argument) + " as a prototype");
            };
          },
          5458: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var wellKnownSymbol = __webpack_require__2(4282);
            var create = __webpack_require__2(7065);
            var defineProperty = __webpack_require__2(4466).f;
            var UNSCOPABLES = wellKnownSymbol("unscopables");
            var ArrayPrototype = Array.prototype;
            if (ArrayPrototype[UNSCOPABLES] === void 0) {
              defineProperty(ArrayPrototype, UNSCOPABLES, {
                configurable: true,
                value: create(null)
              });
            }
            module3.exports = function(key) {
              ArrayPrototype[UNSCOPABLES][key] = true;
            };
          },
          154: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var charAt = __webpack_require__2(4212).charAt;
            module3.exports = function(S, index, unicode) {
              return index + (unicode ? charAt(S, index).length : 1);
            };
          },
          286: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var isPrototypeOf = __webpack_require__2(4578);
            var $TypeError = TypeError;
            module3.exports = function(it, Prototype) {
              if (isPrototypeOf(Prototype, it))
                return it;
              throw new $TypeError("Incorrect invocation");
            };
          },
          3770: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var isObject = __webpack_require__2(831);
            var $String = String;
            var $TypeError = TypeError;
            module3.exports = function(argument) {
              if (isObject(argument))
                return argument;
              throw new $TypeError($String(argument) + " is not an object");
            };
          },
          5469: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var fails = __webpack_require__2(5234);
            module3.exports = fails(function() {
              if (typeof ArrayBuffer == "function") {
                var buffer = new ArrayBuffer(8);
                if (Object.isExtensible(buffer))
                  Object.defineProperty(buffer, "a", { value: 8 });
              }
            });
          },
          8150: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var toObject = __webpack_require__2(3628);
            var toAbsoluteIndex = __webpack_require__2(675);
            var lengthOfArrayLike = __webpack_require__2(9389);
            module3.exports = function fill(value) {
              var O = toObject(this);
              var length = lengthOfArrayLike(O);
              var argumentsLength = arguments.length;
              var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : void 0, length);
              var end = argumentsLength > 2 ? arguments[2] : void 0;
              var endPos = end === void 0 ? length : toAbsoluteIndex(end, length);
              while (endPos > index)
                O[index++] = value;
              return O;
            };
          },
          7500: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var $forEach = __webpack_require__2(4104).forEach;
            var arrayMethodIsStrict = __webpack_require__2(5397);
            var STRICT_METHOD = arrayMethodIsStrict("forEach");
            module3.exports = !STRICT_METHOD ? function forEach(callbackfn) {
              return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
            } : [].forEach;
          },
          6859: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var bind = __webpack_require__2(5821);
            var call = __webpack_require__2(9944);
            var toObject = __webpack_require__2(3628);
            var callWithSafeIterationClosing = __webpack_require__2(4412);
            var isArrayIteratorMethod = __webpack_require__2(8146);
            var isConstructor = __webpack_require__2(866);
            var lengthOfArrayLike = __webpack_require__2(9389);
            var createProperty = __webpack_require__2(4417);
            var getIterator = __webpack_require__2(2350);
            var getIteratorMethod = __webpack_require__2(9874);
            var $Array = Array;
            module3.exports = function from(arrayLike) {
              var O = toObject(arrayLike);
              var IS_CONSTRUCTOR = isConstructor(this);
              var argumentsLength = arguments.length;
              var mapfn = argumentsLength > 1 ? arguments[1] : void 0;
              var mapping = mapfn !== void 0;
              if (mapping)
                mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : void 0);
              var iteratorMethod = getIteratorMethod(O);
              var index = 0;
              var length, result, step, iterator, next, value;
              if (iteratorMethod && !(this === $Array && isArrayIteratorMethod(iteratorMethod))) {
                result = IS_CONSTRUCTOR ? new this() : [];
                iterator = getIterator(O, iteratorMethod);
                next = iterator.next;
                for (; !(step = call(next, iterator)).done; index++) {
                  value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
                  createProperty(result, index, value);
                }
              } else {
                length = lengthOfArrayLike(O);
                result = IS_CONSTRUCTOR ? new this(length) : $Array(length);
                for (; length > index; index++) {
                  value = mapping ? mapfn(O[index], index) : O[index];
                  createProperty(result, index, value);
                }
              }
              result.length = index;
              return result;
            };
          },
          1458: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var toIndexedObject = __webpack_require__2(380);
            var toAbsoluteIndex = __webpack_require__2(675);
            var lengthOfArrayLike = __webpack_require__2(9389);
            var createMethod = function(IS_INCLUDES) {
              return function($this, el, fromIndex) {
                var O = toIndexedObject($this);
                var length = lengthOfArrayLike(O);
                if (length === 0)
                  return !IS_INCLUDES && -1;
                var index = toAbsoluteIndex(fromIndex, length);
                var value;
                if (IS_INCLUDES && el !== el)
                  while (length > index) {
                    value = O[index++];
                    if (value !== value)
                      return true;
                  }
                else
                  for (; length > index; index++) {
                    if ((IS_INCLUDES || index in O) && O[index] === el)
                      return IS_INCLUDES || index || 0;
                  }
                return !IS_INCLUDES && -1;
              };
            };
            module3.exports = {
              includes: createMethod(true),
              indexOf: createMethod(false)
            };
          },
          4104: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var bind = __webpack_require__2(5821);
            var uncurryThis = __webpack_require__2(6881);
            var IndexedObject = __webpack_require__2(7568);
            var toObject = __webpack_require__2(3628);
            var lengthOfArrayLike = __webpack_require__2(9389);
            var arraySpeciesCreate = __webpack_require__2(5022);
            var push = uncurryThis([].push);
            var createMethod = function(TYPE) {
              var IS_MAP = TYPE === 1;
              var IS_FILTER = TYPE === 2;
              var IS_SOME = TYPE === 3;
              var IS_EVERY = TYPE === 4;
              var IS_FIND_INDEX = TYPE === 6;
              var IS_FILTER_REJECT = TYPE === 7;
              var NO_HOLES = TYPE === 5 || IS_FIND_INDEX;
              return function($this, callbackfn, that, specificCreate) {
                var O = toObject($this);
                var self2 = IndexedObject(O);
                var length = lengthOfArrayLike(self2);
                var boundFunction = bind(callbackfn, that);
                var index = 0;
                var create = specificCreate || arraySpeciesCreate;
                var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : void 0;
                var value, result;
                for (; length > index; index++)
                  if (NO_HOLES || index in self2) {
                    value = self2[index];
                    result = boundFunction(value, index, O);
                    if (TYPE) {
                      if (IS_MAP)
                        target[index] = result;
                      else if (result)
                        switch (TYPE) {
                          case 3:
                            return true;
                          case 5:
                            return value;
                          case 6:
                            return index;
                          case 2:
                            push(target, value);
                        }
                      else
                        switch (TYPE) {
                          case 4:
                            return false;
                          case 7:
                            push(target, value);
                        }
                    }
                  }
                return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
              };
            };
            module3.exports = {
              forEach: createMethod(0),
              map: createMethod(1),
              filter: createMethod(2),
              some: createMethod(3),
              every: createMethod(4),
              find: createMethod(5),
              findIndex: createMethod(6),
              filterReject: createMethod(7)
            };
          },
          378: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var fails = __webpack_require__2(5234);
            var wellKnownSymbol = __webpack_require__2(4282);
            var V8_VERSION = __webpack_require__2(3008);
            var SPECIES = wellKnownSymbol("species");
            module3.exports = function(METHOD_NAME) {
              return V8_VERSION >= 51 || !fails(function() {
                var array = [];
                var constructor = array.constructor = {};
                constructor[SPECIES] = function() {
                  return { foo: 1 };
                };
                return array[METHOD_NAME](Boolean).foo !== 1;
              });
            };
          },
          5397: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var fails = __webpack_require__2(5234);
            module3.exports = function(METHOD_NAME, argument) {
              var method = [][METHOD_NAME];
              return !!method && fails(function() {
                method.call(null, argument || function() {
                  return 1;
                }, 1);
              });
            };
          },
          4224: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var DESCRIPTORS = __webpack_require__2(6893);
            var isArray = __webpack_require__2(6719);
            var $TypeError = TypeError;
            var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
            var SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS && !function() {
              if (this !== void 0)
                return true;
              try {
                Object.defineProperty([], "length", { writable: false }).length = 1;
              } catch (error) {
                return error instanceof TypeError;
              }
            }();
            module3.exports = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function(O, length) {
              if (isArray(O) && !getOwnPropertyDescriptor(O, "length").writable) {
                throw new $TypeError("Cannot set read only .length");
              }
              return O.length = length;
            } : function(O, length) {
              return O.length = length;
            };
          },
          7825: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThis = __webpack_require__2(6881);
            module3.exports = uncurryThis([].slice);
          },
          9295: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var arraySlice = __webpack_require__2(7825);
            var floor = Math.floor;
            var sort = function(array, comparefn) {
              var length = array.length;
              if (length < 8) {
                var i = 1;
                var element, j;
                while (i < length) {
                  j = i;
                  element = array[i];
                  while (j && comparefn(array[j - 1], element) > 0) {
                    array[j] = array[--j];
                  }
                  if (j !== i++)
                    array[j] = element;
                }
              } else {
                var middle = floor(length / 2);
                var left = sort(arraySlice(array, 0, middle), comparefn);
                var right = sort(arraySlice(array, middle), comparefn);
                var llength = left.length;
                var rlength = right.length;
                var lindex = 0;
                var rindex = 0;
                while (lindex < llength || rindex < rlength) {
                  array[lindex + rindex] = lindex < llength && rindex < rlength ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++] : lindex < llength ? left[lindex++] : right[rindex++];
                }
              }
              return array;
            };
            module3.exports = sort;
          },
          9980: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var isArray = __webpack_require__2(6719);
            var isConstructor = __webpack_require__2(866);
            var isObject = __webpack_require__2(831);
            var wellKnownSymbol = __webpack_require__2(4282);
            var SPECIES = wellKnownSymbol("species");
            var $Array = Array;
            module3.exports = function(originalArray) {
              var C;
              if (isArray(originalArray)) {
                C = originalArray.constructor;
                if (isConstructor(C) && (C === $Array || isArray(C.prototype)))
                  C = void 0;
                else if (isObject(C)) {
                  C = C[SPECIES];
                  if (C === null)
                    C = void 0;
                }
              }
              return C === void 0 ? $Array : C;
            };
          },
          5022: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var arraySpeciesConstructor = __webpack_require__2(9980);
            module3.exports = function(originalArray, length) {
              return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
            };
          },
          4412: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var anObject = __webpack_require__2(3770);
            var iteratorClose = __webpack_require__2(8500);
            module3.exports = function(iterator, fn, value, ENTRIES) {
              try {
                return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
              } catch (error) {
                iteratorClose(iterator, "throw", error);
              }
            };
          },
          7283: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var wellKnownSymbol = __webpack_require__2(4282);
            var ITERATOR = wellKnownSymbol("iterator");
            var SAFE_CLOSING = false;
            try {
              var called = 0;
              var iteratorWithReturn = {
                next: function() {
                  return { done: !!called++ };
                },
                "return": function() {
                  SAFE_CLOSING = true;
                }
              };
              iteratorWithReturn[ITERATOR] = function() {
                return this;
              };
              Array.from(iteratorWithReturn, function() {
                throw 2;
              });
            } catch (error) {
            }
            module3.exports = function(exec, SKIP_CLOSING) {
              try {
                if (!SKIP_CLOSING && !SAFE_CLOSING)
                  return false;
              } catch (error) {
                return false;
              }
              var ITERATION_SUPPORT = false;
              try {
                var object = {};
                object[ITERATOR] = function() {
                  return {
                    next: function() {
                      return { done: ITERATION_SUPPORT = true };
                    }
                  };
                };
                exec(object);
              } catch (error) {
              }
              return ITERATION_SUPPORT;
            };
          },
          8689: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThis = __webpack_require__2(6881);
            var toString = uncurryThis({}.toString);
            var stringSlice = uncurryThis("".slice);
            module3.exports = function(it) {
              return stringSlice(toString(it), 8, -1);
            };
          },
          5438: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var TO_STRING_TAG_SUPPORT = __webpack_require__2(9345);
            var isCallable = __webpack_require__2(4188);
            var classofRaw = __webpack_require__2(8689);
            var wellKnownSymbol = __webpack_require__2(4282);
            var TO_STRING_TAG = wellKnownSymbol("toStringTag");
            var $Object = Object;
            var CORRECT_ARGUMENTS = classofRaw(function() {
              return arguments;
            }()) === "Arguments";
            var tryGet = function(it, key) {
              try {
                return it[key];
              } catch (error) {
              }
            };
            module3.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function(it) {
              var O, tag, result;
              return it === void 0 ? "Undefined" : it === null ? "Null" : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == "string" ? tag : CORRECT_ARGUMENTS ? classofRaw(O) : (result = classofRaw(O)) === "Object" && isCallable(O.callee) ? "Arguments" : result;
            };
          },
          3231: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var create = __webpack_require__2(7065);
            var defineBuiltInAccessor = __webpack_require__2(997);
            var defineBuiltIns = __webpack_require__2(4320);
            var bind = __webpack_require__2(5821);
            var anInstance = __webpack_require__2(286);
            var isNullOrUndefined = __webpack_require__2(4318);
            var iterate = __webpack_require__2(8873);
            var defineIterator = __webpack_require__2(3217);
            var createIterResultObject = __webpack_require__2(6224);
            var setSpecies = __webpack_require__2(3900);
            var DESCRIPTORS = __webpack_require__2(6893);
            var fastKey = __webpack_require__2(8118).fastKey;
            var InternalStateModule = __webpack_require__2(3086);
            var setInternalState = InternalStateModule.set;
            var internalStateGetterFor = InternalStateModule.getterFor;
            module3.exports = {
              getConstructor: function(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
                var Constructor = wrapper(function(that, iterable) {
                  anInstance(that, Prototype);
                  setInternalState(that, {
                    type: CONSTRUCTOR_NAME,
                    index: create(null),
                    first: void 0,
                    last: void 0,
                    size: 0
                  });
                  if (!DESCRIPTORS)
                    that.size = 0;
                  if (!isNullOrUndefined(iterable))
                    iterate(iterable, that[ADDER], { that, AS_ENTRIES: IS_MAP });
                });
                var Prototype = Constructor.prototype;
                var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);
                var define2 = function(that, key, value) {
                  var state = getInternalState(that);
                  var entry = getEntry(that, key);
                  var previous, index;
                  if (entry) {
                    entry.value = value;
                  } else {
                    state.last = entry = {
                      index: index = fastKey(key, true),
                      key,
                      value,
                      previous: previous = state.last,
                      next: void 0,
                      removed: false
                    };
                    if (!state.first)
                      state.first = entry;
                    if (previous)
                      previous.next = entry;
                    if (DESCRIPTORS)
                      state.size++;
                    else
                      that.size++;
                    if (index !== "F")
                      state.index[index] = entry;
                  }
                  return that;
                };
                var getEntry = function(that, key) {
                  var state = getInternalState(that);
                  var index = fastKey(key);
                  var entry;
                  if (index !== "F")
                    return state.index[index];
                  for (entry = state.first; entry; entry = entry.next) {
                    if (entry.key === key)
                      return entry;
                  }
                };
                defineBuiltIns(Prototype, {
                  clear: function clear() {
                    var that = this;
                    var state = getInternalState(that);
                    var entry = state.first;
                    while (entry) {
                      entry.removed = true;
                      if (entry.previous)
                        entry.previous = entry.previous.next = void 0;
                      entry = entry.next;
                    }
                    state.first = state.last = void 0;
                    state.index = create(null);
                    if (DESCRIPTORS)
                      state.size = 0;
                    else
                      that.size = 0;
                  },
                  "delete": function(key) {
                    var that = this;
                    var state = getInternalState(that);
                    var entry = getEntry(that, key);
                    if (entry) {
                      var next = entry.next;
                      var prev = entry.previous;
                      delete state.index[entry.index];
                      entry.removed = true;
                      if (prev)
                        prev.next = next;
                      if (next)
                        next.previous = prev;
                      if (state.first === entry)
                        state.first = next;
                      if (state.last === entry)
                        state.last = prev;
                      if (DESCRIPTORS)
                        state.size--;
                      else
                        that.size--;
                    }
                    return !!entry;
                  },
                  forEach: function forEach(callbackfn) {
                    var state = getInternalState(this);
                    var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : void 0);
                    var entry;
                    while (entry = entry ? entry.next : state.first) {
                      boundFunction(entry.value, entry.key, this);
                      while (entry && entry.removed)
                        entry = entry.previous;
                    }
                  },
                  has: function has(key) {
                    return !!getEntry(this, key);
                  }
                });
                defineBuiltIns(Prototype, IS_MAP ? {
                  get: function get(key) {
                    var entry = getEntry(this, key);
                    return entry && entry.value;
                  },
                  set: function set(key, value) {
                    return define2(this, key === 0 ? 0 : key, value);
                  }
                } : {
                  add: function add(value) {
                    return define2(this, value = value === 0 ? 0 : value, value);
                  }
                });
                if (DESCRIPTORS)
                  defineBuiltInAccessor(Prototype, "size", {
                    configurable: true,
                    get: function() {
                      return getInternalState(this).size;
                    }
                  });
                return Constructor;
              },
              setStrong: function(Constructor, CONSTRUCTOR_NAME, IS_MAP) {
                var ITERATOR_NAME = CONSTRUCTOR_NAME + " Iterator";
                var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);
                var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);
                defineIterator(Constructor, CONSTRUCTOR_NAME, function(iterated, kind) {
                  setInternalState(this, {
                    type: ITERATOR_NAME,
                    target: iterated,
                    state: getInternalCollectionState(iterated),
                    kind,
                    last: void 0
                  });
                }, function() {
                  var state = getInternalIteratorState(this);
                  var kind = state.kind;
                  var entry = state.last;
                  while (entry && entry.removed)
                    entry = entry.previous;
                  if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
                    state.target = void 0;
                    return createIterResultObject(void 0, true);
                  }
                  if (kind === "keys")
                    return createIterResultObject(entry.key, false);
                  if (kind === "values")
                    return createIterResultObject(entry.value, false);
                  return createIterResultObject([entry.key, entry.value], false);
                }, IS_MAP ? "entries" : "values", !IS_MAP, true);
                setSpecies(CONSTRUCTOR_NAME);
              }
            };
          },
          6351: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var globalThis2 = __webpack_require__2(9117);
            var uncurryThis = __webpack_require__2(6881);
            var isForced = __webpack_require__2(8489);
            var defineBuiltIn = __webpack_require__2(7509);
            var InternalMetadataModule = __webpack_require__2(8118);
            var iterate = __webpack_require__2(8873);
            var anInstance = __webpack_require__2(286);
            var isCallable = __webpack_require__2(4188);
            var isNullOrUndefined = __webpack_require__2(4318);
            var isObject = __webpack_require__2(831);
            var fails = __webpack_require__2(5234);
            var checkCorrectnessOfIteration = __webpack_require__2(7283);
            var setToStringTag = __webpack_require__2(3754);
            var inheritIfRequired = __webpack_require__2(4166);
            module3.exports = function(CONSTRUCTOR_NAME, wrapper, common) {
              var IS_MAP = CONSTRUCTOR_NAME.indexOf("Map") !== -1;
              var IS_WEAK = CONSTRUCTOR_NAME.indexOf("Weak") !== -1;
              var ADDER = IS_MAP ? "set" : "add";
              var NativeConstructor = globalThis2[CONSTRUCTOR_NAME];
              var NativePrototype = NativeConstructor && NativeConstructor.prototype;
              var Constructor = NativeConstructor;
              var exported = {};
              var fixMethod = function(KEY) {
                var uncurriedNativeMethod = uncurryThis(NativePrototype[KEY]);
                defineBuiltIn(
                  NativePrototype,
                  KEY,
                  KEY === "add" ? function add(value) {
                    uncurriedNativeMethod(this, value === 0 ? 0 : value);
                    return this;
                  } : KEY === "delete" ? function(key) {
                    return IS_WEAK && !isObject(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
                  } : KEY === "get" ? function get(key) {
                    return IS_WEAK && !isObject(key) ? void 0 : uncurriedNativeMethod(this, key === 0 ? 0 : key);
                  } : KEY === "has" ? function has(key) {
                    return IS_WEAK && !isObject(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
                  } : function set(key, value) {
                    uncurriedNativeMethod(this, key === 0 ? 0 : key, value);
                    return this;
                  }
                );
              };
              var REPLACE = isForced(
                CONSTRUCTOR_NAME,
                !isCallable(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails(function() {
                  new NativeConstructor().entries().next();
                }))
              );
              if (REPLACE) {
                Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
                InternalMetadataModule.enable();
              } else if (isForced(CONSTRUCTOR_NAME, true)) {
                var instance = new Constructor();
                var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) !== instance;
                var THROWS_ON_PRIMITIVES = fails(function() {
                  instance.has(1);
                });
                var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function(iterable) {
                  new NativeConstructor(iterable);
                });
                var BUGGY_ZERO = !IS_WEAK && fails(function() {
                  var $instance = new NativeConstructor();
                  var index = 5;
                  while (index--)
                    $instance[ADDER](index, index);
                  return !$instance.has(-0);
                });
                if (!ACCEPT_ITERABLES) {
                  Constructor = wrapper(function(dummy, iterable) {
                    anInstance(dummy, NativePrototype);
                    var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);
                    if (!isNullOrUndefined(iterable))
                      iterate(iterable, that[ADDER], { that, AS_ENTRIES: IS_MAP });
                    return that;
                  });
                  Constructor.prototype = NativePrototype;
                  NativePrototype.constructor = Constructor;
                }
                if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
                  fixMethod("delete");
                  fixMethod("has");
                  IS_MAP && fixMethod("get");
                }
                if (BUGGY_ZERO || HASNT_CHAINING)
                  fixMethod(ADDER);
                if (IS_WEAK && NativePrototype.clear)
                  delete NativePrototype.clear;
              }
              exported[CONSTRUCTOR_NAME] = Constructor;
              $({ global: true, constructor: true, forced: Constructor !== NativeConstructor }, exported);
              setToStringTag(Constructor, CONSTRUCTOR_NAME);
              if (!IS_WEAK)
                common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);
              return Constructor;
            };
          },
          8657: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var hasOwn = __webpack_require__2(4418);
            var ownKeys = __webpack_require__2(3168);
            var getOwnPropertyDescriptorModule = __webpack_require__2(9304);
            var definePropertyModule = __webpack_require__2(4466);
            module3.exports = function(target, source, exceptions) {
              var keys = ownKeys(source);
              var defineProperty = definePropertyModule.f;
              var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
              for (var i = 0; i < keys.length; i++) {
                var key = keys[i];
                if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
                  defineProperty(target, key, getOwnPropertyDescriptor(source, key));
                }
              }
            };
          },
          6425: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var wellKnownSymbol = __webpack_require__2(4282);
            var MATCH = wellKnownSymbol("match");
            module3.exports = function(METHOD_NAME) {
              var regexp = /./;
              try {
                "/./"[METHOD_NAME](regexp);
              } catch (error1) {
                try {
                  regexp[MATCH] = false;
                  return "/./"[METHOD_NAME](regexp);
                } catch (error2) {
                }
              }
              return false;
            };
          },
          680: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var fails = __webpack_require__2(5234);
            module3.exports = !fails(function() {
              function F() {
              }
              F.prototype.constructor = null;
              return Object.getPrototypeOf(new F()) !== F.prototype;
            });
          },
          6224: function(module3) {
            module3.exports = function(value, done) {
              return { value, done };
            };
          },
          8088: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var DESCRIPTORS = __webpack_require__2(6893);
            var definePropertyModule = __webpack_require__2(4466);
            var createPropertyDescriptor = __webpack_require__2(9123);
            module3.exports = DESCRIPTORS ? function(object, key, value) {
              return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
            } : function(object, key, value) {
              object[key] = value;
              return object;
            };
          },
          9123: function(module3) {
            module3.exports = function(bitmap, value) {
              return {
                enumerable: !(bitmap & 1),
                configurable: !(bitmap & 2),
                writable: !(bitmap & 4),
                value
              };
            };
          },
          4417: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var DESCRIPTORS = __webpack_require__2(6893);
            var definePropertyModule = __webpack_require__2(4466);
            var createPropertyDescriptor = __webpack_require__2(9123);
            module3.exports = function(object, key, value) {
              if (DESCRIPTORS)
                definePropertyModule.f(object, key, createPropertyDescriptor(0, value));
              else
                object[key] = value;
            };
          },
          8089: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var anObject = __webpack_require__2(3770);
            var ordinaryToPrimitive = __webpack_require__2(2287);
            var $TypeError = TypeError;
            module3.exports = function(hint) {
              anObject(this);
              if (hint === "string" || hint === "default")
                hint = "string";
              else if (hint !== "number")
                throw new $TypeError("Incorrect hint");
              return ordinaryToPrimitive(this, hint);
            };
          },
          997: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var makeBuiltIn = __webpack_require__2(4530);
            var defineProperty = __webpack_require__2(4466);
            module3.exports = function(target, name, descriptor) {
              if (descriptor.get)
                makeBuiltIn(descriptor.get, name, { getter: true });
              if (descriptor.set)
                makeBuiltIn(descriptor.set, name, { setter: true });
              return defineProperty.f(target, name, descriptor);
            };
          },
          7509: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var isCallable = __webpack_require__2(4188);
            var definePropertyModule = __webpack_require__2(4466);
            var makeBuiltIn = __webpack_require__2(4530);
            var defineGlobalProperty = __webpack_require__2(4798);
            module3.exports = function(O, key, value, options) {
              if (!options)
                options = {};
              var simple = options.enumerable;
              var name = options.name !== void 0 ? options.name : key;
              if (isCallable(value))
                makeBuiltIn(value, name, options);
              if (options.global) {
                if (simple)
                  O[key] = value;
                else
                  defineGlobalProperty(key, value);
              } else {
                try {
                  if (!options.unsafe)
                    delete O[key];
                  else if (O[key])
                    simple = true;
                } catch (error) {
                }
                if (simple)
                  O[key] = value;
                else
                  definePropertyModule.f(O, key, {
                    value,
                    enumerable: false,
                    configurable: !options.nonConfigurable,
                    writable: !options.nonWritable
                  });
              }
              return O;
            };
          },
          4320: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var defineBuiltIn = __webpack_require__2(7509);
            module3.exports = function(target, src, options) {
              for (var key in src)
                defineBuiltIn(target, key, src[key], options);
              return target;
            };
          },
          4798: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var globalThis2 = __webpack_require__2(9117);
            var defineProperty = Object.defineProperty;
            module3.exports = function(key, value) {
              try {
                defineProperty(globalThis2, key, { value, configurable: true, writable: true });
              } catch (error) {
                globalThis2[key] = value;
              }
              return value;
            };
          },
          1305: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var tryToString = __webpack_require__2(3174);
            var $TypeError = TypeError;
            module3.exports = function(O, P) {
              if (!delete O[P])
                throw new $TypeError("Cannot delete property " + tryToString(P) + " of " + tryToString(O));
            };
          },
          6893: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var fails = __webpack_require__2(5234);
            module3.exports = !fails(function() {
              return Object.defineProperty({}, 1, { get: function() {
                return 7;
              } })[1] !== 7;
            });
          },
          5926: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var globalThis2 = __webpack_require__2(9117);
            var isObject = __webpack_require__2(831);
            var document2 = globalThis2.document;
            var EXISTS = isObject(document2) && isObject(document2.createElement);
            module3.exports = function(it) {
              return EXISTS ? document2.createElement(it) : {};
            };
          },
          2197: function(module3) {
            var $TypeError = TypeError;
            var MAX_SAFE_INTEGER = 9007199254740991;
            module3.exports = function(it) {
              if (it > MAX_SAFE_INTEGER)
                throw $TypeError("Maximum allowed index exceeded");
              return it;
            };
          },
          9429: function(module3) {
            module3.exports = {
              CSSRuleList: 0,
              CSSStyleDeclaration: 0,
              CSSValueList: 0,
              ClientRectList: 0,
              DOMRectList: 0,
              DOMStringList: 0,
              DOMTokenList: 1,
              DataTransferItemList: 0,
              FileList: 0,
              HTMLAllCollection: 0,
              HTMLCollection: 0,
              HTMLFormElement: 0,
              HTMLSelectElement: 0,
              MediaList: 0,
              MimeTypeArray: 0,
              NamedNodeMap: 0,
              NodeList: 1,
              PaintRequestList: 0,
              Plugin: 0,
              PluginArray: 0,
              SVGLengthList: 0,
              SVGNumberList: 0,
              SVGPathSegList: 0,
              SVGPointList: 0,
              SVGStringList: 0,
              SVGTransformList: 0,
              SourceBufferList: 0,
              StyleSheetList: 0,
              TextTrackCueList: 0,
              TextTrackList: 0,
              TouchList: 0
            };
          },
          7463: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var documentCreateElement = __webpack_require__2(5926);
            var classList = documentCreateElement("span").classList;
            var DOMTokenListPrototype = classList && classList.constructor && classList.constructor.prototype;
            module3.exports = DOMTokenListPrototype === Object.prototype ? void 0 : DOMTokenListPrototype;
          },
          1274: function(module3) {
            module3.exports = [
              "constructor",
              "hasOwnProperty",
              "isPrototypeOf",
              "propertyIsEnumerable",
              "toLocaleString",
              "toString",
              "valueOf"
            ];
          },
          2222: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var userAgent = __webpack_require__2(8060);
            var firefox = userAgent.match(/firefox\/(\d+)/i);
            module3.exports = !!firefox && +firefox[1];
          },
          4598: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var UA = __webpack_require__2(8060);
            module3.exports = /MSIE|Trident/.test(UA);
          },
          6168: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var userAgent = __webpack_require__2(8060);
            module3.exports = /ipad|iphone|ipod/i.test(userAgent) && typeof Pebble != "undefined";
          },
          6347: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var userAgent = __webpack_require__2(8060);
            module3.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent);
          },
          3940: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var ENVIRONMENT = __webpack_require__2(1078);
            module3.exports = ENVIRONMENT === "NODE";
          },
          1129: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var userAgent = __webpack_require__2(8060);
            module3.exports = /web0s(?!.*chrome)/i.test(userAgent);
          },
          8060: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var globalThis2 = __webpack_require__2(9117);
            var navigator2 = globalThis2.navigator;
            var userAgent = navigator2 && navigator2.userAgent;
            module3.exports = userAgent ? String(userAgent) : "";
          },
          3008: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var globalThis2 = __webpack_require__2(9117);
            var userAgent = __webpack_require__2(8060);
            var process = globalThis2.process;
            var Deno2 = globalThis2.Deno;
            var versions = process && process.versions || Deno2 && Deno2.version;
            var v8 = versions && versions.v8;
            var match, version;
            if (v8) {
              match = v8.split(".");
              version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
            }
            if (!version && userAgent) {
              match = userAgent.match(/Edge\/(\d+)/);
              if (!match || match[1] >= 74) {
                match = userAgent.match(/Chrome\/(\d+)/);
                if (match)
                  version = +match[1];
              }
            }
            module3.exports = version;
          },
          7340: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var userAgent = __webpack_require__2(8060);
            var webkit = userAgent.match(/AppleWebKit\/(\d+)\./);
            module3.exports = !!webkit && +webkit[1];
          },
          1078: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var globalThis2 = __webpack_require__2(9117);
            var userAgent = __webpack_require__2(8060);
            var classof = __webpack_require__2(8689);
            var userAgentStartsWith = function(string) {
              return userAgent.slice(0, string.length) === string;
            };
            module3.exports = function() {
              if (userAgentStartsWith("Bun/"))
                return "BUN";
              if (userAgentStartsWith("Cloudflare-Workers"))
                return "CLOUDFLARE";
              if (userAgentStartsWith("Deno/"))
                return "DENO";
              if (userAgentStartsWith("Node.js/"))
                return "NODE";
              if (globalThis2.Bun && typeof Bun.version == "string")
                return "BUN";
              if (globalThis2.Deno && typeof Deno.version == "object")
                return "DENO";
              if (classof(globalThis2.process) === "process")
                return "NODE";
              if (globalThis2.window && globalThis2.document)
                return "BROWSER";
              return "REST";
            }();
          },
          7308: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThis = __webpack_require__2(6881);
            var $Error = Error;
            var replace = uncurryThis("".replace);
            var TEST = function(arg) {
              return String(new $Error(arg).stack);
            }("zxcasd");
            var V8_OR_CHAKRA_STACK_ENTRY = /\n\s*at [^:]*:[^\n]*/;
            var IS_V8_OR_CHAKRA_STACK = V8_OR_CHAKRA_STACK_ENTRY.test(TEST);
            module3.exports = function(stack, dropEntries) {
              if (IS_V8_OR_CHAKRA_STACK && typeof stack == "string" && !$Error.prepareStackTrace) {
                while (dropEntries--)
                  stack = replace(stack, V8_OR_CHAKRA_STACK_ENTRY, "");
              }
              return stack;
            };
          },
          5382: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var createNonEnumerableProperty = __webpack_require__2(8088);
            var clearErrorStack = __webpack_require__2(7308);
            var ERROR_STACK_INSTALLABLE = __webpack_require__2(4582);
            var captureStackTrace = Error.captureStackTrace;
            module3.exports = function(error, C, stack, dropEntries) {
              if (ERROR_STACK_INSTALLABLE) {
                if (captureStackTrace)
                  captureStackTrace(error, C);
                else
                  createNonEnumerableProperty(error, "stack", clearErrorStack(stack, dropEntries));
              }
            };
          },
          4582: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var fails = __webpack_require__2(5234);
            var createPropertyDescriptor = __webpack_require__2(9123);
            module3.exports = !fails(function() {
              var error = new Error("a");
              if (!("stack" in error))
                return true;
              Object.defineProperty(error, "stack", createPropertyDescriptor(1, 7));
              return error.stack !== 7;
            });
          },
          5613: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var globalThis2 = __webpack_require__2(9117);
            var getOwnPropertyDescriptor = __webpack_require__2(9304).f;
            var createNonEnumerableProperty = __webpack_require__2(8088);
            var defineBuiltIn = __webpack_require__2(7509);
            var defineGlobalProperty = __webpack_require__2(4798);
            var copyConstructorProperties = __webpack_require__2(8657);
            var isForced = __webpack_require__2(8489);
            module3.exports = function(options, source) {
              var TARGET = options.target;
              var GLOBAL = options.global;
              var STATIC = options.stat;
              var FORCED, target, key, targetProperty, sourceProperty, descriptor;
              if (GLOBAL) {
                target = globalThis2;
              } else if (STATIC) {
                target = globalThis2[TARGET] || defineGlobalProperty(TARGET, {});
              } else {
                target = globalThis2[TARGET] && globalThis2[TARGET].prototype;
              }
              if (target)
                for (key in source) {
                  sourceProperty = source[key];
                  if (options.dontCallGetSet) {
                    descriptor = getOwnPropertyDescriptor(target, key);
                    targetProperty = descriptor && descriptor.value;
                  } else
                    targetProperty = target[key];
                  FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? "." : "#") + key, options.forced);
                  if (!FORCED && targetProperty !== void 0) {
                    if (typeof sourceProperty == typeof targetProperty)
                      continue;
                    copyConstructorProperties(sourceProperty, targetProperty);
                  }
                  if (options.sham || targetProperty && targetProperty.sham) {
                    createNonEnumerableProperty(sourceProperty, "sham", true);
                  }
                  defineBuiltIn(target, key, sourceProperty, options);
                }
            };
          },
          5234: function(module3) {
            module3.exports = function(exec) {
              try {
                return !!exec();
              } catch (error) {
                return true;
              }
            };
          },
          467: function(module3, __unused_webpack_exports, __webpack_require__2) {
            __webpack_require__2(8376);
            var call = __webpack_require__2(9944);
            var defineBuiltIn = __webpack_require__2(7509);
            var regexpExec = __webpack_require__2(9342);
            var fails = __webpack_require__2(5234);
            var wellKnownSymbol = __webpack_require__2(4282);
            var createNonEnumerableProperty = __webpack_require__2(8088);
            var SPECIES = wellKnownSymbol("species");
            var RegExpPrototype = RegExp.prototype;
            module3.exports = function(KEY, exec, FORCED, SHAM) {
              var SYMBOL = wellKnownSymbol(KEY);
              var DELEGATES_TO_SYMBOL = !fails(function() {
                var O = {};
                O[SYMBOL] = function() {
                  return 7;
                };
                return ""[KEY](O) !== 7;
              });
              var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function() {
                var execCalled = false;
                var re = /a/;
                if (KEY === "split") {
                  re = {};
                  re.constructor = {};
                  re.constructor[SPECIES] = function() {
                    return re;
                  };
                  re.flags = "";
                  re[SYMBOL] = /./[SYMBOL];
                }
                re.exec = function() {
                  execCalled = true;
                  return null;
                };
                re[SYMBOL]("");
                return !execCalled;
              });
              if (!DELEGATES_TO_SYMBOL || !DELEGATES_TO_EXEC || FORCED) {
                var nativeRegExpMethod = /./[SYMBOL];
                var methods = exec(SYMBOL, ""[KEY], function(nativeMethod, regexp, str, arg2, forceStringMethod) {
                  var $exec = regexp.exec;
                  if ($exec === regexpExec || $exec === RegExpPrototype.exec) {
                    if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
                      return { done: true, value: call(nativeRegExpMethod, regexp, str, arg2) };
                    }
                    return { done: true, value: call(nativeMethod, str, regexp, arg2) };
                  }
                  return { done: false };
                });
                defineBuiltIn(String.prototype, KEY, methods[0]);
                defineBuiltIn(RegExpPrototype, SYMBOL, methods[1]);
              }
              if (SHAM)
                createNonEnumerableProperty(RegExpPrototype[SYMBOL], "sham", true);
            };
          },
          336: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var isArray = __webpack_require__2(6719);
            var lengthOfArrayLike = __webpack_require__2(9389);
            var doesNotExceedSafeInteger = __webpack_require__2(2197);
            var bind = __webpack_require__2(5821);
            var flattenIntoArray = function(target, original, source, sourceLen, start, depth, mapper, thisArg) {
              var targetIndex = start;
              var sourceIndex = 0;
              var mapFn = mapper ? bind(mapper, thisArg) : false;
              var element, elementLen;
              while (sourceIndex < sourceLen) {
                if (sourceIndex in source) {
                  element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];
                  if (depth > 0 && isArray(element)) {
                    elementLen = lengthOfArrayLike(element);
                    targetIndex = flattenIntoArray(target, original, element, elementLen, targetIndex, depth - 1) - 1;
                  } else {
                    doesNotExceedSafeInteger(targetIndex + 1);
                    target[targetIndex] = element;
                  }
                  targetIndex++;
                }
                sourceIndex++;
              }
              return targetIndex;
            };
            module3.exports = flattenIntoArray;
          },
          9391: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var fails = __webpack_require__2(5234);
            module3.exports = !fails(function() {
              return Object.isExtensible(Object.preventExtensions({}));
            });
          },
          646: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var NATIVE_BIND = __webpack_require__2(9055);
            var FunctionPrototype = Function.prototype;
            var apply = FunctionPrototype.apply;
            var call = FunctionPrototype.call;
            module3.exports = typeof Reflect == "object" && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function() {
              return call.apply(apply, arguments);
            });
          },
          5821: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThis = __webpack_require__2(5691);
            var aCallable = __webpack_require__2(4977);
            var NATIVE_BIND = __webpack_require__2(9055);
            var bind = uncurryThis(uncurryThis.bind);
            module3.exports = function(fn, that) {
              aCallable(fn);
              return that === void 0 ? fn : NATIVE_BIND ? bind(fn, that) : function() {
                return fn.apply(that, arguments);
              };
            };
          },
          9055: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var fails = __webpack_require__2(5234);
            module3.exports = !fails(function() {
              var test = function() {
              }.bind();
              return typeof test != "function" || test.hasOwnProperty("prototype");
            });
          },
          6435: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThis = __webpack_require__2(6881);
            var aCallable = __webpack_require__2(4977);
            var isObject = __webpack_require__2(831);
            var hasOwn = __webpack_require__2(4418);
            var arraySlice = __webpack_require__2(7825);
            var NATIVE_BIND = __webpack_require__2(9055);
            var $Function = Function;
            var concat = uncurryThis([].concat);
            var join = uncurryThis([].join);
            var factories = {};
            var construct = function(C, argsLength, args) {
              if (!hasOwn(factories, argsLength)) {
                var list = [];
                var i = 0;
                for (; i < argsLength; i++)
                  list[i] = "a[" + i + "]";
                factories[argsLength] = $Function("C,a", "return new C(" + join(list, ",") + ")");
              }
              return factories[argsLength](C, args);
            };
            module3.exports = NATIVE_BIND ? $Function.bind : function bind(that) {
              var F = aCallable(this);
              var Prototype = F.prototype;
              var partArgs = arraySlice(arguments, 1);
              var boundFunction = function bound() {
                var args = concat(partArgs, arraySlice(arguments));
                return this instanceof boundFunction ? construct(F, args.length, args) : F.apply(that, args);
              };
              if (isObject(Prototype))
                boundFunction.prototype = Prototype;
              return boundFunction;
            };
          },
          9944: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var NATIVE_BIND = __webpack_require__2(9055);
            var call = Function.prototype.call;
            module3.exports = NATIVE_BIND ? call.bind(call) : function() {
              return call.apply(call, arguments);
            };
          },
          2735: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var DESCRIPTORS = __webpack_require__2(6893);
            var hasOwn = __webpack_require__2(4418);
            var FunctionPrototype = Function.prototype;
            var getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;
            var EXISTS = hasOwn(FunctionPrototype, "name");
            var PROPER = EXISTS && function something() {
            }.name === "something";
            var CONFIGURABLE = EXISTS && (!DESCRIPTORS || DESCRIPTORS && getDescriptor(FunctionPrototype, "name").configurable);
            module3.exports = {
              EXISTS,
              PROPER,
              CONFIGURABLE
            };
          },
          1025: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThis = __webpack_require__2(6881);
            var aCallable = __webpack_require__2(4977);
            module3.exports = function(object, key, method) {
              try {
                return uncurryThis(aCallable(Object.getOwnPropertyDescriptor(object, key)[method]));
              } catch (error) {
              }
            };
          },
          5691: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var classofRaw = __webpack_require__2(8689);
            var uncurryThis = __webpack_require__2(6881);
            module3.exports = function(fn) {
              if (classofRaw(fn) === "Function")
                return uncurryThis(fn);
            };
          },
          6881: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var NATIVE_BIND = __webpack_require__2(9055);
            var FunctionPrototype = Function.prototype;
            var call = FunctionPrototype.call;
            var uncurryThisWithBind = NATIVE_BIND && FunctionPrototype.bind.bind(call, call);
            module3.exports = NATIVE_BIND ? uncurryThisWithBind : function(fn) {
              return function() {
                return call.apply(fn, arguments);
              };
            };
          },
          5604: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var globalThis2 = __webpack_require__2(9117);
            var isCallable = __webpack_require__2(4188);
            var aFunction = function(argument) {
              return isCallable(argument) ? argument : void 0;
            };
            module3.exports = function(namespace, method) {
              return arguments.length < 2 ? aFunction(globalThis2[namespace]) : globalThis2[namespace] && globalThis2[namespace][method];
            };
          },
          9874: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var classof = __webpack_require__2(5438);
            var getMethod = __webpack_require__2(2913);
            var isNullOrUndefined = __webpack_require__2(4318);
            var Iterators = __webpack_require__2(9164);
            var wellKnownSymbol = __webpack_require__2(4282);
            var ITERATOR = wellKnownSymbol("iterator");
            module3.exports = function(it) {
              if (!isNullOrUndefined(it))
                return getMethod(it, ITERATOR) || getMethod(it, "@@iterator") || Iterators[classof(it)];
            };
          },
          2350: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var call = __webpack_require__2(9944);
            var aCallable = __webpack_require__2(4977);
            var anObject = __webpack_require__2(3770);
            var tryToString = __webpack_require__2(3174);
            var getIteratorMethod = __webpack_require__2(9874);
            var $TypeError = TypeError;
            module3.exports = function(argument, usingIterator) {
              var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;
              if (aCallable(iteratorMethod))
                return anObject(call(iteratorMethod, argument));
              throw new $TypeError(tryToString(argument) + " is not iterable");
            };
          },
          8254: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThis = __webpack_require__2(6881);
            var isArray = __webpack_require__2(6719);
            var isCallable = __webpack_require__2(4188);
            var classof = __webpack_require__2(8689);
            var toString = __webpack_require__2(2618);
            var push = uncurryThis([].push);
            module3.exports = function(replacer) {
              if (isCallable(replacer))
                return replacer;
              if (!isArray(replacer))
                return;
              var rawLength = replacer.length;
              var keys = [];
              for (var i = 0; i < rawLength; i++) {
                var element = replacer[i];
                if (typeof element == "string")
                  push(keys, element);
                else if (typeof element == "number" || classof(element) === "Number" || classof(element) === "String")
                  push(keys, toString(element));
              }
              var keysLength = keys.length;
              var root = true;
              return function(key, value) {
                if (root) {
                  root = false;
                  return value;
                }
                if (isArray(this))
                  return value;
                for (var j = 0; j < keysLength; j++)
                  if (keys[j] === key)
                    return value;
              };
            };
          },
          2913: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var aCallable = __webpack_require__2(4977);
            var isNullOrUndefined = __webpack_require__2(4318);
            module3.exports = function(V, P) {
              var func = V[P];
              return isNullOrUndefined(func) ? void 0 : aCallable(func);
            };
          },
          1113: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThis = __webpack_require__2(6881);
            var toObject = __webpack_require__2(3628);
            var floor = Math.floor;
            var charAt = uncurryThis("".charAt);
            var replace = uncurryThis("".replace);
            var stringSlice = uncurryThis("".slice);
            var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
            var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d{1,2})/g;
            module3.exports = function(matched, str, position, captures, namedCaptures, replacement) {
              var tailPos = position + matched.length;
              var m = captures.length;
              var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
              if (namedCaptures !== void 0) {
                namedCaptures = toObject(namedCaptures);
                symbols = SUBSTITUTION_SYMBOLS;
              }
              return replace(replacement, symbols, function(match, ch) {
                var capture;
                switch (charAt(ch, 0)) {
                  case "$":
                    return "$";
                  case "&":
                    return matched;
                  case "`":
                    return stringSlice(str, 0, position);
                  case "'":
                    return stringSlice(str, tailPos);
                  case "<":
                    capture = namedCaptures[stringSlice(ch, 1, -1)];
                    break;
                  default:
                    var n = +ch;
                    if (n === 0)
                      return match;
                    if (n > m) {
                      var f = floor(n / 10);
                      if (f === 0)
                        return match;
                      if (f <= m)
                        return captures[f - 1] === void 0 ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);
                      return match;
                    }
                    capture = captures[n - 1];
                }
                return capture === void 0 ? "" : capture;
              });
            };
          },
          9117: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var check = function(it) {
              return it && it.Math === Math && it;
            };
            module3.exports = check(typeof globalThis == "object" && globalThis) || check(typeof window == "object" && window) || check(typeof self == "object" && self) || check(typeof __webpack_require__2.g == "object" && __webpack_require__2.g) || check(typeof this == "object" && this) || function() {
              return this;
            }() || Function("return this")();
          },
          4418: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThis = __webpack_require__2(6881);
            var toObject = __webpack_require__2(3628);
            var hasOwnProperty = uncurryThis({}.hasOwnProperty);
            module3.exports = Object.hasOwn || function hasOwn(it, key) {
              return hasOwnProperty(toObject(it), key);
            };
          },
          7588: function(module3) {
            module3.exports = {};
          },
          3306: function(module3) {
            module3.exports = function(a, b) {
              try {
                arguments.length === 1 ? console.error(a) : console.error(a, b);
              } catch (error) {
              }
            };
          },
          7458: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var getBuiltIn = __webpack_require__2(5604);
            module3.exports = getBuiltIn("document", "documentElement");
          },
          9622: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var DESCRIPTORS = __webpack_require__2(6893);
            var fails = __webpack_require__2(5234);
            var createElement = __webpack_require__2(5926);
            module3.exports = !DESCRIPTORS && !fails(function() {
              return Object.defineProperty(createElement("div"), "a", {
                get: function() {
                  return 7;
                }
              }).a !== 7;
            });
          },
          7568: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThis = __webpack_require__2(6881);
            var fails = __webpack_require__2(5234);
            var classof = __webpack_require__2(8689);
            var $Object = Object;
            var split = uncurryThis("".split);
            module3.exports = fails(function() {
              return !$Object("z").propertyIsEnumerable(0);
            }) ? function(it) {
              return classof(it) === "String" ? split(it, "") : $Object(it);
            } : $Object;
          },
          4166: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var isCallable = __webpack_require__2(4188);
            var isObject = __webpack_require__2(831);
            var setPrototypeOf = __webpack_require__2(5054);
            module3.exports = function($this, dummy, Wrapper) {
              var NewTarget, NewTargetPrototype;
              if (setPrototypeOf && isCallable(NewTarget = dummy.constructor) && NewTarget !== Wrapper && isObject(NewTargetPrototype = NewTarget.prototype) && NewTargetPrototype !== Wrapper.prototype)
                setPrototypeOf($this, NewTargetPrototype);
              return $this;
            };
          },
          3029: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThis = __webpack_require__2(6881);
            var isCallable = __webpack_require__2(4188);
            var store = __webpack_require__2(2694);
            var functionToString = uncurryThis(Function.toString);
            if (!isCallable(store.inspectSource)) {
              store.inspectSource = function(it) {
                return functionToString(it);
              };
            }
            module3.exports = store.inspectSource;
          },
          8257: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var isObject = __webpack_require__2(831);
            var createNonEnumerableProperty = __webpack_require__2(8088);
            module3.exports = function(O, options) {
              if (isObject(options) && "cause" in options) {
                createNonEnumerableProperty(O, "cause", options.cause);
              }
            };
          },
          8118: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var uncurryThis = __webpack_require__2(6881);
            var hiddenKeys = __webpack_require__2(7588);
            var isObject = __webpack_require__2(831);
            var hasOwn = __webpack_require__2(4418);
            var defineProperty = __webpack_require__2(4466).f;
            var getOwnPropertyNamesModule = __webpack_require__2(5629);
            var getOwnPropertyNamesExternalModule = __webpack_require__2(3701);
            var isExtensible = __webpack_require__2(1927);
            var uid = __webpack_require__2(6209);
            var FREEZING = __webpack_require__2(9391);
            var REQUIRED = false;
            var METADATA = uid("meta");
            var id = 0;
            var setMetadata = function(it) {
              defineProperty(it, METADATA, { value: {
                objectID: "O" + id++,
                weakData: {}
              } });
            };
            var fastKey = function(it, create) {
              if (!isObject(it))
                return typeof it == "symbol" ? it : (typeof it == "string" ? "S" : "P") + it;
              if (!hasOwn(it, METADATA)) {
                if (!isExtensible(it))
                  return "F";
                if (!create)
                  return "E";
                setMetadata(it);
              }
              return it[METADATA].objectID;
            };
            var getWeakData = function(it, create) {
              if (!hasOwn(it, METADATA)) {
                if (!isExtensible(it))
                  return true;
                if (!create)
                  return false;
                setMetadata(it);
              }
              return it[METADATA].weakData;
            };
            var onFreeze = function(it) {
              if (FREEZING && REQUIRED && isExtensible(it) && !hasOwn(it, METADATA))
                setMetadata(it);
              return it;
            };
            var enable = function() {
              meta.enable = function() {
              };
              REQUIRED = true;
              var getOwnPropertyNames = getOwnPropertyNamesModule.f;
              var splice = uncurryThis([].splice);
              var test = {};
              test[METADATA] = 1;
              if (getOwnPropertyNames(test).length) {
                getOwnPropertyNamesModule.f = function(it) {
                  var result = getOwnPropertyNames(it);
                  for (var i = 0, length = result.length; i < length; i++) {
                    if (result[i] === METADATA) {
                      splice(result, i, 1);
                      break;
                    }
                  }
                  return result;
                };
                $({ target: "Object", stat: true, forced: true }, {
                  getOwnPropertyNames: getOwnPropertyNamesExternalModule.f
                });
              }
            };
            var meta = module3.exports = {
              enable,
              fastKey,
              getWeakData,
              onFreeze
            };
            hiddenKeys[METADATA] = true;
          },
          3086: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var NATIVE_WEAK_MAP = __webpack_require__2(5945);
            var globalThis2 = __webpack_require__2(9117);
            var isObject = __webpack_require__2(831);
            var createNonEnumerableProperty = __webpack_require__2(8088);
            var hasOwn = __webpack_require__2(4418);
            var shared = __webpack_require__2(2694);
            var sharedKey = __webpack_require__2(168);
            var hiddenKeys = __webpack_require__2(7588);
            var OBJECT_ALREADY_INITIALIZED = "Object already initialized";
            var TypeError2 = globalThis2.TypeError;
            var WeakMap2 = globalThis2.WeakMap;
            var set, get, has;
            var enforce = function(it) {
              return has(it) ? get(it) : set(it, {});
            };
            var getterFor = function(TYPE) {
              return function(it) {
                var state;
                if (!isObject(it) || (state = get(it)).type !== TYPE) {
                  throw new TypeError2("Incompatible receiver, " + TYPE + " required");
                }
                return state;
              };
            };
            if (NATIVE_WEAK_MAP || shared.state) {
              var store = shared.state || (shared.state = new WeakMap2());
              store.get = store.get;
              store.has = store.has;
              store.set = store.set;
              set = function(it, metadata) {
                if (store.has(it))
                  throw new TypeError2(OBJECT_ALREADY_INITIALIZED);
                metadata.facade = it;
                store.set(it, metadata);
                return metadata;
              };
              get = function(it) {
                return store.get(it) || {};
              };
              has = function(it) {
                return store.has(it);
              };
            } else {
              var STATE = sharedKey("state");
              hiddenKeys[STATE] = true;
              set = function(it, metadata) {
                if (hasOwn(it, STATE))
                  throw new TypeError2(OBJECT_ALREADY_INITIALIZED);
                metadata.facade = it;
                createNonEnumerableProperty(it, STATE, metadata);
                return metadata;
              };
              get = function(it) {
                return hasOwn(it, STATE) ? it[STATE] : {};
              };
              has = function(it) {
                return hasOwn(it, STATE);
              };
            }
            module3.exports = {
              set,
              get,
              has,
              enforce,
              getterFor
            };
          },
          8146: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var wellKnownSymbol = __webpack_require__2(4282);
            var Iterators = __webpack_require__2(9164);
            var ITERATOR = wellKnownSymbol("iterator");
            var ArrayPrototype = Array.prototype;
            module3.exports = function(it) {
              return it !== void 0 && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
            };
          },
          6719: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var classof = __webpack_require__2(8689);
            module3.exports = Array.isArray || function isArray(argument) {
              return classof(argument) === "Array";
            };
          },
          4188: function(module3) {
            var documentAll = typeof document == "object" && document.all;
            module3.exports = typeof documentAll == "undefined" && documentAll !== void 0 ? function(argument) {
              return typeof argument == "function" || argument === documentAll;
            } : function(argument) {
              return typeof argument == "function";
            };
          },
          866: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThis = __webpack_require__2(6881);
            var fails = __webpack_require__2(5234);
            var isCallable = __webpack_require__2(4188);
            var classof = __webpack_require__2(5438);
            var getBuiltIn = __webpack_require__2(5604);
            var inspectSource = __webpack_require__2(3029);
            var noop = function() {
            };
            var construct = getBuiltIn("Reflect", "construct");
            var constructorRegExp = /^\s*(?:class|function)\b/;
            var exec = uncurryThis(constructorRegExp.exec);
            var INCORRECT_TO_STRING = !constructorRegExp.test(noop);
            var isConstructorModern = function isConstructor(argument) {
              if (!isCallable(argument))
                return false;
              try {
                construct(noop, [], argument);
                return true;
              } catch (error) {
                return false;
              }
            };
            var isConstructorLegacy = function isConstructor(argument) {
              if (!isCallable(argument))
                return false;
              switch (classof(argument)) {
                case "AsyncFunction":
                case "GeneratorFunction":
                case "AsyncGeneratorFunction":
                  return false;
              }
              try {
                return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
              } catch (error) {
                return true;
              }
            };
            isConstructorLegacy.sham = true;
            module3.exports = !construct || fails(function() {
              var called;
              return isConstructorModern(isConstructorModern.call) || !isConstructorModern(Object) || !isConstructorModern(function() {
                called = true;
              }) || called;
            }) ? isConstructorLegacy : isConstructorModern;
          },
          8708: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var hasOwn = __webpack_require__2(4418);
            module3.exports = function(descriptor) {
              return descriptor !== void 0 && (hasOwn(descriptor, "value") || hasOwn(descriptor, "writable"));
            };
          },
          8489: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var fails = __webpack_require__2(5234);
            var isCallable = __webpack_require__2(4188);
            var replacement = /#|\.prototype\./;
            var isForced = function(feature, detection) {
              var value = data[normalize(feature)];
              return value === POLYFILL ? true : value === NATIVE ? false : isCallable(detection) ? fails(detection) : !!detection;
            };
            var normalize = isForced.normalize = function(string) {
              return String(string).replace(replacement, ".").toLowerCase();
            };
            var data = isForced.data = {};
            var NATIVE = isForced.NATIVE = "N";
            var POLYFILL = isForced.POLYFILL = "P";
            module3.exports = isForced;
          },
          4318: function(module3) {
            module3.exports = function(it) {
              return it === null || it === void 0;
            };
          },
          831: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var isCallable = __webpack_require__2(4188);
            module3.exports = function(it) {
              return typeof it == "object" ? it !== null : isCallable(it);
            };
          },
          6712: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var isObject = __webpack_require__2(831);
            module3.exports = function(argument) {
              return isObject(argument) || argument === null;
            };
          },
          1942: function(module3) {
            module3.exports = false;
          },
          473: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var isObject = __webpack_require__2(831);
            var classof = __webpack_require__2(8689);
            var wellKnownSymbol = __webpack_require__2(4282);
            var MATCH = wellKnownSymbol("match");
            module3.exports = function(it) {
              var isRegExp;
              return isObject(it) && ((isRegExp = it[MATCH]) !== void 0 ? !!isRegExp : classof(it) === "RegExp");
            };
          },
          6032: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var getBuiltIn = __webpack_require__2(5604);
            var isCallable = __webpack_require__2(4188);
            var isPrototypeOf = __webpack_require__2(4578);
            var USE_SYMBOL_AS_UID = __webpack_require__2(9809);
            var $Object = Object;
            module3.exports = USE_SYMBOL_AS_UID ? function(it) {
              return typeof it == "symbol";
            } : function(it) {
              var $Symbol = getBuiltIn("Symbol");
              return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));
            };
          },
          8873: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var bind = __webpack_require__2(5821);
            var call = __webpack_require__2(9944);
            var anObject = __webpack_require__2(3770);
            var tryToString = __webpack_require__2(3174);
            var isArrayIteratorMethod = __webpack_require__2(8146);
            var lengthOfArrayLike = __webpack_require__2(9389);
            var isPrototypeOf = __webpack_require__2(4578);
            var getIterator = __webpack_require__2(2350);
            var getIteratorMethod = __webpack_require__2(9874);
            var iteratorClose = __webpack_require__2(8500);
            var $TypeError = TypeError;
            var Result = function(stopped, result) {
              this.stopped = stopped;
              this.result = result;
            };
            var ResultPrototype = Result.prototype;
            module3.exports = function(iterable, unboundFunction, options) {
              var that = options && options.that;
              var AS_ENTRIES = !!(options && options.AS_ENTRIES);
              var IS_RECORD = !!(options && options.IS_RECORD);
              var IS_ITERATOR = !!(options && options.IS_ITERATOR);
              var INTERRUPTED = !!(options && options.INTERRUPTED);
              var fn = bind(unboundFunction, that);
              var iterator, iterFn, index, length, result, next, step;
              var stop = function(condition) {
                if (iterator)
                  iteratorClose(iterator, "normal", condition);
                return new Result(true, condition);
              };
              var callFn = function(value) {
                if (AS_ENTRIES) {
                  anObject(value);
                  return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
                }
                return INTERRUPTED ? fn(value, stop) : fn(value);
              };
              if (IS_RECORD) {
                iterator = iterable.iterator;
              } else if (IS_ITERATOR) {
                iterator = iterable;
              } else {
                iterFn = getIteratorMethod(iterable);
                if (!iterFn)
                  throw new $TypeError(tryToString(iterable) + " is not iterable");
                if (isArrayIteratorMethod(iterFn)) {
                  for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {
                    result = callFn(iterable[index]);
                    if (result && isPrototypeOf(ResultPrototype, result))
                      return result;
                  }
                  return new Result(false);
                }
                iterator = getIterator(iterable, iterFn);
              }
              next = IS_RECORD ? iterable.next : iterator.next;
              while (!(step = call(next, iterator)).done) {
                try {
                  result = callFn(step.value);
                } catch (error) {
                  iteratorClose(iterator, "throw", error);
                }
                if (typeof result == "object" && result && isPrototypeOf(ResultPrototype, result))
                  return result;
              }
              return new Result(false);
            };
          },
          8500: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var call = __webpack_require__2(9944);
            var anObject = __webpack_require__2(3770);
            var getMethod = __webpack_require__2(2913);
            module3.exports = function(iterator, kind, value) {
              var innerResult, innerError;
              anObject(iterator);
              try {
                innerResult = getMethod(iterator, "return");
                if (!innerResult) {
                  if (kind === "throw")
                    throw value;
                  return value;
                }
                innerResult = call(innerResult, iterator);
              } catch (error) {
                innerError = true;
                innerResult = error;
              }
              if (kind === "throw")
                throw value;
              if (innerError)
                throw innerResult;
              anObject(innerResult);
              return value;
            };
          },
          9383: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var IteratorPrototype = __webpack_require__2(2037).IteratorPrototype;
            var create = __webpack_require__2(7065);
            var createPropertyDescriptor = __webpack_require__2(9123);
            var setToStringTag = __webpack_require__2(3754);
            var Iterators = __webpack_require__2(9164);
            var returnThis = function() {
              return this;
            };
            module3.exports = function(IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
              var TO_STRING_TAG = NAME + " Iterator";
              IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });
              setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
              Iterators[TO_STRING_TAG] = returnThis;
              return IteratorConstructor;
            };
          },
          3217: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var call = __webpack_require__2(9944);
            var IS_PURE = __webpack_require__2(1942);
            var FunctionName = __webpack_require__2(2735);
            var isCallable = __webpack_require__2(4188);
            var createIteratorConstructor = __webpack_require__2(9383);
            var getPrototypeOf = __webpack_require__2(1786);
            var setPrototypeOf = __webpack_require__2(5054);
            var setToStringTag = __webpack_require__2(3754);
            var createNonEnumerableProperty = __webpack_require__2(8088);
            var defineBuiltIn = __webpack_require__2(7509);
            var wellKnownSymbol = __webpack_require__2(4282);
            var Iterators = __webpack_require__2(9164);
            var IteratorsCore = __webpack_require__2(2037);
            var PROPER_FUNCTION_NAME = FunctionName.PROPER;
            var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
            var IteratorPrototype = IteratorsCore.IteratorPrototype;
            var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
            var ITERATOR = wellKnownSymbol("iterator");
            var KEYS = "keys";
            var VALUES = "values";
            var ENTRIES = "entries";
            var returnThis = function() {
              return this;
            };
            module3.exports = function(Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
              createIteratorConstructor(IteratorConstructor, NAME, next);
              var getIterationMethod = function(KIND) {
                if (KIND === DEFAULT && defaultIterator)
                  return defaultIterator;
                if (!BUGGY_SAFARI_ITERATORS && KIND && KIND in IterablePrototype)
                  return IterablePrototype[KIND];
                switch (KIND) {
                  case KEYS:
                    return function keys() {
                      return new IteratorConstructor(this, KIND);
                    };
                  case VALUES:
                    return function values() {
                      return new IteratorConstructor(this, KIND);
                    };
                  case ENTRIES:
                    return function entries() {
                      return new IteratorConstructor(this, KIND);
                    };
                }
                return function() {
                  return new IteratorConstructor(this);
                };
              };
              var TO_STRING_TAG = NAME + " Iterator";
              var INCORRECT_VALUES_NAME = false;
              var IterablePrototype = Iterable.prototype;
              var nativeIterator = IterablePrototype[ITERATOR] || IterablePrototype["@@iterator"] || DEFAULT && IterablePrototype[DEFAULT];
              var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
              var anyNativeIterator = NAME === "Array" ? IterablePrototype.entries || nativeIterator : nativeIterator;
              var CurrentIteratorPrototype, methods, KEY;
              if (anyNativeIterator) {
                CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
                if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
                  if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
                    if (setPrototypeOf) {
                      setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
                    } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {
                      defineBuiltIn(CurrentIteratorPrototype, ITERATOR, returnThis);
                    }
                  }
                  setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
                  if (IS_PURE)
                    Iterators[TO_STRING_TAG] = returnThis;
                }
              }
              if (PROPER_FUNCTION_NAME && DEFAULT === VALUES && nativeIterator && nativeIterator.name !== VALUES) {
                if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {
                  createNonEnumerableProperty(IterablePrototype, "name", VALUES);
                } else {
                  INCORRECT_VALUES_NAME = true;
                  defaultIterator = function values() {
                    return call(nativeIterator, this);
                  };
                }
              }
              if (DEFAULT) {
                methods = {
                  values: getIterationMethod(VALUES),
                  keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
                  entries: getIterationMethod(ENTRIES)
                };
                if (FORCED)
                  for (KEY in methods) {
                    if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
                      defineBuiltIn(IterablePrototype, KEY, methods[KEY]);
                    }
                  }
                else
                  $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
              }
              if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
                defineBuiltIn(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });
              }
              Iterators[NAME] = defaultIterator;
              return methods;
            };
          },
          2037: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var fails = __webpack_require__2(5234);
            var isCallable = __webpack_require__2(4188);
            var isObject = __webpack_require__2(831);
            var create = __webpack_require__2(7065);
            var getPrototypeOf = __webpack_require__2(1786);
            var defineBuiltIn = __webpack_require__2(7509);
            var wellKnownSymbol = __webpack_require__2(4282);
            var IS_PURE = __webpack_require__2(1942);
            var ITERATOR = wellKnownSymbol("iterator");
            var BUGGY_SAFARI_ITERATORS = false;
            var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;
            if ([].keys) {
              arrayIterator = [].keys();
              if (!("next" in arrayIterator))
                BUGGY_SAFARI_ITERATORS = true;
              else {
                PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
                if (PrototypeOfArrayIteratorPrototype !== Object.prototype)
                  IteratorPrototype = PrototypeOfArrayIteratorPrototype;
              }
            }
            var NEW_ITERATOR_PROTOTYPE = !isObject(IteratorPrototype) || fails(function() {
              var test = {};
              return IteratorPrototype[ITERATOR].call(test) !== test;
            });
            if (NEW_ITERATOR_PROTOTYPE)
              IteratorPrototype = {};
            else if (IS_PURE)
              IteratorPrototype = create(IteratorPrototype);
            if (!isCallable(IteratorPrototype[ITERATOR])) {
              defineBuiltIn(IteratorPrototype, ITERATOR, function() {
                return this;
              });
            }
            module3.exports = {
              IteratorPrototype,
              BUGGY_SAFARI_ITERATORS
            };
          },
          9164: function(module3) {
            module3.exports = {};
          },
          9389: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var toLength = __webpack_require__2(7611);
            module3.exports = function(obj) {
              return toLength(obj.length);
            };
          },
          4530: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThis = __webpack_require__2(6881);
            var fails = __webpack_require__2(5234);
            var isCallable = __webpack_require__2(4188);
            var hasOwn = __webpack_require__2(4418);
            var DESCRIPTORS = __webpack_require__2(6893);
            var CONFIGURABLE_FUNCTION_NAME = __webpack_require__2(2735).CONFIGURABLE;
            var inspectSource = __webpack_require__2(3029);
            var InternalStateModule = __webpack_require__2(3086);
            var enforceInternalState = InternalStateModule.enforce;
            var getInternalState = InternalStateModule.get;
            var $String = String;
            var defineProperty = Object.defineProperty;
            var stringSlice = uncurryThis("".slice);
            var replace = uncurryThis("".replace);
            var join = uncurryThis([].join);
            var CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function() {
              return defineProperty(function() {
              }, "length", { value: 8 }).length !== 8;
            });
            var TEMPLATE = String(String).split("String");
            var makeBuiltIn = module3.exports = function(value, name, options) {
              if (stringSlice($String(name), 0, 7) === "Symbol(") {
                name = "[" + replace($String(name), /^Symbol\(([^)]*)\).*$/, "$1") + "]";
              }
              if (options && options.getter)
                name = "get " + name;
              if (options && options.setter)
                name = "set " + name;
              if (!hasOwn(value, "name") || CONFIGURABLE_FUNCTION_NAME && value.name !== name) {
                if (DESCRIPTORS)
                  defineProperty(value, "name", { value: name, configurable: true });
                else
                  value.name = name;
              }
              if (CONFIGURABLE_LENGTH && options && hasOwn(options, "arity") && value.length !== options.arity) {
                defineProperty(value, "length", { value: options.arity });
              }
              try {
                if (options && hasOwn(options, "constructor") && options.constructor) {
                  if (DESCRIPTORS)
                    defineProperty(value, "prototype", { writable: false });
                } else if (value.prototype)
                  value.prototype = void 0;
              } catch (error) {
              }
              var state = enforceInternalState(value);
              if (!hasOwn(state, "source")) {
                state.source = join(TEMPLATE, typeof name == "string" ? name : "");
              }
              return value;
            };
            Function.prototype.toString = makeBuiltIn(function toString() {
              return isCallable(this) && getInternalState(this).source || inspectSource(this);
            }, "toString");
          },
          142: function(module3) {
            var ceil = Math.ceil;
            var floor = Math.floor;
            module3.exports = Math.trunc || function trunc(x) {
              var n = +x;
              return (n > 0 ? floor : ceil)(n);
            };
          },
          1982: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var globalThis2 = __webpack_require__2(9117);
            var safeGetBuiltIn = __webpack_require__2(5268);
            var bind = __webpack_require__2(5821);
            var macrotask = __webpack_require__2(3474).set;
            var Queue = __webpack_require__2(8648);
            var IS_IOS = __webpack_require__2(6347);
            var IS_IOS_PEBBLE = __webpack_require__2(6168);
            var IS_WEBOS_WEBKIT = __webpack_require__2(1129);
            var IS_NODE = __webpack_require__2(3940);
            var MutationObserver = globalThis2.MutationObserver || globalThis2.WebKitMutationObserver;
            var document2 = globalThis2.document;
            var process = globalThis2.process;
            var Promise2 = globalThis2.Promise;
            var microtask = safeGetBuiltIn("queueMicrotask");
            var notify, toggle, node, promise, then;
            if (!microtask) {
              var queue = new Queue();
              var flush = function() {
                var parent, fn;
                if (IS_NODE && (parent = process.domain))
                  parent.exit();
                while (fn = queue.get())
                  try {
                    fn();
                  } catch (error) {
                    if (queue.head)
                      notify();
                    throw error;
                  }
                if (parent)
                  parent.enter();
              };
              if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document2) {
                toggle = true;
                node = document2.createTextNode("");
                new MutationObserver(flush).observe(node, { characterData: true });
                notify = function() {
                  node.data = toggle = !toggle;
                };
              } else if (!IS_IOS_PEBBLE && Promise2 && Promise2.resolve) {
                promise = Promise2.resolve(void 0);
                promise.constructor = Promise2;
                then = bind(promise.then, promise);
                notify = function() {
                  then(flush);
                };
              } else if (IS_NODE) {
                notify = function() {
                  process.nextTick(flush);
                };
              } else {
                macrotask = bind(macrotask, globalThis2);
                notify = function() {
                  macrotask(flush);
                };
              }
              microtask = function(fn) {
                if (!queue.head)
                  notify();
                queue.add(fn);
              };
            }
            module3.exports = microtask;
          },
          9444: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var aCallable = __webpack_require__2(4977);
            var $TypeError = TypeError;
            var PromiseCapability = function(C) {
              var resolve, reject;
              this.promise = new C(function($$resolve, $$reject) {
                if (resolve !== void 0 || reject !== void 0)
                  throw new $TypeError("Bad Promise constructor");
                resolve = $$resolve;
                reject = $$reject;
              });
              this.resolve = aCallable(resolve);
              this.reject = aCallable(reject);
            };
            module3.exports.f = function(C) {
              return new PromiseCapability(C);
            };
          },
          9866: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var toString = __webpack_require__2(2618);
            module3.exports = function(argument, $default) {
              return argument === void 0 ? arguments.length < 2 ? "" : $default : toString(argument);
            };
          },
          836: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var isRegExp = __webpack_require__2(473);
            var $TypeError = TypeError;
            module3.exports = function(it) {
              if (isRegExp(it)) {
                throw new $TypeError("The method doesn't accept regular expressions");
              }
              return it;
            };
          },
          9456: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var DESCRIPTORS = __webpack_require__2(6893);
            var uncurryThis = __webpack_require__2(6881);
            var call = __webpack_require__2(9944);
            var fails = __webpack_require__2(5234);
            var objectKeys = __webpack_require__2(7137);
            var getOwnPropertySymbolsModule = __webpack_require__2(156);
            var propertyIsEnumerableModule = __webpack_require__2(4416);
            var toObject = __webpack_require__2(3628);
            var IndexedObject = __webpack_require__2(7568);
            var $assign = Object.assign;
            var defineProperty = Object.defineProperty;
            var concat = uncurryThis([].concat);
            module3.exports = !$assign || fails(function() {
              if (DESCRIPTORS && $assign({ b: 1 }, $assign(defineProperty({}, "a", {
                enumerable: true,
                get: function() {
                  defineProperty(this, "b", {
                    value: 3,
                    enumerable: false
                  });
                }
              }), { b: 2 })).b !== 1)
                return true;
              var A = {};
              var B = {};
              var symbol = Symbol("assign detection");
              var alphabet = "abcdefghijklmnopqrst";
              A[symbol] = 7;
              alphabet.split("").forEach(function(chr) {
                B[chr] = chr;
              });
              return $assign({}, A)[symbol] !== 7 || objectKeys($assign({}, B)).join("") !== alphabet;
            }) ? function assign(target, source) {
              var T = toObject(target);
              var argumentsLength = arguments.length;
              var index = 1;
              var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
              var propertyIsEnumerable = propertyIsEnumerableModule.f;
              while (argumentsLength > index) {
                var S = IndexedObject(arguments[index++]);
                var keys = getOwnPropertySymbols ? concat(objectKeys(S), getOwnPropertySymbols(S)) : objectKeys(S);
                var length = keys.length;
                var j = 0;
                var key;
                while (length > j) {
                  key = keys[j++];
                  if (!DESCRIPTORS || call(propertyIsEnumerable, S, key))
                    T[key] = S[key];
                }
              }
              return T;
            } : $assign;
          },
          7065: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var anObject = __webpack_require__2(3770);
            var definePropertiesModule = __webpack_require__2(30);
            var enumBugKeys = __webpack_require__2(1274);
            var hiddenKeys = __webpack_require__2(7588);
            var html = __webpack_require__2(7458);
            var documentCreateElement = __webpack_require__2(5926);
            var sharedKey = __webpack_require__2(168);
            var GT = ">";
            var LT = "<";
            var PROTOTYPE = "prototype";
            var SCRIPT = "script";
            var IE_PROTO = sharedKey("IE_PROTO");
            var EmptyConstructor = function() {
            };
            var scriptTag = function(content) {
              return LT + SCRIPT + GT + content + LT + "/" + SCRIPT + GT;
            };
            var NullProtoObjectViaActiveX = function(activeXDocument2) {
              activeXDocument2.write(scriptTag(""));
              activeXDocument2.close();
              var temp = activeXDocument2.parentWindow.Object;
              activeXDocument2 = null;
              return temp;
            };
            var NullProtoObjectViaIFrame = function() {
              var iframe = documentCreateElement("iframe");
              var JS = "java" + SCRIPT + ":";
              var iframeDocument;
              iframe.style.display = "none";
              html.appendChild(iframe);
              iframe.src = String(JS);
              iframeDocument = iframe.contentWindow.document;
              iframeDocument.open();
              iframeDocument.write(scriptTag("document.F=Object"));
              iframeDocument.close();
              return iframeDocument.F;
            };
            var activeXDocument;
            var NullProtoObject = function() {
              try {
                activeXDocument = new ActiveXObject("htmlfile");
              } catch (error) {
              }
              NullProtoObject = typeof document != "undefined" ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument);
              var length = enumBugKeys.length;
              while (length--)
                delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
              return NullProtoObject();
            };
            hiddenKeys[IE_PROTO] = true;
            module3.exports = Object.create || function create(O, Properties) {
              var result;
              if (O !== null) {
                EmptyConstructor[PROTOTYPE] = anObject(O);
                result = new EmptyConstructor();
                EmptyConstructor[PROTOTYPE] = null;
                result[IE_PROTO] = O;
              } else
                result = NullProtoObject();
              return Properties === void 0 ? result : definePropertiesModule.f(result, Properties);
            };
          },
          30: function(__unused_webpack_module, exports3, __webpack_require__2) {
            var DESCRIPTORS = __webpack_require__2(6893);
            var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__2(3315);
            var definePropertyModule = __webpack_require__2(4466);
            var anObject = __webpack_require__2(3770);
            var toIndexedObject = __webpack_require__2(380);
            var objectKeys = __webpack_require__2(7137);
            exports3.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
              anObject(O);
              var props = toIndexedObject(Properties);
              var keys = objectKeys(Properties);
              var length = keys.length;
              var index = 0;
              var key;
              while (length > index)
                definePropertyModule.f(O, key = keys[index++], props[key]);
              return O;
            };
          },
          4466: function(__unused_webpack_module, exports3, __webpack_require__2) {
            var DESCRIPTORS = __webpack_require__2(6893);
            var IE8_DOM_DEFINE = __webpack_require__2(9622);
            var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__2(3315);
            var anObject = __webpack_require__2(3770);
            var toPropertyKey = __webpack_require__2(2344);
            var $TypeError = TypeError;
            var $defineProperty = Object.defineProperty;
            var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
            var ENUMERABLE = "enumerable";
            var CONFIGURABLE = "configurable";
            var WRITABLE = "writable";
            exports3.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
              anObject(O);
              P = toPropertyKey(P);
              anObject(Attributes);
              if (typeof O === "function" && P === "prototype" && "value" in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
                var current = $getOwnPropertyDescriptor(O, P);
                if (current && current[WRITABLE]) {
                  O[P] = Attributes.value;
                  Attributes = {
                    configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
                    enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
                    writable: false
                  };
                }
              }
              return $defineProperty(O, P, Attributes);
            } : $defineProperty : function defineProperty(O, P, Attributes) {
              anObject(O);
              P = toPropertyKey(P);
              anObject(Attributes);
              if (IE8_DOM_DEFINE)
                try {
                  return $defineProperty(O, P, Attributes);
                } catch (error) {
                }
              if ("get" in Attributes || "set" in Attributes)
                throw new $TypeError("Accessors not supported");
              if ("value" in Attributes)
                O[P] = Attributes.value;
              return O;
            };
          },
          9304: function(__unused_webpack_module, exports3, __webpack_require__2) {
            var DESCRIPTORS = __webpack_require__2(6893);
            var call = __webpack_require__2(9944);
            var propertyIsEnumerableModule = __webpack_require__2(4416);
            var createPropertyDescriptor = __webpack_require__2(9123);
            var toIndexedObject = __webpack_require__2(380);
            var toPropertyKey = __webpack_require__2(2344);
            var hasOwn = __webpack_require__2(4418);
            var IE8_DOM_DEFINE = __webpack_require__2(9622);
            var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
            exports3.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
              O = toIndexedObject(O);
              P = toPropertyKey(P);
              if (IE8_DOM_DEFINE)
                try {
                  return $getOwnPropertyDescriptor(O, P);
                } catch (error) {
                }
              if (hasOwn(O, P))
                return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
            };
          },
          3701: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var classof = __webpack_require__2(8689);
            var toIndexedObject = __webpack_require__2(380);
            var $getOwnPropertyNames = __webpack_require__2(5629).f;
            var arraySlice = __webpack_require__2(7825);
            var windowNames = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
            var getWindowNames = function(it) {
              try {
                return $getOwnPropertyNames(it);
              } catch (error) {
                return arraySlice(windowNames);
              }
            };
            module3.exports.f = function getOwnPropertyNames(it) {
              return windowNames && classof(it) === "Window" ? getWindowNames(it) : $getOwnPropertyNames(toIndexedObject(it));
            };
          },
          5629: function(__unused_webpack_module, exports3, __webpack_require__2) {
            var internalObjectKeys = __webpack_require__2(1843);
            var enumBugKeys = __webpack_require__2(1274);
            var hiddenKeys = enumBugKeys.concat("length", "prototype");
            exports3.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
              return internalObjectKeys(O, hiddenKeys);
            };
          },
          156: function(__unused_webpack_module, exports3) {
            exports3.f = Object.getOwnPropertySymbols;
          },
          1786: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var hasOwn = __webpack_require__2(4418);
            var isCallable = __webpack_require__2(4188);
            var toObject = __webpack_require__2(3628);
            var sharedKey = __webpack_require__2(168);
            var CORRECT_PROTOTYPE_GETTER = __webpack_require__2(680);
            var IE_PROTO = sharedKey("IE_PROTO");
            var $Object = Object;
            var ObjectPrototype = $Object.prototype;
            module3.exports = CORRECT_PROTOTYPE_GETTER ? $Object.getPrototypeOf : function(O) {
              var object = toObject(O);
              if (hasOwn(object, IE_PROTO))
                return object[IE_PROTO];
              var constructor = object.constructor;
              if (isCallable(constructor) && object instanceof constructor) {
                return constructor.prototype;
              }
              return object instanceof $Object ? ObjectPrototype : null;
            };
          },
          1927: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var fails = __webpack_require__2(5234);
            var isObject = __webpack_require__2(831);
            var classof = __webpack_require__2(8689);
            var ARRAY_BUFFER_NON_EXTENSIBLE = __webpack_require__2(5469);
            var $isExtensible = Object.isExtensible;
            var FAILS_ON_PRIMITIVES = fails(function() {
            });
            module3.exports = FAILS_ON_PRIMITIVES || ARRAY_BUFFER_NON_EXTENSIBLE ? function isExtensible(it) {
              if (!isObject(it))
                return false;
              if (ARRAY_BUFFER_NON_EXTENSIBLE && classof(it) === "ArrayBuffer")
                return false;
              return $isExtensible ? $isExtensible(it) : true;
            } : $isExtensible;
          },
          4578: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThis = __webpack_require__2(6881);
            module3.exports = uncurryThis({}.isPrototypeOf);
          },
          1843: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThis = __webpack_require__2(6881);
            var hasOwn = __webpack_require__2(4418);
            var toIndexedObject = __webpack_require__2(380);
            var indexOf = __webpack_require__2(1458).indexOf;
            var hiddenKeys = __webpack_require__2(7588);
            var push = uncurryThis([].push);
            module3.exports = function(object, names) {
              var O = toIndexedObject(object);
              var i = 0;
              var result = [];
              var key;
              for (key in O)
                !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);
              while (names.length > i)
                if (hasOwn(O, key = names[i++])) {
                  ~indexOf(result, key) || push(result, key);
                }
              return result;
            };
          },
          7137: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var internalObjectKeys = __webpack_require__2(1843);
            var enumBugKeys = __webpack_require__2(1274);
            module3.exports = Object.keys || function keys(O) {
              return internalObjectKeys(O, enumBugKeys);
            };
          },
          4416: function(__unused_webpack_module, exports3) {
            var $propertyIsEnumerable = {}.propertyIsEnumerable;
            var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
            var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);
            exports3.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
              var descriptor = getOwnPropertyDescriptor(this, V);
              return !!descriptor && descriptor.enumerable;
            } : $propertyIsEnumerable;
          },
          5054: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThisAccessor = __webpack_require__2(1025);
            var isObject = __webpack_require__2(831);
            var requireObjectCoercible = __webpack_require__2(9509);
            var aPossiblePrototype = __webpack_require__2(4121);
            module3.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
              var CORRECT_SETTER = false;
              var test = {};
              var setter;
              try {
                setter = uncurryThisAccessor(Object.prototype, "__proto__", "set");
                setter(test, []);
                CORRECT_SETTER = test instanceof Array;
              } catch (error) {
              }
              return function setPrototypeOf(O, proto) {
                requireObjectCoercible(O);
                aPossiblePrototype(proto);
                if (!isObject(O))
                  return O;
                if (CORRECT_SETTER)
                  setter(O, proto);
                else
                  O.__proto__ = proto;
                return O;
              };
            }() : void 0);
          },
          4844: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var DESCRIPTORS = __webpack_require__2(6893);
            var fails = __webpack_require__2(5234);
            var uncurryThis = __webpack_require__2(6881);
            var objectGetPrototypeOf = __webpack_require__2(1786);
            var objectKeys = __webpack_require__2(7137);
            var toIndexedObject = __webpack_require__2(380);
            var $propertyIsEnumerable = __webpack_require__2(4416).f;
            var propertyIsEnumerable = uncurryThis($propertyIsEnumerable);
            var push = uncurryThis([].push);
            var IE_BUG = DESCRIPTORS && fails(function() {
              var O = /* @__PURE__ */ Object.create(null);
              O[2] = 2;
              return !propertyIsEnumerable(O, 2);
            });
            var createMethod = function(TO_ENTRIES) {
              return function(it) {
                var O = toIndexedObject(it);
                var keys = objectKeys(O);
                var IE_WORKAROUND = IE_BUG && objectGetPrototypeOf(O) === null;
                var length = keys.length;
                var i = 0;
                var result = [];
                var key;
                while (length > i) {
                  key = keys[i++];
                  if (!DESCRIPTORS || (IE_WORKAROUND ? key in O : propertyIsEnumerable(O, key))) {
                    push(result, TO_ENTRIES ? [key, O[key]] : O[key]);
                  }
                }
                return result;
              };
            };
            module3.exports = {
              entries: createMethod(true),
              values: createMethod(false)
            };
          },
          2244: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var TO_STRING_TAG_SUPPORT = __webpack_require__2(9345);
            var classof = __webpack_require__2(5438);
            module3.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
              return "[object " + classof(this) + "]";
            };
          },
          2287: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var call = __webpack_require__2(9944);
            var isCallable = __webpack_require__2(4188);
            var isObject = __webpack_require__2(831);
            var $TypeError = TypeError;
            module3.exports = function(input, pref) {
              var fn, val;
              if (pref === "string" && isCallable(fn = input.toString) && !isObject(val = call(fn, input)))
                return val;
              if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input)))
                return val;
              if (pref !== "string" && isCallable(fn = input.toString) && !isObject(val = call(fn, input)))
                return val;
              throw new $TypeError("Can't convert object to primitive value");
            };
          },
          3168: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var getBuiltIn = __webpack_require__2(5604);
            var uncurryThis = __webpack_require__2(6881);
            var getOwnPropertyNamesModule = __webpack_require__2(5629);
            var getOwnPropertySymbolsModule = __webpack_require__2(156);
            var anObject = __webpack_require__2(3770);
            var concat = uncurryThis([].concat);
            module3.exports = getBuiltIn("Reflect", "ownKeys") || function ownKeys(it) {
              var keys = getOwnPropertyNamesModule.f(anObject(it));
              var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
              return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
            };
          },
          9120: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var globalThis2 = __webpack_require__2(9117);
            module3.exports = globalThis2;
          },
          6042: function(module3) {
            module3.exports = function(exec) {
              try {
                return { error: false, value: exec() };
              } catch (error) {
                return { error: true, value: error };
              }
            };
          },
          7301: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var globalThis2 = __webpack_require__2(9117);
            var NativePromiseConstructor = __webpack_require__2(6453);
            var isCallable = __webpack_require__2(4188);
            var isForced = __webpack_require__2(8489);
            var inspectSource = __webpack_require__2(3029);
            var wellKnownSymbol = __webpack_require__2(4282);
            var ENVIRONMENT = __webpack_require__2(1078);
            var IS_PURE = __webpack_require__2(1942);
            var V8_VERSION = __webpack_require__2(3008);
            var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;
            var SPECIES = wellKnownSymbol("species");
            var SUBCLASSING = false;
            var NATIVE_PROMISE_REJECTION_EVENT = isCallable(globalThis2.PromiseRejectionEvent);
            var FORCED_PROMISE_CONSTRUCTOR = isForced("Promise", function() {
              var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(NativePromiseConstructor);
              var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(NativePromiseConstructor);
              if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66)
                return true;
              if (IS_PURE && !(NativePromisePrototype["catch"] && NativePromisePrototype["finally"]))
                return true;
              if (!V8_VERSION || V8_VERSION < 51 || !/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) {
                var promise = new NativePromiseConstructor(function(resolve) {
                  resolve(1);
                });
                var FakePromise = function(exec) {
                  exec(function() {
                  }, function() {
                  });
                };
                var constructor = promise.constructor = {};
                constructor[SPECIES] = FakePromise;
                SUBCLASSING = promise.then(function() {
                }) instanceof FakePromise;
                if (!SUBCLASSING)
                  return true;
              }
              return !GLOBAL_CORE_JS_PROMISE && (ENVIRONMENT === "BROWSER" || ENVIRONMENT === "DENO") && !NATIVE_PROMISE_REJECTION_EVENT;
            });
            module3.exports = {
              CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR,
              REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT,
              SUBCLASSING
            };
          },
          6453: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var globalThis2 = __webpack_require__2(9117);
            module3.exports = globalThis2.Promise;
          },
          8787: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var anObject = __webpack_require__2(3770);
            var isObject = __webpack_require__2(831);
            var newPromiseCapability = __webpack_require__2(9444);
            module3.exports = function(C, x) {
              anObject(C);
              if (isObject(x) && x.constructor === C)
                return x;
              var promiseCapability = newPromiseCapability.f(C);
              var resolve = promiseCapability.resolve;
              resolve(x);
              return promiseCapability.promise;
            };
          },
          6292: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var NativePromiseConstructor = __webpack_require__2(6453);
            var checkCorrectnessOfIteration = __webpack_require__2(7283);
            var FORCED_PROMISE_CONSTRUCTOR = __webpack_require__2(7301).CONSTRUCTOR;
            module3.exports = FORCED_PROMISE_CONSTRUCTOR || !checkCorrectnessOfIteration(function(iterable) {
              NativePromiseConstructor.all(iterable).then(void 0, function() {
              });
            });
          },
          8679: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var defineProperty = __webpack_require__2(4466).f;
            module3.exports = function(Target, Source, key) {
              key in Target || defineProperty(Target, key, {
                configurable: true,
                get: function() {
                  return Source[key];
                },
                set: function(it) {
                  Source[key] = it;
                }
              });
            };
          },
          8648: function(module3) {
            var Queue = function() {
              this.head = null;
              this.tail = null;
            };
            Queue.prototype = {
              add: function(item) {
                var entry = { item, next: null };
                var tail = this.tail;
                if (tail)
                  tail.next = entry;
                else
                  this.head = entry;
                this.tail = entry;
              },
              get: function() {
                var entry = this.head;
                if (entry) {
                  var next = this.head = entry.next;
                  if (next === null)
                    this.tail = null;
                  return entry.item;
                }
              }
            };
            module3.exports = Queue;
          },
          4721: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var call = __webpack_require__2(9944);
            var anObject = __webpack_require__2(3770);
            var isCallable = __webpack_require__2(4188);
            var classof = __webpack_require__2(8689);
            var regexpExec = __webpack_require__2(9342);
            var $TypeError = TypeError;
            module3.exports = function(R, S) {
              var exec = R.exec;
              if (isCallable(exec)) {
                var result = call(exec, R, S);
                if (result !== null)
                  anObject(result);
                return result;
              }
              if (classof(R) === "RegExp")
                return call(regexpExec, R, S);
              throw new $TypeError("RegExp#exec called on incompatible receiver");
            };
          },
          9342: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var call = __webpack_require__2(9944);
            var uncurryThis = __webpack_require__2(6881);
            var toString = __webpack_require__2(2618);
            var regexpFlags = __webpack_require__2(4932);
            var stickyHelpers = __webpack_require__2(5976);
            var shared = __webpack_require__2(746);
            var create = __webpack_require__2(7065);
            var getInternalState = __webpack_require__2(3086).get;
            var UNSUPPORTED_DOT_ALL = __webpack_require__2(6676);
            var UNSUPPORTED_NCG = __webpack_require__2(4609);
            var nativeReplace = shared("native-string-replace", String.prototype.replace);
            var nativeExec = RegExp.prototype.exec;
            var patchedExec = nativeExec;
            var charAt = uncurryThis("".charAt);
            var indexOf = uncurryThis("".indexOf);
            var replace = uncurryThis("".replace);
            var stringSlice = uncurryThis("".slice);
            var UPDATES_LAST_INDEX_WRONG = function() {
              var re1 = /a/;
              var re2 = /b*/g;
              call(nativeExec, re1, "a");
              call(nativeExec, re2, "a");
              return re1.lastIndex !== 0 || re2.lastIndex !== 0;
            }();
            var UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET;
            var NPCG_INCLUDED = /()??/.exec("")[1] !== void 0;
            var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;
            if (PATCH) {
              patchedExec = function exec(string) {
                var re = this;
                var state = getInternalState(re);
                var str = toString(string);
                var raw = state.raw;
                var result, reCopy, lastIndex, match, i, object, group;
                if (raw) {
                  raw.lastIndex = re.lastIndex;
                  result = call(patchedExec, raw, str);
                  re.lastIndex = raw.lastIndex;
                  return result;
                }
                var groups = state.groups;
                var sticky = UNSUPPORTED_Y && re.sticky;
                var flags = call(regexpFlags, re);
                var source = re.source;
                var charsAdded = 0;
                var strCopy = str;
                if (sticky) {
                  flags = replace(flags, "y", "");
                  if (indexOf(flags, "g") === -1) {
                    flags += "g";
                  }
                  strCopy = stringSlice(str, re.lastIndex);
                  if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt(str, re.lastIndex - 1) !== "\n")) {
                    source = "(?: " + source + ")";
                    strCopy = " " + strCopy;
                    charsAdded++;
                  }
                  reCopy = new RegExp("^(?:" + source + ")", flags);
                }
                if (NPCG_INCLUDED) {
                  reCopy = new RegExp("^" + source + "$(?!\\s)", flags);
                }
                if (UPDATES_LAST_INDEX_WRONG)
                  lastIndex = re.lastIndex;
                match = call(nativeExec, sticky ? reCopy : re, strCopy);
                if (sticky) {
                  if (match) {
                    match.input = stringSlice(match.input, charsAdded);
                    match[0] = stringSlice(match[0], charsAdded);
                    match.index = re.lastIndex;
                    re.lastIndex += match[0].length;
                  } else
                    re.lastIndex = 0;
                } else if (UPDATES_LAST_INDEX_WRONG && match) {
                  re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
                }
                if (NPCG_INCLUDED && match && match.length > 1) {
                  call(nativeReplace, match[0], reCopy, function() {
                    for (i = 1; i < arguments.length - 2; i++) {
                      if (arguments[i] === void 0)
                        match[i] = void 0;
                    }
                  });
                }
                if (match && groups) {
                  match.groups = object = create(null);
                  for (i = 0; i < groups.length; i++) {
                    group = groups[i];
                    object[group[0]] = match[group[1]];
                  }
                }
                return match;
              };
            }
            module3.exports = patchedExec;
          },
          4932: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var anObject = __webpack_require__2(3770);
            module3.exports = function() {
              var that = anObject(this);
              var result = "";
              if (that.hasIndices)
                result += "d";
              if (that.global)
                result += "g";
              if (that.ignoreCase)
                result += "i";
              if (that.multiline)
                result += "m";
              if (that.dotAll)
                result += "s";
              if (that.unicode)
                result += "u";
              if (that.unicodeSets)
                result += "v";
              if (that.sticky)
                result += "y";
              return result;
            };
          },
          3113: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var call = __webpack_require__2(9944);
            var hasOwn = __webpack_require__2(4418);
            var isPrototypeOf = __webpack_require__2(4578);
            var regExpFlags = __webpack_require__2(4932);
            var RegExpPrototype = RegExp.prototype;
            module3.exports = function(R) {
              var flags = R.flags;
              return flags === void 0 && !("flags" in RegExpPrototype) && !hasOwn(R, "flags") && isPrototypeOf(RegExpPrototype, R) ? call(regExpFlags, R) : flags;
            };
          },
          5976: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var fails = __webpack_require__2(5234);
            var globalThis2 = __webpack_require__2(9117);
            var $RegExp = globalThis2.RegExp;
            var UNSUPPORTED_Y = fails(function() {
              var re = $RegExp("a", "y");
              re.lastIndex = 2;
              return re.exec("abcd") !== null;
            });
            var MISSED_STICKY = UNSUPPORTED_Y || fails(function() {
              return !$RegExp("a", "y").sticky;
            });
            var BROKEN_CARET = UNSUPPORTED_Y || fails(function() {
              var re = $RegExp("^r", "gy");
              re.lastIndex = 2;
              return re.exec("str") !== null;
            });
            module3.exports = {
              BROKEN_CARET,
              MISSED_STICKY,
              UNSUPPORTED_Y
            };
          },
          6676: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var fails = __webpack_require__2(5234);
            var globalThis2 = __webpack_require__2(9117);
            var $RegExp = globalThis2.RegExp;
            module3.exports = fails(function() {
              var re = $RegExp(".", "s");
              return !(re.dotAll && re.test("\n") && re.flags === "s");
            });
          },
          4609: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var fails = __webpack_require__2(5234);
            var globalThis2 = __webpack_require__2(9117);
            var $RegExp = globalThis2.RegExp;
            module3.exports = fails(function() {
              var re = $RegExp("(?<a>b)", "g");
              return re.exec("b").groups.a !== "b" || "b".replace(re, "$<a>c") !== "bc";
            });
          },
          9509: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var isNullOrUndefined = __webpack_require__2(4318);
            var $TypeError = TypeError;
            module3.exports = function(it) {
              if (isNullOrUndefined(it))
                throw new $TypeError("Can't call method on " + it);
              return it;
            };
          },
          5268: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var globalThis2 = __webpack_require__2(9117);
            var DESCRIPTORS = __webpack_require__2(6893);
            var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
            module3.exports = function(name) {
              if (!DESCRIPTORS)
                return globalThis2[name];
              var descriptor = getOwnPropertyDescriptor(globalThis2, name);
              return descriptor && descriptor.value;
            };
          },
          7501: function(module3) {
            module3.exports = Object.is || function is(x, y) {
              return x === y ? x !== 0 || 1 / x === 1 / y : x !== x && y !== y;
            };
          },
          3900: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var getBuiltIn = __webpack_require__2(5604);
            var defineBuiltInAccessor = __webpack_require__2(997);
            var wellKnownSymbol = __webpack_require__2(4282);
            var DESCRIPTORS = __webpack_require__2(6893);
            var SPECIES = wellKnownSymbol("species");
            module3.exports = function(CONSTRUCTOR_NAME) {
              var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
              if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
                defineBuiltInAccessor(Constructor, SPECIES, {
                  configurable: true,
                  get: function() {
                    return this;
                  }
                });
              }
            };
          },
          3754: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var defineProperty = __webpack_require__2(4466).f;
            var hasOwn = __webpack_require__2(4418);
            var wellKnownSymbol = __webpack_require__2(4282);
            var TO_STRING_TAG = wellKnownSymbol("toStringTag");
            module3.exports = function(target, TAG, STATIC) {
              if (target && !STATIC)
                target = target.prototype;
              if (target && !hasOwn(target, TO_STRING_TAG)) {
                defineProperty(target, TO_STRING_TAG, { configurable: true, value: TAG });
              }
            };
          },
          168: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var shared = __webpack_require__2(746);
            var uid = __webpack_require__2(6209);
            var keys = shared("keys");
            module3.exports = function(key) {
              return keys[key] || (keys[key] = uid(key));
            };
          },
          2694: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var IS_PURE = __webpack_require__2(1942);
            var globalThis2 = __webpack_require__2(9117);
            var defineGlobalProperty = __webpack_require__2(4798);
            var SHARED = "__core-js_shared__";
            var store = module3.exports = globalThis2[SHARED] || defineGlobalProperty(SHARED, {});
            (store.versions || (store.versions = [])).push({
              version: "3.38.0",
              mode: IS_PURE ? "pure" : "global",
              copyright: "\xA9 2014-2024 Denis Pushkarev (zloirock.ru)",
              license: "https://github.com/zloirock/core-js/blob/v3.38.0/LICENSE",
              source: "https://github.com/zloirock/core-js"
            });
          },
          746: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var store = __webpack_require__2(2694);
            module3.exports = function(key, value) {
              return store[key] || (store[key] = value || {});
            };
          },
          7964: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var anObject = __webpack_require__2(3770);
            var aConstructor = __webpack_require__2(1361);
            var isNullOrUndefined = __webpack_require__2(4318);
            var wellKnownSymbol = __webpack_require__2(4282);
            var SPECIES = wellKnownSymbol("species");
            module3.exports = function(O, defaultConstructor) {
              var C = anObject(O).constructor;
              var S;
              return C === void 0 || isNullOrUndefined(S = anObject(C)[SPECIES]) ? defaultConstructor : aConstructor(S);
            };
          },
          4212: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThis = __webpack_require__2(6881);
            var toIntegerOrInfinity = __webpack_require__2(6744);
            var toString = __webpack_require__2(2618);
            var requireObjectCoercible = __webpack_require__2(9509);
            var charAt = uncurryThis("".charAt);
            var charCodeAt = uncurryThis("".charCodeAt);
            var stringSlice = uncurryThis("".slice);
            var createMethod = function(CONVERT_TO_STRING) {
              return function($this, pos) {
                var S = toString(requireObjectCoercible($this));
                var position = toIntegerOrInfinity(pos);
                var size = S.length;
                var first, second;
                if (position < 0 || position >= size)
                  return CONVERT_TO_STRING ? "" : void 0;
                first = charCodeAt(S, position);
                return first < 55296 || first > 56319 || position + 1 === size || (second = charCodeAt(S, position + 1)) < 56320 || second > 57343 ? CONVERT_TO_STRING ? charAt(S, position) : first : CONVERT_TO_STRING ? stringSlice(S, position, position + 2) : (first - 55296 << 10) + (second - 56320) + 65536;
              };
            };
            module3.exports = {
              codeAt: createMethod(false),
              charAt: createMethod(true)
            };
          },
          4686: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var userAgent = __webpack_require__2(8060);
            module3.exports = /Version\/10(?:\.\d+){1,2}(?: [\w./]+)?(?: Mobile\/\w+)? Safari\//.test(userAgent);
          },
          982: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThis = __webpack_require__2(6881);
            var toLength = __webpack_require__2(7611);
            var toString = __webpack_require__2(2618);
            var $repeat = __webpack_require__2(9380);
            var requireObjectCoercible = __webpack_require__2(9509);
            var repeat = uncurryThis($repeat);
            var stringSlice = uncurryThis("".slice);
            var ceil = Math.ceil;
            var createMethod = function(IS_END) {
              return function($this, maxLength, fillString) {
                var S = toString(requireObjectCoercible($this));
                var intMaxLength = toLength(maxLength);
                var stringLength = S.length;
                var fillStr = fillString === void 0 ? " " : toString(fillString);
                var fillLen, stringFiller;
                if (intMaxLength <= stringLength || fillStr === "")
                  return S;
                fillLen = intMaxLength - stringLength;
                stringFiller = repeat(fillStr, ceil(fillLen / fillStr.length));
                if (stringFiller.length > fillLen)
                  stringFiller = stringSlice(stringFiller, 0, fillLen);
                return IS_END ? S + stringFiller : stringFiller + S;
              };
            };
            module3.exports = {
              start: createMethod(false),
              end: createMethod(true)
            };
          },
          9380: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var toIntegerOrInfinity = __webpack_require__2(6744);
            var toString = __webpack_require__2(2618);
            var requireObjectCoercible = __webpack_require__2(9509);
            var $RangeError = RangeError;
            module3.exports = function repeat(count) {
              var str = toString(requireObjectCoercible(this));
              var result = "";
              var n = toIntegerOrInfinity(count);
              if (n < 0 || n === Infinity)
                throw new $RangeError("Wrong number of repetitions");
              for (; n > 0; (n >>>= 1) && (str += str))
                if (n & 1)
                  result += str;
              return result;
            };
          },
          2771: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThis = __webpack_require__2(6881);
            var requireObjectCoercible = __webpack_require__2(9509);
            var toString = __webpack_require__2(2618);
            var whitespaces = __webpack_require__2(9209);
            var replace = uncurryThis("".replace);
            var ltrim = RegExp("^[" + whitespaces + "]+");
            var rtrim = RegExp("(^|[^" + whitespaces + "])[" + whitespaces + "]+$");
            var createMethod = function(TYPE) {
              return function($this) {
                var string = toString(requireObjectCoercible($this));
                if (TYPE & 1)
                  string = replace(string, ltrim, "");
                if (TYPE & 2)
                  string = replace(string, rtrim, "$1");
                return string;
              };
            };
            module3.exports = {
              start: createMethod(1),
              end: createMethod(2),
              trim: createMethod(3)
            };
          },
          8944: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var V8_VERSION = __webpack_require__2(3008);
            var fails = __webpack_require__2(5234);
            var globalThis2 = __webpack_require__2(9117);
            var $String = globalThis2.String;
            module3.exports = !!Object.getOwnPropertySymbols && !fails(function() {
              var symbol = Symbol("symbol detection");
              return !$String(symbol) || !(Object(symbol) instanceof Symbol) || !Symbol.sham && V8_VERSION && V8_VERSION < 41;
            });
          },
          7093: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var call = __webpack_require__2(9944);
            var getBuiltIn = __webpack_require__2(5604);
            var wellKnownSymbol = __webpack_require__2(4282);
            var defineBuiltIn = __webpack_require__2(7509);
            module3.exports = function() {
              var Symbol2 = getBuiltIn("Symbol");
              var SymbolPrototype = Symbol2 && Symbol2.prototype;
              var valueOf = SymbolPrototype && SymbolPrototype.valueOf;
              var TO_PRIMITIVE = wellKnownSymbol("toPrimitive");
              if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) {
                defineBuiltIn(SymbolPrototype, TO_PRIMITIVE, function(hint) {
                  return call(valueOf, this);
                }, { arity: 1 });
              }
            };
          },
          6577: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var NATIVE_SYMBOL = __webpack_require__2(8944);
            module3.exports = NATIVE_SYMBOL && !!Symbol["for"] && !!Symbol.keyFor;
          },
          3474: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var globalThis2 = __webpack_require__2(9117);
            var apply = __webpack_require__2(646);
            var bind = __webpack_require__2(5821);
            var isCallable = __webpack_require__2(4188);
            var hasOwn = __webpack_require__2(4418);
            var fails = __webpack_require__2(5234);
            var html = __webpack_require__2(7458);
            var arraySlice = __webpack_require__2(7825);
            var createElement = __webpack_require__2(5926);
            var validateArgumentsLength = __webpack_require__2(9445);
            var IS_IOS = __webpack_require__2(6347);
            var IS_NODE = __webpack_require__2(3940);
            var set = globalThis2.setImmediate;
            var clear = globalThis2.clearImmediate;
            var process = globalThis2.process;
            var Dispatch = globalThis2.Dispatch;
            var Function2 = globalThis2.Function;
            var MessageChannel = globalThis2.MessageChannel;
            var String2 = globalThis2.String;
            var counter = 0;
            var queue = {};
            var ONREADYSTATECHANGE = "onreadystatechange";
            var $location, defer, channel, port;
            fails(function() {
              $location = globalThis2.location;
            });
            var run = function(id) {
              if (hasOwn(queue, id)) {
                var fn = queue[id];
                delete queue[id];
                fn();
              }
            };
            var runner = function(id) {
              return function() {
                run(id);
              };
            };
            var eventListener = function(event) {
              run(event.data);
            };
            var globalPostMessageDefer = function(id) {
              globalThis2.postMessage(String2(id), $location.protocol + "//" + $location.host);
            };
            if (!set || !clear) {
              set = function setImmediate(handler) {
                validateArgumentsLength(arguments.length, 1);
                var fn = isCallable(handler) ? handler : Function2(handler);
                var args = arraySlice(arguments, 1);
                queue[++counter] = function() {
                  apply(fn, void 0, args);
                };
                defer(counter);
                return counter;
              };
              clear = function clearImmediate(id) {
                delete queue[id];
              };
              if (IS_NODE) {
                defer = function(id) {
                  process.nextTick(runner(id));
                };
              } else if (Dispatch && Dispatch.now) {
                defer = function(id) {
                  Dispatch.now(runner(id));
                };
              } else if (MessageChannel && !IS_IOS) {
                channel = new MessageChannel();
                port = channel.port2;
                channel.port1.onmessage = eventListener;
                defer = bind(port.postMessage, port);
              } else if (globalThis2.addEventListener && isCallable(globalThis2.postMessage) && !globalThis2.importScripts && $location && $location.protocol !== "file:" && !fails(globalPostMessageDefer)) {
                defer = globalPostMessageDefer;
                globalThis2.addEventListener("message", eventListener, false);
              } else if (ONREADYSTATECHANGE in createElement("script")) {
                defer = function(id) {
                  html.appendChild(createElement("script"))[ONREADYSTATECHANGE] = function() {
                    html.removeChild(this);
                    run(id);
                  };
                };
              } else {
                defer = function(id) {
                  setTimeout(runner(id), 0);
                };
              }
            }
            module3.exports = {
              set,
              clear
            };
          },
          5881: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThis = __webpack_require__2(6881);
            module3.exports = uncurryThis(1 .valueOf);
          },
          675: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var toIntegerOrInfinity = __webpack_require__2(6744);
            var max = Math.max;
            var min = Math.min;
            module3.exports = function(index, length) {
              var integer = toIntegerOrInfinity(index);
              return integer < 0 ? max(integer + length, 0) : min(integer, length);
            };
          },
          380: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var IndexedObject = __webpack_require__2(7568);
            var requireObjectCoercible = __webpack_require__2(9509);
            module3.exports = function(it) {
              return IndexedObject(requireObjectCoercible(it));
            };
          },
          6744: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var trunc = __webpack_require__2(142);
            module3.exports = function(argument) {
              var number = +argument;
              return number !== number || number === 0 ? 0 : trunc(number);
            };
          },
          7611: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var toIntegerOrInfinity = __webpack_require__2(6744);
            var min = Math.min;
            module3.exports = function(argument) {
              var len = toIntegerOrInfinity(argument);
              return len > 0 ? min(len, 9007199254740991) : 0;
            };
          },
          3628: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var requireObjectCoercible = __webpack_require__2(9509);
            var $Object = Object;
            module3.exports = function(argument) {
              return $Object(requireObjectCoercible(argument));
            };
          },
          290: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var call = __webpack_require__2(9944);
            var isObject = __webpack_require__2(831);
            var isSymbol = __webpack_require__2(6032);
            var getMethod = __webpack_require__2(2913);
            var ordinaryToPrimitive = __webpack_require__2(2287);
            var wellKnownSymbol = __webpack_require__2(4282);
            var $TypeError = TypeError;
            var TO_PRIMITIVE = wellKnownSymbol("toPrimitive");
            module3.exports = function(input, pref) {
              if (!isObject(input) || isSymbol(input))
                return input;
              var exoticToPrim = getMethod(input, TO_PRIMITIVE);
              var result;
              if (exoticToPrim) {
                if (pref === void 0)
                  pref = "default";
                result = call(exoticToPrim, input, pref);
                if (!isObject(result) || isSymbol(result))
                  return result;
                throw new $TypeError("Can't convert object to primitive value");
              }
              if (pref === void 0)
                pref = "number";
              return ordinaryToPrimitive(input, pref);
            };
          },
          2344: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var toPrimitive = __webpack_require__2(290);
            var isSymbol = __webpack_require__2(6032);
            module3.exports = function(argument) {
              var key = toPrimitive(argument, "string");
              return isSymbol(key) ? key : key + "";
            };
          },
          9345: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var wellKnownSymbol = __webpack_require__2(4282);
            var TO_STRING_TAG = wellKnownSymbol("toStringTag");
            var test = {};
            test[TO_STRING_TAG] = "z";
            module3.exports = String(test) === "[object z]";
          },
          2618: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var classof = __webpack_require__2(5438);
            var $String = String;
            module3.exports = function(argument) {
              if (classof(argument) === "Symbol")
                throw new TypeError("Cannot convert a Symbol value to a string");
              return $String(argument);
            };
          },
          3174: function(module3) {
            var $String = String;
            module3.exports = function(argument) {
              try {
                return $String(argument);
              } catch (error) {
                return "Object";
              }
            };
          },
          6209: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var uncurryThis = __webpack_require__2(6881);
            var id = 0;
            var postfix = Math.random();
            var toString = uncurryThis(1 .toString);
            module3.exports = function(key) {
              return "Symbol(" + (key === void 0 ? "" : key) + ")_" + toString(++id + postfix, 36);
            };
          },
          9809: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var NATIVE_SYMBOL = __webpack_require__2(8944);
            module3.exports = NATIVE_SYMBOL && !Symbol.sham && typeof Symbol.iterator == "symbol";
          },
          3315: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var DESCRIPTORS = __webpack_require__2(6893);
            var fails = __webpack_require__2(5234);
            module3.exports = DESCRIPTORS && fails(function() {
              return Object.defineProperty(function() {
              }, "prototype", {
                value: 42,
                writable: false
              }).prototype !== 42;
            });
          },
          9445: function(module3) {
            var $TypeError = TypeError;
            module3.exports = function(passed, required) {
              if (passed < required)
                throw new $TypeError("Not enough arguments");
              return passed;
            };
          },
          5945: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var globalThis2 = __webpack_require__2(9117);
            var isCallable = __webpack_require__2(4188);
            var WeakMap2 = globalThis2.WeakMap;
            module3.exports = isCallable(WeakMap2) && /native code/.test(String(WeakMap2));
          },
          2860: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var path = __webpack_require__2(9120);
            var hasOwn = __webpack_require__2(4418);
            var wrappedWellKnownSymbolModule = __webpack_require__2(346);
            var defineProperty = __webpack_require__2(4466).f;
            module3.exports = function(NAME) {
              var Symbol2 = path.Symbol || (path.Symbol = {});
              if (!hasOwn(Symbol2, NAME))
                defineProperty(Symbol2, NAME, {
                  value: wrappedWellKnownSymbolModule.f(NAME)
                });
            };
          },
          346: function(__unused_webpack_module, exports3, __webpack_require__2) {
            var wellKnownSymbol = __webpack_require__2(4282);
            exports3.f = wellKnownSymbol;
          },
          4282: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var globalThis2 = __webpack_require__2(9117);
            var shared = __webpack_require__2(746);
            var hasOwn = __webpack_require__2(4418);
            var uid = __webpack_require__2(6209);
            var NATIVE_SYMBOL = __webpack_require__2(8944);
            var USE_SYMBOL_AS_UID = __webpack_require__2(9809);
            var Symbol2 = globalThis2.Symbol;
            var WellKnownSymbolsStore = shared("wks");
            var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol2["for"] || Symbol2 : Symbol2 && Symbol2.withoutSetter || uid;
            module3.exports = function(name) {
              if (!hasOwn(WellKnownSymbolsStore, name)) {
                WellKnownSymbolsStore[name] = NATIVE_SYMBOL && hasOwn(Symbol2, name) ? Symbol2[name] : createWellKnownSymbol("Symbol." + name);
              }
              return WellKnownSymbolsStore[name];
            };
          },
          9209: function(module3) {
            module3.exports = "	\n\v\f\r \xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";
          },
          6208: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var getBuiltIn = __webpack_require__2(5604);
            var hasOwn = __webpack_require__2(4418);
            var createNonEnumerableProperty = __webpack_require__2(8088);
            var isPrototypeOf = __webpack_require__2(4578);
            var setPrototypeOf = __webpack_require__2(5054);
            var copyConstructorProperties = __webpack_require__2(8657);
            var proxyAccessor = __webpack_require__2(8679);
            var inheritIfRequired = __webpack_require__2(4166);
            var normalizeStringArgument = __webpack_require__2(9866);
            var installErrorCause = __webpack_require__2(8257);
            var installErrorStack = __webpack_require__2(5382);
            var DESCRIPTORS = __webpack_require__2(6893);
            var IS_PURE = __webpack_require__2(1942);
            module3.exports = function(FULL_NAME, wrapper, FORCED, IS_AGGREGATE_ERROR) {
              var STACK_TRACE_LIMIT = "stackTraceLimit";
              var OPTIONS_POSITION = IS_AGGREGATE_ERROR ? 2 : 1;
              var path = FULL_NAME.split(".");
              var ERROR_NAME = path[path.length - 1];
              var OriginalError = getBuiltIn.apply(null, path);
              if (!OriginalError)
                return;
              var OriginalErrorPrototype = OriginalError.prototype;
              if (!IS_PURE && hasOwn(OriginalErrorPrototype, "cause"))
                delete OriginalErrorPrototype.cause;
              if (!FORCED)
                return OriginalError;
              var BaseError = getBuiltIn("Error");
              var WrappedError = wrapper(function(a, b) {
                var message = normalizeStringArgument(IS_AGGREGATE_ERROR ? b : a, void 0);
                var result = IS_AGGREGATE_ERROR ? new OriginalError(a) : new OriginalError();
                if (message !== void 0)
                  createNonEnumerableProperty(result, "message", message);
                installErrorStack(result, WrappedError, result.stack, 2);
                if (this && isPrototypeOf(OriginalErrorPrototype, this))
                  inheritIfRequired(result, this, WrappedError);
                if (arguments.length > OPTIONS_POSITION)
                  installErrorCause(result, arguments[OPTIONS_POSITION]);
                return result;
              });
              WrappedError.prototype = OriginalErrorPrototype;
              if (ERROR_NAME !== "Error") {
                if (setPrototypeOf)
                  setPrototypeOf(WrappedError, BaseError);
                else
                  copyConstructorProperties(WrappedError, BaseError, { name: true });
              } else if (DESCRIPTORS && STACK_TRACE_LIMIT in OriginalError) {
                proxyAccessor(WrappedError, OriginalError, STACK_TRACE_LIMIT);
                proxyAccessor(WrappedError, OriginalError, "prepareStackTrace");
              }
              copyConstructorProperties(WrappedError, OriginalError);
              if (!IS_PURE)
                try {
                  if (OriginalErrorPrototype.name !== ERROR_NAME) {
                    createNonEnumerableProperty(OriginalErrorPrototype, "name", ERROR_NAME);
                  }
                  OriginalErrorPrototype.constructor = WrappedError;
                } catch (error) {
                }
              return WrappedError;
            };
          },
          6411: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var fails = __webpack_require__2(5234);
            var isArray = __webpack_require__2(6719);
            var isObject = __webpack_require__2(831);
            var toObject = __webpack_require__2(3628);
            var lengthOfArrayLike = __webpack_require__2(9389);
            var doesNotExceedSafeInteger = __webpack_require__2(2197);
            var createProperty = __webpack_require__2(4417);
            var arraySpeciesCreate = __webpack_require__2(5022);
            var arrayMethodHasSpeciesSupport = __webpack_require__2(378);
            var wellKnownSymbol = __webpack_require__2(4282);
            var V8_VERSION = __webpack_require__2(3008);
            var IS_CONCAT_SPREADABLE = wellKnownSymbol("isConcatSpreadable");
            var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function() {
              var array = [];
              array[IS_CONCAT_SPREADABLE] = false;
              return array.concat()[0] !== array;
            });
            var isConcatSpreadable = function(O) {
              if (!isObject(O))
                return false;
              var spreadable = O[IS_CONCAT_SPREADABLE];
              return spreadable !== void 0 ? !!spreadable : isArray(O);
            };
            var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !arrayMethodHasSpeciesSupport("concat");
            $({ target: "Array", proto: true, arity: 1, forced: FORCED }, {
              concat: function concat(arg) {
                var O = toObject(this);
                var A = arraySpeciesCreate(O, 0);
                var n = 0;
                var i, k, length, len, E;
                for (i = -1, length = arguments.length; i < length; i++) {
                  E = i === -1 ? O : arguments[i];
                  if (isConcatSpreadable(E)) {
                    len = lengthOfArrayLike(E);
                    doesNotExceedSafeInteger(n + len);
                    for (k = 0; k < len; k++, n++)
                      if (k in E)
                        createProperty(A, n, E[k]);
                  } else {
                    doesNotExceedSafeInteger(n + 1);
                    createProperty(A, n++, E);
                  }
                }
                A.length = n;
                return A;
              }
            });
          },
          3294: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var fill = __webpack_require__2(8150);
            var addToUnscopables = __webpack_require__2(5458);
            $({ target: "Array", proto: true }, {
              fill
            });
            addToUnscopables("fill");
          },
          5305: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var $filter = __webpack_require__2(4104).filter;
            var arrayMethodHasSpeciesSupport = __webpack_require__2(378);
            var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("filter");
            $({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT }, {
              filter: function filter(callbackfn) {
                return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
              }
            });
          },
          6501: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var $findIndex = __webpack_require__2(4104).findIndex;
            var addToUnscopables = __webpack_require__2(5458);
            var FIND_INDEX = "findIndex";
            var SKIPS_HOLES = true;
            if (FIND_INDEX in [])
              Array(1)[FIND_INDEX](function() {
                SKIPS_HOLES = false;
              });
            $({ target: "Array", proto: true, forced: SKIPS_HOLES }, {
              findIndex: function findIndex(callbackfn) {
                return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
              }
            });
            addToUnscopables(FIND_INDEX);
          },
          3252: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var $find = __webpack_require__2(4104).find;
            var addToUnscopables = __webpack_require__2(5458);
            var FIND = "find";
            var SKIPS_HOLES = true;
            if (FIND in [])
              Array(1)[FIND](function() {
                SKIPS_HOLES = false;
              });
            $({ target: "Array", proto: true, forced: SKIPS_HOLES }, {
              find: function find(callbackfn) {
                return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
              }
            });
            addToUnscopables(FIND);
          },
          7011: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var flattenIntoArray = __webpack_require__2(336);
            var aCallable = __webpack_require__2(4977);
            var toObject = __webpack_require__2(3628);
            var lengthOfArrayLike = __webpack_require__2(9389);
            var arraySpeciesCreate = __webpack_require__2(5022);
            $({ target: "Array", proto: true }, {
              flatMap: function flatMap(callbackfn) {
                var O = toObject(this);
                var sourceLen = lengthOfArrayLike(O);
                var A;
                aCallable(callbackfn);
                A = arraySpeciesCreate(O, 0);
                A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
                return A;
              }
            });
          },
          1264: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var flattenIntoArray = __webpack_require__2(336);
            var toObject = __webpack_require__2(3628);
            var lengthOfArrayLike = __webpack_require__2(9389);
            var toIntegerOrInfinity = __webpack_require__2(6744);
            var arraySpeciesCreate = __webpack_require__2(5022);
            $({ target: "Array", proto: true }, {
              flat: function flat() {
                var depthArg = arguments.length ? arguments[0] : void 0;
                var O = toObject(this);
                var sourceLen = lengthOfArrayLike(O);
                var A = arraySpeciesCreate(O, 0);
                A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === void 0 ? 1 : toIntegerOrInfinity(depthArg));
                return A;
              }
            });
          },
          1875: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var from = __webpack_require__2(6859);
            var checkCorrectnessOfIteration = __webpack_require__2(7283);
            var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function(iterable) {
              Array.from(iterable);
            });
            $({ target: "Array", stat: true, forced: INCORRECT_ITERATION }, {
              from
            });
          },
          2234: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var $includes = __webpack_require__2(1458).includes;
            var fails = __webpack_require__2(5234);
            var addToUnscopables = __webpack_require__2(5458);
            var BROKEN_ON_SPARSE = fails(function() {
              return !Array(1).includes();
            });
            $({ target: "Array", proto: true, forced: BROKEN_ON_SPARSE }, {
              includes: function includes(el) {
                return $includes(this, el, arguments.length > 1 ? arguments[1] : void 0);
              }
            });
            addToUnscopables("includes");
          },
          3873: function(module3, __unused_webpack_exports, __webpack_require__2) {
            var toIndexedObject = __webpack_require__2(380);
            var addToUnscopables = __webpack_require__2(5458);
            var Iterators = __webpack_require__2(9164);
            var InternalStateModule = __webpack_require__2(3086);
            var defineProperty = __webpack_require__2(4466).f;
            var defineIterator = __webpack_require__2(3217);
            var createIterResultObject = __webpack_require__2(6224);
            var IS_PURE = __webpack_require__2(1942);
            var DESCRIPTORS = __webpack_require__2(6893);
            var ARRAY_ITERATOR = "Array Iterator";
            var setInternalState = InternalStateModule.set;
            var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);
            module3.exports = defineIterator(Array, "Array", function(iterated, kind) {
              setInternalState(this, {
                type: ARRAY_ITERATOR,
                target: toIndexedObject(iterated),
                index: 0,
                kind
              });
            }, function() {
              var state = getInternalState(this);
              var target = state.target;
              var index = state.index++;
              if (!target || index >= target.length) {
                state.target = void 0;
                return createIterResultObject(void 0, true);
              }
              switch (state.kind) {
                case "keys":
                  return createIterResultObject(index, false);
                case "values":
                  return createIterResultObject(target[index], false);
              }
              return createIterResultObject([index, target[index]], false);
            }, "values");
            var values = Iterators.Arguments = Iterators.Array;
            addToUnscopables("keys");
            addToUnscopables("values");
            addToUnscopables("entries");
            if (!IS_PURE && DESCRIPTORS && values.name !== "values")
              try {
                defineProperty(values, "name", { value: "values" });
              } catch (error) {
              }
          },
          4147: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var uncurryThis = __webpack_require__2(6881);
            var IndexedObject = __webpack_require__2(7568);
            var toIndexedObject = __webpack_require__2(380);
            var arrayMethodIsStrict = __webpack_require__2(5397);
            var nativeJoin = uncurryThis([].join);
            var ES3_STRINGS = IndexedObject !== Object;
            var FORCED = ES3_STRINGS || !arrayMethodIsStrict("join", ",");
            $({ target: "Array", proto: true, forced: FORCED }, {
              join: function join(separator) {
                return nativeJoin(toIndexedObject(this), separator === void 0 ? "," : separator);
              }
            });
          },
          8981: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var $map = __webpack_require__2(4104).map;
            var arrayMethodHasSpeciesSupport = __webpack_require__2(378);
            var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("map");
            $({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT }, {
              map: function map(callbackfn) {
                return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : void 0);
              }
            });
          },
          6569: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var isArray = __webpack_require__2(6719);
            var isConstructor = __webpack_require__2(866);
            var isObject = __webpack_require__2(831);
            var toAbsoluteIndex = __webpack_require__2(675);
            var lengthOfArrayLike = __webpack_require__2(9389);
            var toIndexedObject = __webpack_require__2(380);
            var createProperty = __webpack_require__2(4417);
            var wellKnownSymbol = __webpack_require__2(4282);
            var arrayMethodHasSpeciesSupport = __webpack_require__2(378);
            var nativeSlice = __webpack_require__2(7825);
            var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("slice");
            var SPECIES = wellKnownSymbol("species");
            var $Array = Array;
            var max = Math.max;
            $({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT }, {
              slice: function slice(start, end) {
                var O = toIndexedObject(this);
                var length = lengthOfArrayLike(O);
                var k = toAbsoluteIndex(start, length);
                var fin = toAbsoluteIndex(end === void 0 ? length : end, length);
                var Constructor, result, n;
                if (isArray(O)) {
                  Constructor = O.constructor;
                  if (isConstructor(Constructor) && (Constructor === $Array || isArray(Constructor.prototype))) {
                    Constructor = void 0;
                  } else if (isObject(Constructor)) {
                    Constructor = Constructor[SPECIES];
                    if (Constructor === null)
                      Constructor = void 0;
                  }
                  if (Constructor === $Array || Constructor === void 0) {
                    return nativeSlice(O, k, fin);
                  }
                }
                result = new (Constructor === void 0 ? $Array : Constructor)(max(fin - k, 0));
                for (n = 0; k < fin; k++, n++)
                  if (k in O)
                    createProperty(result, n, O[k]);
                result.length = n;
                return result;
              }
            });
          },
          3975: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var uncurryThis = __webpack_require__2(6881);
            var aCallable = __webpack_require__2(4977);
            var toObject = __webpack_require__2(3628);
            var lengthOfArrayLike = __webpack_require__2(9389);
            var deletePropertyOrThrow = __webpack_require__2(1305);
            var toString = __webpack_require__2(2618);
            var fails = __webpack_require__2(5234);
            var internalSort = __webpack_require__2(9295);
            var arrayMethodIsStrict = __webpack_require__2(5397);
            var FF = __webpack_require__2(2222);
            var IE_OR_EDGE = __webpack_require__2(4598);
            var V8 = __webpack_require__2(3008);
            var WEBKIT = __webpack_require__2(7340);
            var test = [];
            var nativeSort = uncurryThis(test.sort);
            var push = uncurryThis(test.push);
            var FAILS_ON_UNDEFINED = fails(function() {
              test.sort(void 0);
            });
            var FAILS_ON_NULL = fails(function() {
              test.sort(null);
            });
            var STRICT_METHOD = arrayMethodIsStrict("sort");
            var STABLE_SORT = !fails(function() {
              if (V8)
                return V8 < 70;
              if (FF && FF > 3)
                return;
              if (IE_OR_EDGE)
                return true;
              if (WEBKIT)
                return WEBKIT < 603;
              var result = "";
              var code, chr, value, index;
              for (code = 65; code < 76; code++) {
                chr = String.fromCharCode(code);
                switch (code) {
                  case 66:
                  case 69:
                  case 70:
                  case 72:
                    value = 3;
                    break;
                  case 68:
                  case 71:
                    value = 4;
                    break;
                  default:
                    value = 2;
                }
                for (index = 0; index < 47; index++) {
                  test.push({ k: chr + index, v: value });
                }
              }
              test.sort(function(a, b) {
                return b.v - a.v;
              });
              for (index = 0; index < test.length; index++) {
                chr = test[index].k.charAt(0);
                if (result.charAt(result.length - 1) !== chr)
                  result += chr;
              }
              return result !== "DGBEFHACIJK";
            });
            var FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;
            var getSortCompare = function(comparefn) {
              return function(x, y) {
                if (y === void 0)
                  return -1;
                if (x === void 0)
                  return 1;
                if (comparefn !== void 0)
                  return +comparefn(x, y) || 0;
                return toString(x) > toString(y) ? 1 : -1;
              };
            };
            $({ target: "Array", proto: true, forced: FORCED }, {
              sort: function sort(comparefn) {
                if (comparefn !== void 0)
                  aCallable(comparefn);
                var array = toObject(this);
                if (STABLE_SORT)
                  return comparefn === void 0 ? nativeSort(array) : nativeSort(array, comparefn);
                var items = [];
                var arrayLength = lengthOfArrayLike(array);
                var itemsLength, index;
                for (index = 0; index < arrayLength; index++) {
                  if (index in array)
                    push(items, array[index]);
                }
                internalSort(items, getSortCompare(comparefn));
                itemsLength = lengthOfArrayLike(items);
                index = 0;
                while (index < itemsLength)
                  array[index] = items[index++];
                while (index < arrayLength)
                  deletePropertyOrThrow(array, index++);
                return array;
              }
            });
          },
          8803: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var toObject = __webpack_require__2(3628);
            var toAbsoluteIndex = __webpack_require__2(675);
            var toIntegerOrInfinity = __webpack_require__2(6744);
            var lengthOfArrayLike = __webpack_require__2(9389);
            var setArrayLength = __webpack_require__2(4224);
            var doesNotExceedSafeInteger = __webpack_require__2(2197);
            var arraySpeciesCreate = __webpack_require__2(5022);
            var createProperty = __webpack_require__2(4417);
            var deletePropertyOrThrow = __webpack_require__2(1305);
            var arrayMethodHasSpeciesSupport = __webpack_require__2(378);
            var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport("splice");
            var max = Math.max;
            var min = Math.min;
            $({ target: "Array", proto: true, forced: !HAS_SPECIES_SUPPORT }, {
              splice: function splice(start, deleteCount) {
                var O = toObject(this);
                var len = lengthOfArrayLike(O);
                var actualStart = toAbsoluteIndex(start, len);
                var argumentsLength = arguments.length;
                var insertCount, actualDeleteCount, A, k, from, to;
                if (argumentsLength === 0) {
                  insertCount = actualDeleteCount = 0;
                } else if (argumentsLength === 1) {
                  insertCount = 0;
                  actualDeleteCount = len - actualStart;
                } else {
                  insertCount = argumentsLength - 2;
                  actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);
                }
                doesNotExceedSafeInteger(len + insertCount - actualDeleteCount);
                A = arraySpeciesCreate(O, actualDeleteCount);
                for (k = 0; k < actualDeleteCount; k++) {
                  from = actualStart + k;
                  if (from in O)
                    createProperty(A, k, O[from]);
                }
                A.length = actualDeleteCount;
                if (insertCount < actualDeleteCount) {
                  for (k = actualStart; k < len - actualDeleteCount; k++) {
                    from = k + actualDeleteCount;
                    to = k + insertCount;
                    if (from in O)
                      O[to] = O[from];
                    else
                      deletePropertyOrThrow(O, to);
                  }
                  for (k = len; k > len - actualDeleteCount + insertCount; k--)
                    deletePropertyOrThrow(O, k - 1);
                } else if (insertCount > actualDeleteCount) {
                  for (k = len - actualDeleteCount; k > actualStart; k--) {
                    from = k + actualDeleteCount - 1;
                    to = k + insertCount - 1;
                    if (from in O)
                      O[to] = O[from];
                    else
                      deletePropertyOrThrow(O, to);
                  }
                }
                for (k = 0; k < insertCount; k++) {
                  O[k + actualStart] = arguments[k + 2];
                }
                setArrayLength(O, len - actualDeleteCount + insertCount);
                return A;
              }
            });
          },
          8752: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var addToUnscopables = __webpack_require__2(5458);
            addToUnscopables("flatMap");
          },
          5483: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var addToUnscopables = __webpack_require__2(5458);
            addToUnscopables("flat");
          },
          595: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var hasOwn = __webpack_require__2(4418);
            var defineBuiltIn = __webpack_require__2(7509);
            var dateToPrimitive = __webpack_require__2(8089);
            var wellKnownSymbol = __webpack_require__2(4282);
            var TO_PRIMITIVE = wellKnownSymbol("toPrimitive");
            var DatePrototype = Date.prototype;
            if (!hasOwn(DatePrototype, TO_PRIMITIVE)) {
              defineBuiltIn(DatePrototype, TO_PRIMITIVE, dateToPrimitive);
            }
          },
          7107: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var globalThis2 = __webpack_require__2(9117);
            var apply = __webpack_require__2(646);
            var wrapErrorConstructorWithCause = __webpack_require__2(6208);
            var WEB_ASSEMBLY = "WebAssembly";
            var WebAssembly = globalThis2[WEB_ASSEMBLY];
            var FORCED = new Error("e", { cause: 7 }).cause !== 7;
            var exportGlobalErrorCauseWrapper = function(ERROR_NAME, wrapper) {
              var O = {};
              O[ERROR_NAME] = wrapErrorConstructorWithCause(ERROR_NAME, wrapper, FORCED);
              $({ global: true, constructor: true, arity: 1, forced: FORCED }, O);
            };
            var exportWebAssemblyErrorCauseWrapper = function(ERROR_NAME, wrapper) {
              if (WebAssembly && WebAssembly[ERROR_NAME]) {
                var O = {};
                O[ERROR_NAME] = wrapErrorConstructorWithCause(WEB_ASSEMBLY + "." + ERROR_NAME, wrapper, FORCED);
                $({ target: WEB_ASSEMBLY, stat: true, constructor: true, arity: 1, forced: FORCED }, O);
              }
            };
            exportGlobalErrorCauseWrapper("Error", function(init) {
              return function Error2(message) {
                return apply(init, this, arguments);
              };
            });
            exportGlobalErrorCauseWrapper("EvalError", function(init) {
              return function EvalError(message) {
                return apply(init, this, arguments);
              };
            });
            exportGlobalErrorCauseWrapper("RangeError", function(init) {
              return function RangeError2(message) {
                return apply(init, this, arguments);
              };
            });
            exportGlobalErrorCauseWrapper("ReferenceError", function(init) {
              return function ReferenceError2(message) {
                return apply(init, this, arguments);
              };
            });
            exportGlobalErrorCauseWrapper("SyntaxError", function(init) {
              return function SyntaxError(message) {
                return apply(init, this, arguments);
              };
            });
            exportGlobalErrorCauseWrapper("TypeError", function(init) {
              return function TypeError2(message) {
                return apply(init, this, arguments);
              };
            });
            exportGlobalErrorCauseWrapper("URIError", function(init) {
              return function URIError(message) {
                return apply(init, this, arguments);
              };
            });
            exportWebAssemblyErrorCauseWrapper("CompileError", function(init) {
              return function CompileError(message) {
                return apply(init, this, arguments);
              };
            });
            exportWebAssemblyErrorCauseWrapper("LinkError", function(init) {
              return function LinkError(message) {
                return apply(init, this, arguments);
              };
            });
            exportWebAssemblyErrorCauseWrapper("RuntimeError", function(init) {
              return function RuntimeError(message) {
                return apply(init, this, arguments);
              };
            });
          },
          3277: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var DESCRIPTORS = __webpack_require__2(6893);
            var FUNCTION_NAME_EXISTS = __webpack_require__2(2735).EXISTS;
            var uncurryThis = __webpack_require__2(6881);
            var defineBuiltInAccessor = __webpack_require__2(997);
            var FunctionPrototype = Function.prototype;
            var functionToString = uncurryThis(FunctionPrototype.toString);
            var nameRE = /function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/;
            var regExpExec = uncurryThis(nameRE.exec);
            var NAME = "name";
            if (DESCRIPTORS && !FUNCTION_NAME_EXISTS) {
              defineBuiltInAccessor(FunctionPrototype, NAME, {
                configurable: true,
                get: function() {
                  try {
                    return regExpExec(nameRE, functionToString(this))[1];
                  } catch (error) {
                    return "";
                  }
                }
              });
            }
          },
          4727: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var getBuiltIn = __webpack_require__2(5604);
            var apply = __webpack_require__2(646);
            var call = __webpack_require__2(9944);
            var uncurryThis = __webpack_require__2(6881);
            var fails = __webpack_require__2(5234);
            var isCallable = __webpack_require__2(4188);
            var isSymbol = __webpack_require__2(6032);
            var arraySlice = __webpack_require__2(7825);
            var getReplacerFunction = __webpack_require__2(8254);
            var NATIVE_SYMBOL = __webpack_require__2(8944);
            var $String = String;
            var $stringify = getBuiltIn("JSON", "stringify");
            var exec = uncurryThis(/./.exec);
            var charAt = uncurryThis("".charAt);
            var charCodeAt = uncurryThis("".charCodeAt);
            var replace = uncurryThis("".replace);
            var numberToString = uncurryThis(1 .toString);
            var tester = /[\uD800-\uDFFF]/g;
            var low = /^[\uD800-\uDBFF]$/;
            var hi = /^[\uDC00-\uDFFF]$/;
            var WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL || fails(function() {
              var symbol = getBuiltIn("Symbol")("stringify detection");
              return $stringify([symbol]) !== "[null]" || $stringify({ a: symbol }) !== "{}" || $stringify(Object(symbol)) !== "{}";
            });
            var ILL_FORMED_UNICODE = fails(function() {
              return $stringify("\uDF06\uD834") !== '"\\udf06\\ud834"' || $stringify("\uDEAD") !== '"\\udead"';
            });
            var stringifyWithSymbolsFix = function(it, replacer) {
              var args = arraySlice(arguments);
              var $replacer = getReplacerFunction(replacer);
              if (!isCallable($replacer) && (it === void 0 || isSymbol(it)))
                return;
              args[1] = function(key, value) {
                if (isCallable($replacer))
                  value = call($replacer, this, $String(key), value);
                if (!isSymbol(value))
                  return value;
              };
              return apply($stringify, null, args);
            };
            var fixIllFormed = function(match, offset, string) {
              var prev = charAt(string, offset - 1);
              var next = charAt(string, offset + 1);
              if (exec(low, match) && !exec(hi, next) || exec(hi, match) && !exec(low, prev)) {
                return "\\u" + numberToString(charCodeAt(match, 0), 16);
              }
              return match;
            };
            if ($stringify) {
              $({ target: "JSON", stat: true, arity: 3, forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE }, {
                stringify: function stringify(it, replacer, space) {
                  var args = arraySlice(arguments);
                  var result = apply(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);
                  return ILL_FORMED_UNICODE && typeof result == "string" ? replace(result, tester, fixIllFormed) : result;
                }
              });
            }
          },
          7920: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var collection = __webpack_require__2(6351);
            var collectionStrong = __webpack_require__2(3231);
            collection("Map", function(init) {
              return function Map2() {
                return init(this, arguments.length ? arguments[0] : void 0);
              };
            }, collectionStrong);
          },
          8470: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            __webpack_require__2(7920);
          },
          3185: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var IS_PURE = __webpack_require__2(1942);
            var DESCRIPTORS = __webpack_require__2(6893);
            var globalThis2 = __webpack_require__2(9117);
            var path = __webpack_require__2(9120);
            var uncurryThis = __webpack_require__2(6881);
            var isForced = __webpack_require__2(8489);
            var hasOwn = __webpack_require__2(4418);
            var inheritIfRequired = __webpack_require__2(4166);
            var isPrototypeOf = __webpack_require__2(4578);
            var isSymbol = __webpack_require__2(6032);
            var toPrimitive = __webpack_require__2(290);
            var fails = __webpack_require__2(5234);
            var getOwnPropertyNames = __webpack_require__2(5629).f;
            var getOwnPropertyDescriptor = __webpack_require__2(9304).f;
            var defineProperty = __webpack_require__2(4466).f;
            var thisNumberValue = __webpack_require__2(5881);
            var trim = __webpack_require__2(2771).trim;
            var NUMBER = "Number";
            var NativeNumber = globalThis2[NUMBER];
            var PureNumberNamespace = path[NUMBER];
            var NumberPrototype = NativeNumber.prototype;
            var TypeError2 = globalThis2.TypeError;
            var stringSlice = uncurryThis("".slice);
            var charCodeAt = uncurryThis("".charCodeAt);
            var toNumeric = function(value) {
              var primValue = toPrimitive(value, "number");
              return typeof primValue == "bigint" ? primValue : toNumber(primValue);
            };
            var toNumber = function(argument) {
              var it = toPrimitive(argument, "number");
              var first, third, radix, maxCode, digits, length, index, code;
              if (isSymbol(it))
                throw new TypeError2("Cannot convert a Symbol value to a number");
              if (typeof it == "string" && it.length > 2) {
                it = trim(it);
                first = charCodeAt(it, 0);
                if (first === 43 || first === 45) {
                  third = charCodeAt(it, 2);
                  if (third === 88 || third === 120)
                    return NaN;
                } else if (first === 48) {
                  switch (charCodeAt(it, 1)) {
                    case 66:
                    case 98:
                      radix = 2;
                      maxCode = 49;
                      break;
                    case 79:
                    case 111:
                      radix = 8;
                      maxCode = 55;
                      break;
                    default:
                      return +it;
                  }
                  digits = stringSlice(it, 2);
                  length = digits.length;
                  for (index = 0; index < length; index++) {
                    code = charCodeAt(digits, index);
                    if (code < 48 || code > maxCode)
                      return NaN;
                  }
                  return parseInt(digits, radix);
                }
              }
              return +it;
            };
            var FORCED = isForced(NUMBER, !NativeNumber(" 0o1") || !NativeNumber("0b1") || NativeNumber("+0x1"));
            var calledWithNew = function(dummy) {
              return isPrototypeOf(NumberPrototype, dummy) && fails(function() {
                thisNumberValue(dummy);
              });
            };
            var NumberWrapper = function Number2(value) {
              var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));
              return calledWithNew(this) ? inheritIfRequired(Object(n), this, NumberWrapper) : n;
            };
            NumberWrapper.prototype = NumberPrototype;
            if (FORCED && !IS_PURE)
              NumberPrototype.constructor = NumberWrapper;
            $({ global: true, constructor: true, wrap: true, forced: FORCED }, {
              Number: NumberWrapper
            });
            var copyConstructorProperties = function(target, source) {
              for (var keys = DESCRIPTORS ? getOwnPropertyNames(source) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(","), j = 0, key; keys.length > j; j++) {
                if (hasOwn(source, key = keys[j]) && !hasOwn(target, key)) {
                  defineProperty(target, key, getOwnPropertyDescriptor(source, key));
                }
              }
            };
            if (IS_PURE && PureNumberNamespace)
              copyConstructorProperties(path[NUMBER], PureNumberNamespace);
            if (FORCED || IS_PURE)
              copyConstructorProperties(path[NUMBER], NativeNumber);
          },
          7050: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var assign = __webpack_require__2(9456);
            $({ target: "Object", stat: true, arity: 2, forced: Object.assign !== assign }, {
              assign
            });
          },
          9431: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var $entries = __webpack_require__2(4844).entries;
            $({ target: "Object", stat: true }, {
              entries: function entries(O) {
                return $entries(O);
              }
            });
          },
          7678: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var fails = __webpack_require__2(5234);
            var toIndexedObject = __webpack_require__2(380);
            var nativeGetOwnPropertyDescriptor = __webpack_require__2(9304).f;
            var DESCRIPTORS = __webpack_require__2(6893);
            var FORCED = !DESCRIPTORS || fails(function() {
              nativeGetOwnPropertyDescriptor(1);
            });
            $({ target: "Object", stat: true, forced: FORCED, sham: !DESCRIPTORS }, {
              getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
                return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);
              }
            });
          },
          1909: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var DESCRIPTORS = __webpack_require__2(6893);
            var ownKeys = __webpack_require__2(3168);
            var toIndexedObject = __webpack_require__2(380);
            var getOwnPropertyDescriptorModule = __webpack_require__2(9304);
            var createProperty = __webpack_require__2(4417);
            $({ target: "Object", stat: true, sham: !DESCRIPTORS }, {
              getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
                var O = toIndexedObject(object);
                var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
                var keys = ownKeys(O);
                var result = {};
                var index = 0;
                var key, descriptor;
                while (keys.length > index) {
                  descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);
                  if (descriptor !== void 0)
                    createProperty(result, key, descriptor);
                }
                return result;
              }
            });
          },
          3786: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var NATIVE_SYMBOL = __webpack_require__2(8944);
            var fails = __webpack_require__2(5234);
            var getOwnPropertySymbolsModule = __webpack_require__2(156);
            var toObject = __webpack_require__2(3628);
            var FORCED = !NATIVE_SYMBOL || fails(function() {
              getOwnPropertySymbolsModule.f(1);
            });
            $({ target: "Object", stat: true, forced: FORCED }, {
              getOwnPropertySymbols: function getOwnPropertySymbols(it) {
                var $getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
                return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject(it)) : [];
              }
            });
          },
          2380: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var fails = __webpack_require__2(5234);
            var toObject = __webpack_require__2(3628);
            var nativeGetPrototypeOf = __webpack_require__2(1786);
            var CORRECT_PROTOTYPE_GETTER = __webpack_require__2(680);
            var FAILS_ON_PRIMITIVES = fails(function() {
              nativeGetPrototypeOf(1);
            });
            $({ target: "Object", stat: true, forced: FAILS_ON_PRIMITIVES, sham: !CORRECT_PROTOTYPE_GETTER }, {
              getPrototypeOf: function getPrototypeOf(it) {
                return nativeGetPrototypeOf(toObject(it));
              }
            });
          },
          4183: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var is = __webpack_require__2(7501);
            $({ target: "Object", stat: true }, {
              is
            });
          },
          8291: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var toObject = __webpack_require__2(3628);
            var nativeKeys = __webpack_require__2(7137);
            var fails = __webpack_require__2(5234);
            var FAILS_ON_PRIMITIVES = fails(function() {
              nativeKeys(1);
            });
            $({ target: "Object", stat: true, forced: FAILS_ON_PRIMITIVES }, {
              keys: function keys(it) {
                return nativeKeys(toObject(it));
              }
            });
          },
          630: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var TO_STRING_TAG_SUPPORT = __webpack_require__2(9345);
            var defineBuiltIn = __webpack_require__2(7509);
            var toString = __webpack_require__2(2244);
            if (!TO_STRING_TAG_SUPPORT) {
              defineBuiltIn(Object.prototype, "toString", toString, { unsafe: true });
            }
          },
          2353: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var $values = __webpack_require__2(4844).values;
            $({ target: "Object", stat: true }, {
              values: function values(O) {
                return $values(O);
              }
            });
          },
          5528: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var call = __webpack_require__2(9944);
            var aCallable = __webpack_require__2(4977);
            var newPromiseCapabilityModule = __webpack_require__2(9444);
            var perform = __webpack_require__2(6042);
            var iterate = __webpack_require__2(8873);
            var PROMISE_STATICS_INCORRECT_ITERATION = __webpack_require__2(6292);
            $({ target: "Promise", stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION }, {
              all: function all(iterable) {
                var C = this;
                var capability = newPromiseCapabilityModule.f(C);
                var resolve = capability.resolve;
                var reject = capability.reject;
                var result = perform(function() {
                  var $promiseResolve = aCallable(C.resolve);
                  var values = [];
                  var counter = 0;
                  var remaining = 1;
                  iterate(iterable, function(promise) {
                    var index = counter++;
                    var alreadyCalled = false;
                    remaining++;
                    call($promiseResolve, C, promise).then(function(value) {
                      if (alreadyCalled)
                        return;
                      alreadyCalled = true;
                      values[index] = value;
                      --remaining || resolve(values);
                    }, reject);
                  });
                  --remaining || resolve(values);
                });
                if (result.error)
                  reject(result.value);
                return capability.promise;
              }
            });
          },
          4348: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var IS_PURE = __webpack_require__2(1942);
            var FORCED_PROMISE_CONSTRUCTOR = __webpack_require__2(7301).CONSTRUCTOR;
            var NativePromiseConstructor = __webpack_require__2(6453);
            var getBuiltIn = __webpack_require__2(5604);
            var isCallable = __webpack_require__2(4188);
            var defineBuiltIn = __webpack_require__2(7509);
            var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;
            $({ target: "Promise", proto: true, forced: FORCED_PROMISE_CONSTRUCTOR, real: true }, {
              "catch": function(onRejected) {
                return this.then(void 0, onRejected);
              }
            });
            if (!IS_PURE && isCallable(NativePromiseConstructor)) {
              var method = getBuiltIn("Promise").prototype["catch"];
              if (NativePromisePrototype["catch"] !== method) {
                defineBuiltIn(NativePromisePrototype, "catch", method, { unsafe: true });
              }
            }
          },
          4267: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var IS_PURE = __webpack_require__2(1942);
            var IS_NODE = __webpack_require__2(3940);
            var globalThis2 = __webpack_require__2(9117);
            var call = __webpack_require__2(9944);
            var defineBuiltIn = __webpack_require__2(7509);
            var setPrototypeOf = __webpack_require__2(5054);
            var setToStringTag = __webpack_require__2(3754);
            var setSpecies = __webpack_require__2(3900);
            var aCallable = __webpack_require__2(4977);
            var isCallable = __webpack_require__2(4188);
            var isObject = __webpack_require__2(831);
            var anInstance = __webpack_require__2(286);
            var speciesConstructor = __webpack_require__2(7964);
            var task = __webpack_require__2(3474).set;
            var microtask = __webpack_require__2(1982);
            var hostReportErrors = __webpack_require__2(3306);
            var perform = __webpack_require__2(6042);
            var Queue = __webpack_require__2(8648);
            var InternalStateModule = __webpack_require__2(3086);
            var NativePromiseConstructor = __webpack_require__2(6453);
            var PromiseConstructorDetection = __webpack_require__2(7301);
            var newPromiseCapabilityModule = __webpack_require__2(9444);
            var PROMISE = "Promise";
            var FORCED_PROMISE_CONSTRUCTOR = PromiseConstructorDetection.CONSTRUCTOR;
            var NATIVE_PROMISE_REJECTION_EVENT = PromiseConstructorDetection.REJECTION_EVENT;
            var NATIVE_PROMISE_SUBCLASSING = PromiseConstructorDetection.SUBCLASSING;
            var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
            var setInternalState = InternalStateModule.set;
            var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;
            var PromiseConstructor = NativePromiseConstructor;
            var PromisePrototype = NativePromisePrototype;
            var TypeError2 = globalThis2.TypeError;
            var document2 = globalThis2.document;
            var process = globalThis2.process;
            var newPromiseCapability = newPromiseCapabilityModule.f;
            var newGenericPromiseCapability = newPromiseCapability;
            var DISPATCH_EVENT = !!(document2 && document2.createEvent && globalThis2.dispatchEvent);
            var UNHANDLED_REJECTION = "unhandledrejection";
            var REJECTION_HANDLED = "rejectionhandled";
            var PENDING = 0;
            var FULFILLED = 1;
            var REJECTED = 2;
            var HANDLED = 1;
            var UNHANDLED = 2;
            var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;
            var isThenable = function(it) {
              var then;
              return isObject(it) && isCallable(then = it.then) ? then : false;
            };
            var callReaction = function(reaction, state) {
              var value = state.value;
              var ok = state.state === FULFILLED;
              var handler = ok ? reaction.ok : reaction.fail;
              var resolve = reaction.resolve;
              var reject = reaction.reject;
              var domain = reaction.domain;
              var result, then, exited;
              try {
                if (handler) {
                  if (!ok) {
                    if (state.rejection === UNHANDLED)
                      onHandleUnhandled(state);
                    state.rejection = HANDLED;
                  }
                  if (handler === true)
                    result = value;
                  else {
                    if (domain)
                      domain.enter();
                    result = handler(value);
                    if (domain) {
                      domain.exit();
                      exited = true;
                    }
                  }
                  if (result === reaction.promise) {
                    reject(new TypeError2("Promise-chain cycle"));
                  } else if (then = isThenable(result)) {
                    call(then, result, resolve, reject);
                  } else
                    resolve(result);
                } else
                  reject(value);
              } catch (error) {
                if (domain && !exited)
                  domain.exit();
                reject(error);
              }
            };
            var notify = function(state, isReject) {
              if (state.notified)
                return;
              state.notified = true;
              microtask(function() {
                var reactions = state.reactions;
                var reaction;
                while (reaction = reactions.get()) {
                  callReaction(reaction, state);
                }
                state.notified = false;
                if (isReject && !state.rejection)
                  onUnhandled(state);
              });
            };
            var dispatchEvent = function(name, promise, reason) {
              var event, handler;
              if (DISPATCH_EVENT) {
                event = document2.createEvent("Event");
                event.promise = promise;
                event.reason = reason;
                event.initEvent(name, false, true);
                globalThis2.dispatchEvent(event);
              } else
                event = { promise, reason };
              if (!NATIVE_PROMISE_REJECTION_EVENT && (handler = globalThis2["on" + name]))
                handler(event);
              else if (name === UNHANDLED_REJECTION)
                hostReportErrors("Unhandled promise rejection", reason);
            };
            var onUnhandled = function(state) {
              call(task, globalThis2, function() {
                var promise = state.facade;
                var value = state.value;
                var IS_UNHANDLED = isUnhandled(state);
                var result;
                if (IS_UNHANDLED) {
                  result = perform(function() {
                    if (IS_NODE) {
                      process.emit("unhandledRejection", value, promise);
                    } else
                      dispatchEvent(UNHANDLED_REJECTION, promise, value);
                  });
                  state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
                  if (result.error)
                    throw result.value;
                }
              });
            };
            var isUnhandled = function(state) {
              return state.rejection !== HANDLED && !state.parent;
            };
            var onHandleUnhandled = function(state) {
              call(task, globalThis2, function() {
                var promise = state.facade;
                if (IS_NODE) {
                  process.emit("rejectionHandled", promise);
                } else
                  dispatchEvent(REJECTION_HANDLED, promise, state.value);
              });
            };
            var bind = function(fn, state, unwrap) {
              return function(value) {
                fn(state, value, unwrap);
              };
            };
            var internalReject = function(state, value, unwrap) {
              if (state.done)
                return;
              state.done = true;
              if (unwrap)
                state = unwrap;
              state.value = value;
              state.state = REJECTED;
              notify(state, true);
            };
            var internalResolve = function(state, value, unwrap) {
              if (state.done)
                return;
              state.done = true;
              if (unwrap)
                state = unwrap;
              try {
                if (state.facade === value)
                  throw new TypeError2("Promise can't be resolved itself");
                var then = isThenable(value);
                if (then) {
                  microtask(function() {
                    var wrapper = { done: false };
                    try {
                      call(
                        then,
                        value,
                        bind(internalResolve, wrapper, state),
                        bind(internalReject, wrapper, state)
                      );
                    } catch (error) {
                      internalReject(wrapper, error, state);
                    }
                  });
                } else {
                  state.value = value;
                  state.state = FULFILLED;
                  notify(state, false);
                }
              } catch (error) {
                internalReject({ done: false }, error, state);
              }
            };
            if (FORCED_PROMISE_CONSTRUCTOR) {
              PromiseConstructor = function Promise2(executor) {
                anInstance(this, PromisePrototype);
                aCallable(executor);
                call(Internal, this);
                var state = getInternalPromiseState(this);
                try {
                  executor(bind(internalResolve, state), bind(internalReject, state));
                } catch (error) {
                  internalReject(state, error);
                }
              };
              PromisePrototype = PromiseConstructor.prototype;
              Internal = function Promise2(executor) {
                setInternalState(this, {
                  type: PROMISE,
                  done: false,
                  notified: false,
                  parent: false,
                  reactions: new Queue(),
                  rejection: false,
                  state: PENDING,
                  value: void 0
                });
              };
              Internal.prototype = defineBuiltIn(PromisePrototype, "then", function then(onFulfilled, onRejected) {
                var state = getInternalPromiseState(this);
                var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
                state.parent = true;
                reaction.ok = isCallable(onFulfilled) ? onFulfilled : true;
                reaction.fail = isCallable(onRejected) && onRejected;
                reaction.domain = IS_NODE ? process.domain : void 0;
                if (state.state === PENDING)
                  state.reactions.add(reaction);
                else
                  microtask(function() {
                    callReaction(reaction, state);
                  });
                return reaction.promise;
              });
              OwnPromiseCapability = function() {
                var promise = new Internal();
                var state = getInternalPromiseState(promise);
                this.promise = promise;
                this.resolve = bind(internalResolve, state);
                this.reject = bind(internalReject, state);
              };
              newPromiseCapabilityModule.f = newPromiseCapability = function(C) {
                return C === PromiseConstructor || C === PromiseWrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);
              };
              if (!IS_PURE && isCallable(NativePromiseConstructor) && NativePromisePrototype !== Object.prototype) {
                nativeThen = NativePromisePrototype.then;
                if (!NATIVE_PROMISE_SUBCLASSING) {
                  defineBuiltIn(NativePromisePrototype, "then", function then(onFulfilled, onRejected) {
                    var that = this;
                    return new PromiseConstructor(function(resolve, reject) {
                      call(nativeThen, that, resolve, reject);
                    }).then(onFulfilled, onRejected);
                  }, { unsafe: true });
                }
                try {
                  delete NativePromisePrototype.constructor;
                } catch (error) {
                }
                if (setPrototypeOf) {
                  setPrototypeOf(NativePromisePrototype, PromisePrototype);
                }
              }
            }
            $({ global: true, constructor: true, wrap: true, forced: FORCED_PROMISE_CONSTRUCTOR }, {
              Promise: PromiseConstructor
            });
            setToStringTag(PromiseConstructor, PROMISE, false, true);
            setSpecies(PROMISE);
          },
          865: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            __webpack_require__2(4267);
            __webpack_require__2(5528);
            __webpack_require__2(4348);
            __webpack_require__2(7174);
            __webpack_require__2(4168);
            __webpack_require__2(8235);
          },
          7174: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var call = __webpack_require__2(9944);
            var aCallable = __webpack_require__2(4977);
            var newPromiseCapabilityModule = __webpack_require__2(9444);
            var perform = __webpack_require__2(6042);
            var iterate = __webpack_require__2(8873);
            var PROMISE_STATICS_INCORRECT_ITERATION = __webpack_require__2(6292);
            $({ target: "Promise", stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION }, {
              race: function race(iterable) {
                var C = this;
                var capability = newPromiseCapabilityModule.f(C);
                var reject = capability.reject;
                var result = perform(function() {
                  var $promiseResolve = aCallable(C.resolve);
                  iterate(iterable, function(promise) {
                    call($promiseResolve, C, promise).then(capability.resolve, reject);
                  });
                });
                if (result.error)
                  reject(result.value);
                return capability.promise;
              }
            });
          },
          4168: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var newPromiseCapabilityModule = __webpack_require__2(9444);
            var FORCED_PROMISE_CONSTRUCTOR = __webpack_require__2(7301).CONSTRUCTOR;
            $({ target: "Promise", stat: true, forced: FORCED_PROMISE_CONSTRUCTOR }, {
              reject: function reject(r) {
                var capability = newPromiseCapabilityModule.f(this);
                var capabilityReject = capability.reject;
                capabilityReject(r);
                return capability.promise;
              }
            });
          },
          8235: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var getBuiltIn = __webpack_require__2(5604);
            var IS_PURE = __webpack_require__2(1942);
            var NativePromiseConstructor = __webpack_require__2(6453);
            var FORCED_PROMISE_CONSTRUCTOR = __webpack_require__2(7301).CONSTRUCTOR;
            var promiseResolve = __webpack_require__2(8787);
            var PromiseConstructorWrapper = getBuiltIn("Promise");
            var CHECK_WRAPPER = IS_PURE && !FORCED_PROMISE_CONSTRUCTOR;
            $({ target: "Promise", stat: true, forced: IS_PURE || FORCED_PROMISE_CONSTRUCTOR }, {
              resolve: function resolve(x) {
                return promiseResolve(CHECK_WRAPPER && this === PromiseConstructorWrapper ? NativePromiseConstructor : this, x);
              }
            });
          },
          7270: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var getBuiltIn = __webpack_require__2(5604);
            var apply = __webpack_require__2(646);
            var bind = __webpack_require__2(6435);
            var aConstructor = __webpack_require__2(1361);
            var anObject = __webpack_require__2(3770);
            var isObject = __webpack_require__2(831);
            var create = __webpack_require__2(7065);
            var fails = __webpack_require__2(5234);
            var nativeConstruct = getBuiltIn("Reflect", "construct");
            var ObjectPrototype = Object.prototype;
            var push = [].push;
            var NEW_TARGET_BUG = fails(function() {
              function F() {
              }
              return !(nativeConstruct(function() {
              }, [], F) instanceof F);
            });
            var ARGS_BUG = !fails(function() {
              nativeConstruct(function() {
              });
            });
            var FORCED = NEW_TARGET_BUG || ARGS_BUG;
            $({ target: "Reflect", stat: true, forced: FORCED, sham: FORCED }, {
              construct: function construct(Target, args) {
                aConstructor(Target);
                anObject(args);
                var newTarget = arguments.length < 3 ? Target : aConstructor(arguments[2]);
                if (ARGS_BUG && !NEW_TARGET_BUG)
                  return nativeConstruct(Target, args, newTarget);
                if (Target === newTarget) {
                  switch (args.length) {
                    case 0:
                      return new Target();
                    case 1:
                      return new Target(args[0]);
                    case 2:
                      return new Target(args[0], args[1]);
                    case 3:
                      return new Target(args[0], args[1], args[2]);
                    case 4:
                      return new Target(args[0], args[1], args[2], args[3]);
                  }
                  var $args = [null];
                  apply(push, $args, args);
                  return new (apply(bind, Target, $args))();
                }
                var proto = newTarget.prototype;
                var instance = create(isObject(proto) ? proto : ObjectPrototype);
                var result = apply(Target, instance, args);
                return isObject(result) ? result : instance;
              }
            });
          },
          451: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var call = __webpack_require__2(9944);
            var isObject = __webpack_require__2(831);
            var anObject = __webpack_require__2(3770);
            var isDataDescriptor = __webpack_require__2(8708);
            var getOwnPropertyDescriptorModule = __webpack_require__2(9304);
            var getPrototypeOf = __webpack_require__2(1786);
            function get(target, propertyKey) {
              var receiver = arguments.length < 3 ? target : arguments[2];
              var descriptor, prototype;
              if (anObject(target) === receiver)
                return target[propertyKey];
              descriptor = getOwnPropertyDescriptorModule.f(target, propertyKey);
              if (descriptor)
                return isDataDescriptor(descriptor) ? descriptor.value : descriptor.get === void 0 ? void 0 : call(descriptor.get, receiver);
              if (isObject(prototype = getPrototypeOf(target)))
                return get(prototype, propertyKey, receiver);
            }
            $({ target: "Reflect", stat: true }, {
              get
            });
          },
          7087: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var globalThis2 = __webpack_require__2(9117);
            var setToStringTag = __webpack_require__2(3754);
            $({ global: true }, { Reflect: {} });
            setToStringTag(globalThis2.Reflect, "Reflect", true);
          },
          8697: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var DESCRIPTORS = __webpack_require__2(6893);
            var globalThis2 = __webpack_require__2(9117);
            var uncurryThis = __webpack_require__2(6881);
            var isForced = __webpack_require__2(8489);
            var inheritIfRequired = __webpack_require__2(4166);
            var createNonEnumerableProperty = __webpack_require__2(8088);
            var create = __webpack_require__2(7065);
            var getOwnPropertyNames = __webpack_require__2(5629).f;
            var isPrototypeOf = __webpack_require__2(4578);
            var isRegExp = __webpack_require__2(473);
            var toString = __webpack_require__2(2618);
            var getRegExpFlags = __webpack_require__2(3113);
            var stickyHelpers = __webpack_require__2(5976);
            var proxyAccessor = __webpack_require__2(8679);
            var defineBuiltIn = __webpack_require__2(7509);
            var fails = __webpack_require__2(5234);
            var hasOwn = __webpack_require__2(4418);
            var enforceInternalState = __webpack_require__2(3086).enforce;
            var setSpecies = __webpack_require__2(3900);
            var wellKnownSymbol = __webpack_require__2(4282);
            var UNSUPPORTED_DOT_ALL = __webpack_require__2(6676);
            var UNSUPPORTED_NCG = __webpack_require__2(4609);
            var MATCH = wellKnownSymbol("match");
            var NativeRegExp = globalThis2.RegExp;
            var RegExpPrototype = NativeRegExp.prototype;
            var SyntaxError = globalThis2.SyntaxError;
            var exec = uncurryThis(RegExpPrototype.exec);
            var charAt = uncurryThis("".charAt);
            var replace = uncurryThis("".replace);
            var stringIndexOf = uncurryThis("".indexOf);
            var stringSlice = uncurryThis("".slice);
            var IS_NCG = /^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/;
            var re1 = /a/g;
            var re2 = /a/g;
            var CORRECT_NEW = new NativeRegExp(re1) !== re1;
            var MISSED_STICKY = stickyHelpers.MISSED_STICKY;
            var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;
            var BASE_FORCED = DESCRIPTORS && (!CORRECT_NEW || MISSED_STICKY || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG || fails(function() {
              re2[MATCH] = false;
              return NativeRegExp(re1) !== re1 || NativeRegExp(re2) === re2 || String(NativeRegExp(re1, "i")) !== "/a/i";
            }));
            var handleDotAll = function(string) {
              var length = string.length;
              var index2 = 0;
              var result = "";
              var brackets = false;
              var chr;
              for (; index2 <= length; index2++) {
                chr = charAt(string, index2);
                if (chr === "\\") {
                  result += chr + charAt(string, ++index2);
                  continue;
                }
                if (!brackets && chr === ".") {
                  result += "[\\s\\S]";
                } else {
                  if (chr === "[") {
                    brackets = true;
                  } else if (chr === "]") {
                    brackets = false;
                  }
                  result += chr;
                }
              }
              return result;
            };
            var handleNCG = function(string) {
              var length = string.length;
              var index2 = 0;
              var result = "";
              var named = [];
              var names = create(null);
              var brackets = false;
              var ncg = false;
              var groupid = 0;
              var groupname = "";
              var chr;
              for (; index2 <= length; index2++) {
                chr = charAt(string, index2);
                if (chr === "\\") {
                  chr += charAt(string, ++index2);
                } else if (chr === "]") {
                  brackets = false;
                } else if (!brackets)
                  switch (true) {
                    case chr === "[":
                      brackets = true;
                      break;
                    case chr === "(":
                      result += chr;
                      if (stringSlice(string, index2 + 1, index2 + 3) === "?:") {
                        continue;
                      }
                      if (exec(IS_NCG, stringSlice(string, index2 + 1))) {
                        index2 += 2;
                        ncg = true;
                      }
                      groupid++;
                      continue;
                    case (chr === ">" && ncg):
                      if (groupname === "" || hasOwn(names, groupname)) {
                        throw new SyntaxError("Invalid capture group name");
                      }
                      names[groupname] = true;
                      named[named.length] = [groupname, groupid];
                      ncg = false;
                      groupname = "";
                      continue;
                  }
                if (ncg)
                  groupname += chr;
                else
                  result += chr;
              }
              return [result, named];
            };
            if (isForced("RegExp", BASE_FORCED)) {
              var RegExpWrapper = function RegExp2(pattern, flags) {
                var thisIsRegExp = isPrototypeOf(RegExpPrototype, this);
                var patternIsRegExp = isRegExp(pattern);
                var flagsAreUndefined = flags === void 0;
                var groups = [];
                var rawPattern = pattern;
                var rawFlags, dotAll, sticky, handled, result, state;
                if (!thisIsRegExp && patternIsRegExp && flagsAreUndefined && pattern.constructor === RegExpWrapper) {
                  return pattern;
                }
                if (patternIsRegExp || isPrototypeOf(RegExpPrototype, pattern)) {
                  pattern = pattern.source;
                  if (flagsAreUndefined)
                    flags = getRegExpFlags(rawPattern);
                }
                pattern = pattern === void 0 ? "" : toString(pattern);
                flags = flags === void 0 ? "" : toString(flags);
                rawPattern = pattern;
                if (UNSUPPORTED_DOT_ALL && "dotAll" in re1) {
                  dotAll = !!flags && stringIndexOf(flags, "s") > -1;
                  if (dotAll)
                    flags = replace(flags, /s/g, "");
                }
                rawFlags = flags;
                if (MISSED_STICKY && "sticky" in re1) {
                  sticky = !!flags && stringIndexOf(flags, "y") > -1;
                  if (sticky && UNSUPPORTED_Y)
                    flags = replace(flags, /y/g, "");
                }
                if (UNSUPPORTED_NCG) {
                  handled = handleNCG(pattern);
                  pattern = handled[0];
                  groups = handled[1];
                }
                result = inheritIfRequired(NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype, RegExpWrapper);
                if (dotAll || sticky || groups.length) {
                  state = enforceInternalState(result);
                  if (dotAll) {
                    state.dotAll = true;
                    state.raw = RegExpWrapper(handleDotAll(pattern), rawFlags);
                  }
                  if (sticky)
                    state.sticky = true;
                  if (groups.length)
                    state.groups = groups;
                }
                if (pattern !== rawPattern)
                  try {
                    createNonEnumerableProperty(result, "source", rawPattern === "" ? "(?:)" : rawPattern);
                  } catch (error) {
                  }
                return result;
              };
              for (var keys = getOwnPropertyNames(NativeRegExp), index = 0; keys.length > index; ) {
                proxyAccessor(RegExpWrapper, NativeRegExp, keys[index++]);
              }
              RegExpPrototype.constructor = RegExpWrapper;
              RegExpWrapper.prototype = RegExpPrototype;
              defineBuiltIn(globalThis2, "RegExp", RegExpWrapper, { constructor: true });
            }
            setSpecies("RegExp");
          },
          8096: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var DESCRIPTORS = __webpack_require__2(6893);
            var UNSUPPORTED_DOT_ALL = __webpack_require__2(6676);
            var classof = __webpack_require__2(8689);
            var defineBuiltInAccessor = __webpack_require__2(997);
            var getInternalState = __webpack_require__2(3086).get;
            var RegExpPrototype = RegExp.prototype;
            var $TypeError = TypeError;
            if (DESCRIPTORS && UNSUPPORTED_DOT_ALL) {
              defineBuiltInAccessor(RegExpPrototype, "dotAll", {
                configurable: true,
                get: function dotAll() {
                  if (this === RegExpPrototype)
                    return;
                  if (classof(this) === "RegExp") {
                    return !!getInternalState(this).dotAll;
                  }
                  throw new $TypeError("Incompatible receiver, RegExp required");
                }
              });
            }
          },
          8376: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var exec = __webpack_require__2(9342);
            $({ target: "RegExp", proto: true, forced: /./.exec !== exec }, {
              exec
            });
          },
          206: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var DESCRIPTORS = __webpack_require__2(6893);
            var MISSED_STICKY = __webpack_require__2(5976).MISSED_STICKY;
            var classof = __webpack_require__2(8689);
            var defineBuiltInAccessor = __webpack_require__2(997);
            var getInternalState = __webpack_require__2(3086).get;
            var RegExpPrototype = RegExp.prototype;
            var $TypeError = TypeError;
            if (DESCRIPTORS && MISSED_STICKY) {
              defineBuiltInAccessor(RegExpPrototype, "sticky", {
                configurable: true,
                get: function sticky() {
                  if (this === RegExpPrototype)
                    return;
                  if (classof(this) === "RegExp") {
                    return !!getInternalState(this).sticky;
                  }
                  throw new $TypeError("Incompatible receiver, RegExp required");
                }
              });
            }
          },
          6929: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            __webpack_require__2(8376);
            var $ = __webpack_require__2(5613);
            var call = __webpack_require__2(9944);
            var isCallable = __webpack_require__2(4188);
            var anObject = __webpack_require__2(3770);
            var toString = __webpack_require__2(2618);
            var DELEGATES_TO_EXEC = function() {
              var execCalled = false;
              var re = /[ac]/;
              re.exec = function() {
                execCalled = true;
                return /./.exec.apply(this, arguments);
              };
              return re.test("abc") === true && execCalled;
            }();
            var nativeTest = /./.test;
            $({ target: "RegExp", proto: true, forced: !DELEGATES_TO_EXEC }, {
              test: function(S) {
                var R = anObject(this);
                var string = toString(S);
                var exec = R.exec;
                if (!isCallable(exec))
                  return call(nativeTest, R, string);
                var result = call(exec, R, string);
                if (result === null)
                  return false;
                anObject(result);
                return true;
              }
            });
          },
          568: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var PROPER_FUNCTION_NAME = __webpack_require__2(2735).PROPER;
            var defineBuiltIn = __webpack_require__2(7509);
            var anObject = __webpack_require__2(3770);
            var $toString = __webpack_require__2(2618);
            var fails = __webpack_require__2(5234);
            var getRegExpFlags = __webpack_require__2(3113);
            var TO_STRING = "toString";
            var RegExpPrototype = RegExp.prototype;
            var nativeToString = RegExpPrototype[TO_STRING];
            var NOT_GENERIC = fails(function() {
              return nativeToString.call({ source: "a", flags: "b" }) !== "/a/b";
            });
            var INCORRECT_NAME = PROPER_FUNCTION_NAME && nativeToString.name !== TO_STRING;
            if (NOT_GENERIC || INCORRECT_NAME) {
              defineBuiltIn(RegExpPrototype, TO_STRING, function toString() {
                var R = anObject(this);
                var pattern = $toString(R.source);
                var flags = $toString(getRegExpFlags(R));
                return "/" + pattern + "/" + flags;
              }, { unsafe: true });
            }
          },
          1130: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var collection = __webpack_require__2(6351);
            var collectionStrong = __webpack_require__2(3231);
            collection("Set", function(init) {
              return function Set2() {
                return init(this, arguments.length ? arguments[0] : void 0);
              };
            }, collectionStrong);
          },
          5668: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            __webpack_require__2(1130);
          },
          7748: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var uncurryThis = __webpack_require__2(6881);
            var notARegExp = __webpack_require__2(836);
            var requireObjectCoercible = __webpack_require__2(9509);
            var toString = __webpack_require__2(2618);
            var correctIsRegExpLogic = __webpack_require__2(6425);
            var stringIndexOf = uncurryThis("".indexOf);
            $({ target: "String", proto: true, forced: !correctIsRegExpLogic("includes") }, {
              includes: function includes(searchString) {
                return !!~stringIndexOf(
                  toString(requireObjectCoercible(this)),
                  toString(notARegExp(searchString)),
                  arguments.length > 1 ? arguments[1] : void 0
                );
              }
            });
          },
          1011: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var charAt = __webpack_require__2(4212).charAt;
            var toString = __webpack_require__2(2618);
            var InternalStateModule = __webpack_require__2(3086);
            var defineIterator = __webpack_require__2(3217);
            var createIterResultObject = __webpack_require__2(6224);
            var STRING_ITERATOR = "String Iterator";
            var setInternalState = InternalStateModule.set;
            var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);
            defineIterator(String, "String", function(iterated) {
              setInternalState(this, {
                type: STRING_ITERATOR,
                string: toString(iterated),
                index: 0
              });
            }, function next() {
              var state = getInternalState(this);
              var string = state.string;
              var index = state.index;
              var point;
              if (index >= string.length)
                return createIterResultObject(void 0, true);
              point = charAt(string, index);
              state.index += point.length;
              return createIterResultObject(point, false);
            });
          },
          9428: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var call = __webpack_require__2(9944);
            var fixRegExpWellKnownSymbolLogic = __webpack_require__2(467);
            var anObject = __webpack_require__2(3770);
            var isNullOrUndefined = __webpack_require__2(4318);
            var toLength = __webpack_require__2(7611);
            var toString = __webpack_require__2(2618);
            var requireObjectCoercible = __webpack_require__2(9509);
            var getMethod = __webpack_require__2(2913);
            var advanceStringIndex = __webpack_require__2(154);
            var regExpExec = __webpack_require__2(4721);
            fixRegExpWellKnownSymbolLogic("match", function(MATCH, nativeMatch, maybeCallNative) {
              return [
                function match(regexp) {
                  var O = requireObjectCoercible(this);
                  var matcher = isNullOrUndefined(regexp) ? void 0 : getMethod(regexp, MATCH);
                  return matcher ? call(matcher, regexp, O) : new RegExp(regexp)[MATCH](toString(O));
                },
                function(string) {
                  var rx = anObject(this);
                  var S = toString(string);
                  var res = maybeCallNative(nativeMatch, rx, S);
                  if (res.done)
                    return res.value;
                  if (!rx.global)
                    return regExpExec(rx, S);
                  var fullUnicode = rx.unicode;
                  rx.lastIndex = 0;
                  var A = [];
                  var n = 0;
                  var result;
                  while ((result = regExpExec(rx, S)) !== null) {
                    var matchStr = toString(result[0]);
                    A[n] = matchStr;
                    if (matchStr === "")
                      rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
                    n++;
                  }
                  return n === 0 ? null : A;
                }
              ];
            });
          },
          3249: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var $padStart = __webpack_require__2(982).start;
            var WEBKIT_BUG = __webpack_require__2(4686);
            $({ target: "String", proto: true, forced: WEBKIT_BUG }, {
              padStart: function padStart(maxLength) {
                return $padStart(this, maxLength, arguments.length > 1 ? arguments[1] : void 0);
              }
            });
          },
          4293: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var apply = __webpack_require__2(646);
            var call = __webpack_require__2(9944);
            var uncurryThis = __webpack_require__2(6881);
            var fixRegExpWellKnownSymbolLogic = __webpack_require__2(467);
            var fails = __webpack_require__2(5234);
            var anObject = __webpack_require__2(3770);
            var isCallable = __webpack_require__2(4188);
            var isNullOrUndefined = __webpack_require__2(4318);
            var toIntegerOrInfinity = __webpack_require__2(6744);
            var toLength = __webpack_require__2(7611);
            var toString = __webpack_require__2(2618);
            var requireObjectCoercible = __webpack_require__2(9509);
            var advanceStringIndex = __webpack_require__2(154);
            var getMethod = __webpack_require__2(2913);
            var getSubstitution = __webpack_require__2(1113);
            var regExpExec = __webpack_require__2(4721);
            var wellKnownSymbol = __webpack_require__2(4282);
            var REPLACE = wellKnownSymbol("replace");
            var max = Math.max;
            var min = Math.min;
            var concat = uncurryThis([].concat);
            var push = uncurryThis([].push);
            var stringIndexOf = uncurryThis("".indexOf);
            var stringSlice = uncurryThis("".slice);
            var maybeToString = function(it) {
              return it === void 0 ? it : String(it);
            };
            var REPLACE_KEEPS_$0 = function() {
              return "a".replace(/./, "$0") === "$0";
            }();
            var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = function() {
              if (/./[REPLACE]) {
                return /./[REPLACE]("a", "$0") === "";
              }
              return false;
            }();
            var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function() {
              var re = /./;
              re.exec = function() {
                var result = [];
                result.groups = { a: "7" };
                return result;
              };
              return "".replace(re, "$<a>") !== "7";
            });
            fixRegExpWellKnownSymbolLogic("replace", function(_, nativeReplace, maybeCallNative) {
              var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? "$" : "$0";
              return [
                function replace(searchValue, replaceValue) {
                  var O = requireObjectCoercible(this);
                  var replacer = isNullOrUndefined(searchValue) ? void 0 : getMethod(searchValue, REPLACE);
                  return replacer ? call(replacer, searchValue, O, replaceValue) : call(nativeReplace, toString(O), searchValue, replaceValue);
                },
                function(string, replaceValue) {
                  var rx = anObject(this);
                  var S = toString(string);
                  if (typeof replaceValue == "string" && stringIndexOf(replaceValue, UNSAFE_SUBSTITUTE) === -1 && stringIndexOf(replaceValue, "$<") === -1) {
                    var res = maybeCallNative(nativeReplace, rx, S, replaceValue);
                    if (res.done)
                      return res.value;
                  }
                  var functionalReplace = isCallable(replaceValue);
                  if (!functionalReplace)
                    replaceValue = toString(replaceValue);
                  var global2 = rx.global;
                  var fullUnicode;
                  if (global2) {
                    fullUnicode = rx.unicode;
                    rx.lastIndex = 0;
                  }
                  var results = [];
                  var result;
                  while (true) {
                    result = regExpExec(rx, S);
                    if (result === null)
                      break;
                    push(results, result);
                    if (!global2)
                      break;
                    var matchStr = toString(result[0]);
                    if (matchStr === "")
                      rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
                  }
                  var accumulatedResult = "";
                  var nextSourcePosition = 0;
                  for (var i = 0; i < results.length; i++) {
                    result = results[i];
                    var matched = toString(result[0]);
                    var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);
                    var captures = [];
                    var replacement;
                    for (var j = 1; j < result.length; j++)
                      push(captures, maybeToString(result[j]));
                    var namedCaptures = result.groups;
                    if (functionalReplace) {
                      var replacerArgs = concat([matched], captures, position, S);
                      if (namedCaptures !== void 0)
                        push(replacerArgs, namedCaptures);
                      replacement = toString(apply(replaceValue, void 0, replacerArgs));
                    } else {
                      replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
                    }
                    if (position >= nextSourcePosition) {
                      accumulatedResult += stringSlice(S, nextSourcePosition, position) + replacement;
                      nextSourcePosition = position + matched.length;
                    }
                  }
                  return accumulatedResult + stringSlice(S, nextSourcePosition);
                }
              ];
            }, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);
          },
          8225: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var call = __webpack_require__2(9944);
            var uncurryThis = __webpack_require__2(6881);
            var fixRegExpWellKnownSymbolLogic = __webpack_require__2(467);
            var anObject = __webpack_require__2(3770);
            var isNullOrUndefined = __webpack_require__2(4318);
            var requireObjectCoercible = __webpack_require__2(9509);
            var speciesConstructor = __webpack_require__2(7964);
            var advanceStringIndex = __webpack_require__2(154);
            var toLength = __webpack_require__2(7611);
            var toString = __webpack_require__2(2618);
            var getMethod = __webpack_require__2(2913);
            var regExpExec = __webpack_require__2(4721);
            var stickyHelpers = __webpack_require__2(5976);
            var fails = __webpack_require__2(5234);
            var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;
            var MAX_UINT32 = 4294967295;
            var min = Math.min;
            var push = uncurryThis([].push);
            var stringSlice = uncurryThis("".slice);
            var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function() {
              var re = /(?:)/;
              var originalExec = re.exec;
              re.exec = function() {
                return originalExec.apply(this, arguments);
              };
              var result = "ab".split(re);
              return result.length !== 2 || result[0] !== "a" || result[1] !== "b";
            });
            var BUGGY = "abbc".split(/(b)*/)[1] === "c" || "test".split(/(?:)/, -1).length !== 4 || "ab".split(/(?:ab)*/).length !== 2 || ".".split(/(.?)(.?)/).length !== 4 || ".".split(/()()/).length > 1 || "".split(/.?/).length;
            fixRegExpWellKnownSymbolLogic("split", function(SPLIT, nativeSplit, maybeCallNative) {
              var internalSplit = "0".split(void 0, 0).length ? function(separator, limit) {
                return separator === void 0 && limit === 0 ? [] : call(nativeSplit, this, separator, limit);
              } : nativeSplit;
              return [
                function split(separator, limit) {
                  var O = requireObjectCoercible(this);
                  var splitter = isNullOrUndefined(separator) ? void 0 : getMethod(separator, SPLIT);
                  return splitter ? call(splitter, separator, O, limit) : call(internalSplit, toString(O), separator, limit);
                },
                function(string, limit) {
                  var rx = anObject(this);
                  var S = toString(string);
                  if (!BUGGY) {
                    var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);
                    if (res.done)
                      return res.value;
                  }
                  var C = speciesConstructor(rx, RegExp);
                  var unicodeMatching = rx.unicode;
                  var flags = (rx.ignoreCase ? "i" : "") + (rx.multiline ? "m" : "") + (rx.unicode ? "u" : "") + (UNSUPPORTED_Y ? "g" : "y");
                  var splitter = new C(UNSUPPORTED_Y ? "^(?:" + rx.source + ")" : rx, flags);
                  var lim = limit === void 0 ? MAX_UINT32 : limit >>> 0;
                  if (lim === 0)
                    return [];
                  if (S.length === 0)
                    return regExpExec(splitter, S) === null ? [S] : [];
                  var p = 0;
                  var q = 0;
                  var A = [];
                  while (q < S.length) {
                    splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;
                    var z = regExpExec(splitter, UNSUPPORTED_Y ? stringSlice(S, q) : S);
                    var e;
                    if (z === null || (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p) {
                      q = advanceStringIndex(S, q, unicodeMatching);
                    } else {
                      push(A, stringSlice(S, p, q));
                      if (A.length === lim)
                        return A;
                      for (var i = 1; i <= z.length - 1; i++) {
                        push(A, z[i]);
                        if (A.length === lim)
                          return A;
                      }
                      q = p = e;
                    }
                  }
                  push(A, stringSlice(S, p));
                  return A;
                }
              ];
            }, BUGGY || !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);
          },
          7152: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var globalThis2 = __webpack_require__2(9117);
            var call = __webpack_require__2(9944);
            var uncurryThis = __webpack_require__2(6881);
            var IS_PURE = __webpack_require__2(1942);
            var DESCRIPTORS = __webpack_require__2(6893);
            var NATIVE_SYMBOL = __webpack_require__2(8944);
            var fails = __webpack_require__2(5234);
            var hasOwn = __webpack_require__2(4418);
            var isPrototypeOf = __webpack_require__2(4578);
            var anObject = __webpack_require__2(3770);
            var toIndexedObject = __webpack_require__2(380);
            var toPropertyKey = __webpack_require__2(2344);
            var $toString = __webpack_require__2(2618);
            var createPropertyDescriptor = __webpack_require__2(9123);
            var nativeObjectCreate = __webpack_require__2(7065);
            var objectKeys = __webpack_require__2(7137);
            var getOwnPropertyNamesModule = __webpack_require__2(5629);
            var getOwnPropertyNamesExternal = __webpack_require__2(3701);
            var getOwnPropertySymbolsModule = __webpack_require__2(156);
            var getOwnPropertyDescriptorModule = __webpack_require__2(9304);
            var definePropertyModule = __webpack_require__2(4466);
            var definePropertiesModule = __webpack_require__2(30);
            var propertyIsEnumerableModule = __webpack_require__2(4416);
            var defineBuiltIn = __webpack_require__2(7509);
            var defineBuiltInAccessor = __webpack_require__2(997);
            var shared = __webpack_require__2(746);
            var sharedKey = __webpack_require__2(168);
            var hiddenKeys = __webpack_require__2(7588);
            var uid = __webpack_require__2(6209);
            var wellKnownSymbol = __webpack_require__2(4282);
            var wrappedWellKnownSymbolModule = __webpack_require__2(346);
            var defineWellKnownSymbol = __webpack_require__2(2860);
            var defineSymbolToPrimitive = __webpack_require__2(7093);
            var setToStringTag = __webpack_require__2(3754);
            var InternalStateModule = __webpack_require__2(3086);
            var $forEach = __webpack_require__2(4104).forEach;
            var HIDDEN = sharedKey("hidden");
            var SYMBOL = "Symbol";
            var PROTOTYPE = "prototype";
            var setInternalState = InternalStateModule.set;
            var getInternalState = InternalStateModule.getterFor(SYMBOL);
            var ObjectPrototype = Object[PROTOTYPE];
            var $Symbol = globalThis2.Symbol;
            var SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];
            var RangeError2 = globalThis2.RangeError;
            var TypeError2 = globalThis2.TypeError;
            var QObject = globalThis2.QObject;
            var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
            var nativeDefineProperty = definePropertyModule.f;
            var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
            var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
            var push = uncurryThis([].push);
            var AllSymbols = shared("symbols");
            var ObjectPrototypeSymbols = shared("op-symbols");
            var WellKnownSymbolsStore = shared("wks");
            var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;
            var fallbackDefineProperty = function(O, P, Attributes) {
              var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
              if (ObjectPrototypeDescriptor)
                delete ObjectPrototype[P];
              nativeDefineProperty(O, P, Attributes);
              if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
                nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
              }
            };
            var setSymbolDescriptor = DESCRIPTORS && fails(function() {
              return nativeObjectCreate(nativeDefineProperty({}, "a", {
                get: function() {
                  return nativeDefineProperty(this, "a", { value: 7 }).a;
                }
              })).a !== 7;
            }) ? fallbackDefineProperty : nativeDefineProperty;
            var wrap = function(tag, description) {
              var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);
              setInternalState(symbol, {
                type: SYMBOL,
                tag,
                description
              });
              if (!DESCRIPTORS)
                symbol.description = description;
              return symbol;
            };
            var $defineProperty = function defineProperty(O, P, Attributes) {
              if (O === ObjectPrototype)
                $defineProperty(ObjectPrototypeSymbols, P, Attributes);
              anObject(O);
              var key = toPropertyKey(P);
              anObject(Attributes);
              if (hasOwn(AllSymbols, key)) {
                if (!Attributes.enumerable) {
                  if (!hasOwn(O, HIDDEN))
                    nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, nativeObjectCreate(null)));
                  O[HIDDEN][key] = true;
                } else {
                  if (hasOwn(O, HIDDEN) && O[HIDDEN][key])
                    O[HIDDEN][key] = false;
                  Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
                }
                return setSymbolDescriptor(O, key, Attributes);
              }
              return nativeDefineProperty(O, key, Attributes);
            };
            var $defineProperties = function defineProperties(O, Properties) {
              anObject(O);
              var properties = toIndexedObject(Properties);
              var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
              $forEach(keys, function(key) {
                if (!DESCRIPTORS || call($propertyIsEnumerable, properties, key))
                  $defineProperty(O, key, properties[key]);
              });
              return O;
            };
            var $create = function create(O, Properties) {
              return Properties === void 0 ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
            };
            var $propertyIsEnumerable = function propertyIsEnumerable(V) {
              var P = toPropertyKey(V);
              var enumerable = call(nativePropertyIsEnumerable, this, P);
              if (this === ObjectPrototype && hasOwn(AllSymbols, P) && !hasOwn(ObjectPrototypeSymbols, P))
                return false;
              return enumerable || !hasOwn(this, P) || !hasOwn(AllSymbols, P) || hasOwn(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
            };
            var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
              var it = toIndexedObject(O);
              var key = toPropertyKey(P);
              if (it === ObjectPrototype && hasOwn(AllSymbols, key) && !hasOwn(ObjectPrototypeSymbols, key))
                return;
              var descriptor = nativeGetOwnPropertyDescriptor(it, key);
              if (descriptor && hasOwn(AllSymbols, key) && !(hasOwn(it, HIDDEN) && it[HIDDEN][key])) {
                descriptor.enumerable = true;
              }
              return descriptor;
            };
            var $getOwnPropertyNames = function getOwnPropertyNames(O) {
              var names = nativeGetOwnPropertyNames(toIndexedObject(O));
              var result = [];
              $forEach(names, function(key) {
                if (!hasOwn(AllSymbols, key) && !hasOwn(hiddenKeys, key))
                  push(result, key);
              });
              return result;
            };
            var $getOwnPropertySymbols = function(O) {
              var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
              var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
              var result = [];
              $forEach(names, function(key) {
                if (hasOwn(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn(ObjectPrototype, key))) {
                  push(result, AllSymbols[key]);
                }
              });
              return result;
            };
            if (!NATIVE_SYMBOL) {
              $Symbol = function Symbol2() {
                if (isPrototypeOf(SymbolPrototype, this))
                  throw new TypeError2("Symbol is not a constructor");
                var description = !arguments.length || arguments[0] === void 0 ? void 0 : $toString(arguments[0]);
                var tag = uid(description);
                var setter = function(value) {
                  var $this = this === void 0 ? globalThis2 : this;
                  if ($this === ObjectPrototype)
                    call(setter, ObjectPrototypeSymbols, value);
                  if (hasOwn($this, HIDDEN) && hasOwn($this[HIDDEN], tag))
                    $this[HIDDEN][tag] = false;
                  var descriptor = createPropertyDescriptor(1, value);
                  try {
                    setSymbolDescriptor($this, tag, descriptor);
                  } catch (error) {
                    if (!(error instanceof RangeError2))
                      throw error;
                    fallbackDefineProperty($this, tag, descriptor);
                  }
                };
                if (DESCRIPTORS && USE_SETTER)
                  setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
                return wrap(tag, description);
              };
              SymbolPrototype = $Symbol[PROTOTYPE];
              defineBuiltIn(SymbolPrototype, "toString", function toString() {
                return getInternalState(this).tag;
              });
              defineBuiltIn($Symbol, "withoutSetter", function(description) {
                return wrap(uid(description), description);
              });
              propertyIsEnumerableModule.f = $propertyIsEnumerable;
              definePropertyModule.f = $defineProperty;
              definePropertiesModule.f = $defineProperties;
              getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
              getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
              getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;
              wrappedWellKnownSymbolModule.f = function(name) {
                return wrap(wellKnownSymbol(name), name);
              };
              if (DESCRIPTORS) {
                defineBuiltInAccessor(SymbolPrototype, "description", {
                  configurable: true,
                  get: function description() {
                    return getInternalState(this).description;
                  }
                });
                if (!IS_PURE) {
                  defineBuiltIn(ObjectPrototype, "propertyIsEnumerable", $propertyIsEnumerable, { unsafe: true });
                }
              }
            }
            $({ global: true, constructor: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {
              Symbol: $Symbol
            });
            $forEach(objectKeys(WellKnownSymbolsStore), function(name) {
              defineWellKnownSymbol(name);
            });
            $({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {
              useSetter: function() {
                USE_SETTER = true;
              },
              useSimple: function() {
                USE_SETTER = false;
              }
            });
            $({ target: "Object", stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {
              create: $create,
              defineProperty: $defineProperty,
              defineProperties: $defineProperties,
              getOwnPropertyDescriptor: $getOwnPropertyDescriptor
            });
            $({ target: "Object", stat: true, forced: !NATIVE_SYMBOL }, {
              getOwnPropertyNames: $getOwnPropertyNames
            });
            defineSymbolToPrimitive();
            setToStringTag($Symbol, SYMBOL);
            hiddenKeys[HIDDEN] = true;
          },
          3510: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var DESCRIPTORS = __webpack_require__2(6893);
            var globalThis2 = __webpack_require__2(9117);
            var uncurryThis = __webpack_require__2(6881);
            var hasOwn = __webpack_require__2(4418);
            var isCallable = __webpack_require__2(4188);
            var isPrototypeOf = __webpack_require__2(4578);
            var toString = __webpack_require__2(2618);
            var defineBuiltInAccessor = __webpack_require__2(997);
            var copyConstructorProperties = __webpack_require__2(8657);
            var NativeSymbol = globalThis2.Symbol;
            var SymbolPrototype = NativeSymbol && NativeSymbol.prototype;
            if (DESCRIPTORS && isCallable(NativeSymbol) && (!("description" in SymbolPrototype) || NativeSymbol().description !== void 0)) {
              var EmptyStringDescriptionStore = {};
              var SymbolWrapper = function Symbol2() {
                var description = arguments.length < 1 || arguments[0] === void 0 ? void 0 : toString(arguments[0]);
                var result = isPrototypeOf(SymbolPrototype, this) ? new NativeSymbol(description) : description === void 0 ? NativeSymbol() : NativeSymbol(description);
                if (description === "")
                  EmptyStringDescriptionStore[result] = true;
                return result;
              };
              copyConstructorProperties(SymbolWrapper, NativeSymbol);
              SymbolWrapper.prototype = SymbolPrototype;
              SymbolPrototype.constructor = SymbolWrapper;
              var NATIVE_SYMBOL = String(NativeSymbol("description detection")) === "Symbol(description detection)";
              var thisSymbolValue = uncurryThis(SymbolPrototype.valueOf);
              var symbolDescriptiveString = uncurryThis(SymbolPrototype.toString);
              var regexp = /^Symbol\((.*)\)[^)]+$/;
              var replace = uncurryThis("".replace);
              var stringSlice = uncurryThis("".slice);
              defineBuiltInAccessor(SymbolPrototype, "description", {
                configurable: true,
                get: function description() {
                  var symbol = thisSymbolValue(this);
                  if (hasOwn(EmptyStringDescriptionStore, symbol))
                    return "";
                  var string = symbolDescriptiveString(symbol);
                  var desc = NATIVE_SYMBOL ? stringSlice(string, 7, -1) : replace(string, regexp, "$1");
                  return desc === "" ? void 0 : desc;
                }
              });
              $({ global: true, constructor: true, forced: true }, {
                Symbol: SymbolWrapper
              });
            }
          },
          691: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var getBuiltIn = __webpack_require__2(5604);
            var hasOwn = __webpack_require__2(4418);
            var toString = __webpack_require__2(2618);
            var shared = __webpack_require__2(746);
            var NATIVE_SYMBOL_REGISTRY = __webpack_require__2(6577);
            var StringToSymbolRegistry = shared("string-to-symbol-registry");
            var SymbolToStringRegistry = shared("symbol-to-string-registry");
            $({ target: "Symbol", stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {
              "for": function(key) {
                var string = toString(key);
                if (hasOwn(StringToSymbolRegistry, string))
                  return StringToSymbolRegistry[string];
                var symbol = getBuiltIn("Symbol")(string);
                StringToSymbolRegistry[string] = symbol;
                SymbolToStringRegistry[symbol] = string;
                return symbol;
              }
            });
          },
          2432: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var defineWellKnownSymbol = __webpack_require__2(2860);
            defineWellKnownSymbol("iterator");
          },
          8070: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            __webpack_require__2(7152);
            __webpack_require__2(691);
            __webpack_require__2(6965);
            __webpack_require__2(4727);
            __webpack_require__2(3786);
          },
          6965: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var $ = __webpack_require__2(5613);
            var hasOwn = __webpack_require__2(4418);
            var isSymbol = __webpack_require__2(6032);
            var tryToString = __webpack_require__2(3174);
            var shared = __webpack_require__2(746);
            var NATIVE_SYMBOL_REGISTRY = __webpack_require__2(6577);
            var SymbolToStringRegistry = shared("symbol-to-string-registry");
            $({ target: "Symbol", stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {
              keyFor: function keyFor(sym) {
                if (!isSymbol(sym))
                  throw new TypeError(tryToString(sym) + " is not a symbol");
                if (hasOwn(SymbolToStringRegistry, sym))
                  return SymbolToStringRegistry[sym];
              }
            });
          },
          5307: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var defineWellKnownSymbol = __webpack_require__2(2860);
            var defineSymbolToPrimitive = __webpack_require__2(7093);
            defineWellKnownSymbol("toPrimitive");
            defineSymbolToPrimitive();
          },
          8867: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var globalThis2 = __webpack_require__2(9117);
            var DOMIterables = __webpack_require__2(9429);
            var DOMTokenListPrototype = __webpack_require__2(7463);
            var forEach = __webpack_require__2(7500);
            var createNonEnumerableProperty = __webpack_require__2(8088);
            var handlePrototype = function(CollectionPrototype) {
              if (CollectionPrototype && CollectionPrototype.forEach !== forEach)
                try {
                  createNonEnumerableProperty(CollectionPrototype, "forEach", forEach);
                } catch (error) {
                  CollectionPrototype.forEach = forEach;
                }
            };
            for (var COLLECTION_NAME in DOMIterables) {
              if (DOMIterables[COLLECTION_NAME]) {
                handlePrototype(globalThis2[COLLECTION_NAME] && globalThis2[COLLECTION_NAME].prototype);
              }
            }
            handlePrototype(DOMTokenListPrototype);
          },
          7010: function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__2) {
            var globalThis2 = __webpack_require__2(9117);
            var DOMIterables = __webpack_require__2(9429);
            var DOMTokenListPrototype = __webpack_require__2(7463);
            var ArrayIteratorMethods = __webpack_require__2(3873);
            var createNonEnumerableProperty = __webpack_require__2(8088);
            var setToStringTag = __webpack_require__2(3754);
            var wellKnownSymbol = __webpack_require__2(4282);
            var ITERATOR = wellKnownSymbol("iterator");
            var ArrayValues = ArrayIteratorMethods.values;
            var handlePrototype = function(CollectionPrototype, COLLECTION_NAME2) {
              if (CollectionPrototype) {
                if (CollectionPrototype[ITERATOR] !== ArrayValues)
                  try {
                    createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
                  } catch (error) {
                    CollectionPrototype[ITERATOR] = ArrayValues;
                  }
                setToStringTag(CollectionPrototype, COLLECTION_NAME2, true);
                if (DOMIterables[COLLECTION_NAME2])
                  for (var METHOD_NAME in ArrayIteratorMethods) {
                    if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME])
                      try {
                        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
                      } catch (error) {
                        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
                      }
                  }
              }
            };
            for (var COLLECTION_NAME in DOMIterables) {
              handlePrototype(globalThis2[COLLECTION_NAME] && globalThis2[COLLECTION_NAME].prototype, COLLECTION_NAME);
            }
            handlePrototype(DOMTokenListPrototype, "DOMTokenList");
          },
          1178: function(__unused_webpack___webpack_module__, __webpack_exports__2, __webpack_require__2) {
            __webpack_require__2.d(__webpack_exports__2, {
              rF: function() {
                return F;
              }
            });
            function n(n2) {
              for (var r2 = arguments.length, t2 = Array(r2 > 1 ? r2 - 1 : 0), e = 1; e < r2; e++)
                t2[e - 1] = arguments[e];
              throw Error("[Immer] minified error nr: " + n2 + (t2.length ? " " + t2.map(function(n3) {
                return "'" + n3 + "'";
              }).join(",") : "") + ". Find the full error at: https://bit.ly/3cXEKWf");
            }
            function r(n2) {
              return !!n2 && !!n2[Q];
            }
            function t(n2) {
              var r2;
              return !!n2 && (function(n3) {
                if (!n3 || "object" != typeof n3)
                  return false;
                var r3 = Object.getPrototypeOf(n3);
                if (null === r3)
                  return true;
                var t2 = Object.hasOwnProperty.call(r3, "constructor") && r3.constructor;
                return t2 === Object || "function" == typeof t2 && Function.toString.call(t2) === Z;
              }(n2) || Array.isArray(n2) || !!n2[L] || !!(null === (r2 = n2.constructor) || void 0 === r2 ? void 0 : r2[L]) || s(n2) || v(n2));
            }
            function i(n2, r2, t2) {
              void 0 === t2 && (t2 = false), 0 === o(n2) ? (t2 ? Object.keys : nn)(n2).forEach(function(e) {
                t2 && "symbol" == typeof e || r2(e, n2[e], n2);
              }) : n2.forEach(function(t3, e) {
                return r2(e, t3, n2);
              });
            }
            function o(n2) {
              var r2 = n2[Q];
              return r2 ? r2.i > 3 ? r2.i - 4 : r2.i : Array.isArray(n2) ? 1 : s(n2) ? 2 : v(n2) ? 3 : 0;
            }
            function u(n2, r2) {
              return 2 === o(n2) ? n2.has(r2) : Object.prototype.hasOwnProperty.call(n2, r2);
            }
            function a(n2, r2) {
              return 2 === o(n2) ? n2.get(r2) : n2[r2];
            }
            function f(n2, r2, t2) {
              var e = o(n2);
              2 === e ? n2.set(r2, t2) : 3 === e ? n2.add(t2) : n2[r2] = t2;
            }
            function c(n2, r2) {
              return n2 === r2 ? 0 !== n2 || 1 / n2 == 1 / r2 : n2 != n2 && r2 != r2;
            }
            function s(n2) {
              return X && n2 instanceof Map;
            }
            function v(n2) {
              return q && n2 instanceof Set;
            }
            function p(n2) {
              return n2.o || n2.t;
            }
            function l(n2) {
              if (Array.isArray(n2))
                return Array.prototype.slice.call(n2);
              var r2 = rn(n2);
              delete r2[Q];
              for (var t2 = nn(r2), e = 0; e < t2.length; e++) {
                var i2 = t2[e], o2 = r2[i2];
                false === o2.writable && (o2.writable = true, o2.configurable = true), (o2.get || o2.set) && (r2[i2] = { configurable: true, writable: true, enumerable: o2.enumerable, value: n2[i2] });
              }
              return Object.create(Object.getPrototypeOf(n2), r2);
            }
            function d(n2, e) {
              return void 0 === e && (e = false), y(n2) || r(n2) || !t(n2) || (o(n2) > 1 && (n2.set = n2.add = n2.clear = n2.delete = h), Object.freeze(n2), e && i(n2, function(n3, r2) {
                return d(r2, true);
              }, true)), n2;
            }
            function h() {
              n(2);
            }
            function y(n2) {
              return null == n2 || "object" != typeof n2 || Object.isFrozen(n2);
            }
            function b(r2) {
              var t2 = tn[r2];
              return t2 || n(18, r2), t2;
            }
            function m(n2, r2) {
              tn[n2] || (tn[n2] = r2);
            }
            function _() {
              return U;
            }
            function j(n2, r2) {
              r2 && (b("Patches"), n2.u = [], n2.s = [], n2.v = r2);
            }
            function g(n2) {
              O(n2), n2.p.forEach(S), n2.p = null;
            }
            function O(n2) {
              n2 === U && (U = n2.l);
            }
            function w(n2) {
              return U = { p: [], l: U, h: n2, m: true, _: 0 };
            }
            function S(n2) {
              var r2 = n2[Q];
              0 === r2.i || 1 === r2.i ? r2.j() : r2.g = true;
            }
            function P(r2, e) {
              e._ = e.p.length;
              var i2 = e.p[0], o2 = void 0 !== r2 && r2 !== i2;
              return e.h.O || b("ES5").S(e, r2, o2), o2 ? (i2[Q].P && (g(e), n(4)), t(r2) && (r2 = M(e, r2), e.l || x(e, r2)), e.u && b("Patches").M(i2[Q].t, r2, e.u, e.s)) : r2 = M(e, i2, []), g(e), e.u && e.v(e.u, e.s), r2 !== H ? r2 : void 0;
            }
            function M(n2, r2, t2) {
              if (y(r2))
                return r2;
              var e = r2[Q];
              if (!e)
                return i(r2, function(i2, o3) {
                  return A(n2, e, r2, i2, o3, t2);
                }, true), r2;
              if (e.A !== n2)
                return r2;
              if (!e.P)
                return x(n2, e.t, true), e.t;
              if (!e.I) {
                e.I = true, e.A._--;
                var o2 = 4 === e.i || 5 === e.i ? e.o = l(e.k) : e.o, u2 = o2, a2 = false;
                3 === e.i && (u2 = new Set(o2), o2.clear(), a2 = true), i(u2, function(r3, i2) {
                  return A(n2, e, o2, r3, i2, t2, a2);
                }), x(n2, o2, false), t2 && n2.u && b("Patches").N(e, t2, n2.u, n2.s);
              }
              return e.o;
            }
            function A(e, i2, o2, a2, c2, s2, v2) {
              if (r(c2)) {
                var p2 = M(e, c2, s2 && i2 && 3 !== i2.i && !u(i2.R, a2) ? s2.concat(a2) : void 0);
                if (f(o2, a2, p2), !r(p2))
                  return;
                e.m = false;
              } else
                v2 && o2.add(c2);
              if (t(c2) && !y(c2)) {
                if (!e.h.D && e._ < 1)
                  return;
                M(e, c2), i2 && i2.A.l || x(e, c2);
              }
            }
            function x(n2, r2, t2) {
              void 0 === t2 && (t2 = false), !n2.l && n2.h.D && n2.m && d(r2, t2);
            }
            function z(n2, r2) {
              var t2 = n2[Q];
              return (t2 ? p(t2) : n2)[r2];
            }
            function I(n2, r2) {
              if (r2 in n2)
                for (var t2 = Object.getPrototypeOf(n2); t2; ) {
                  var e = Object.getOwnPropertyDescriptor(t2, r2);
                  if (e)
                    return e;
                  t2 = Object.getPrototypeOf(t2);
                }
            }
            function k(n2) {
              n2.P || (n2.P = true, n2.l && k(n2.l));
            }
            function E(n2) {
              n2.o || (n2.o = l(n2.t));
            }
            function N(n2, r2, t2) {
              var e = s(r2) ? b("MapSet").F(r2, t2) : v(r2) ? b("MapSet").T(r2, t2) : n2.O ? function(n3, r3) {
                var t3 = Array.isArray(n3), e2 = { i: t3 ? 1 : 0, A: r3 ? r3.A : _(), P: false, I: false, R: {}, l: r3, t: n3, k: null, o: null, j: null, C: false }, i2 = e2, o2 = en;
                t3 && (i2 = [e2], o2 = on);
                var u2 = Proxy.revocable(i2, o2), a2 = u2.revoke, f2 = u2.proxy;
                return e2.k = f2, e2.j = a2, f2;
              }(r2, t2) : b("ES5").J(r2, t2);
              return (t2 ? t2.A : _()).p.push(e), e;
            }
            function R(e) {
              return r(e) || n(22, e), function n2(r2) {
                if (!t(r2))
                  return r2;
                var e2, u2 = r2[Q], c2 = o(r2);
                if (u2) {
                  if (!u2.P && (u2.i < 4 || !b("ES5").K(u2)))
                    return u2.t;
                  u2.I = true, e2 = D(r2, c2), u2.I = false;
                } else
                  e2 = D(r2, c2);
                return i(e2, function(r3, t2) {
                  u2 && a(u2.t, r3) === t2 || f(e2, r3, n2(t2));
                }), 3 === c2 ? new Set(e2) : e2;
              }(e);
            }
            function D(n2, r2) {
              switch (r2) {
                case 2:
                  return new Map(n2);
                case 3:
                  return Array.from(n2);
              }
              return l(n2);
            }
            function F() {
              function t2(n2, r2) {
                var t3 = s2[n2];
                return t3 ? t3.enumerable = r2 : s2[n2] = t3 = { configurable: true, enumerable: r2, get: function() {
                  var r3 = this[Q];
                  return en.get(r3, n2);
                }, set: function(r3) {
                  var t4 = this[Q];
                  en.set(t4, n2, r3);
                } }, t3;
              }
              function e(n2) {
                for (var r2 = n2.length - 1; r2 >= 0; r2--) {
                  var t3 = n2[r2][Q];
                  if (!t3.P)
                    switch (t3.i) {
                      case 5:
                        a2(t3) && k(t3);
                        break;
                      case 4:
                        o2(t3) && k(t3);
                    }
                }
              }
              function o2(n2) {
                for (var r2 = n2.t, t3 = n2.k, e2 = nn(t3), i2 = e2.length - 1; i2 >= 0; i2--) {
                  var o3 = e2[i2];
                  if (o3 !== Q) {
                    var a3 = r2[o3];
                    if (void 0 === a3 && !u(r2, o3))
                      return true;
                    var f2 = t3[o3], s3 = f2 && f2[Q];
                    if (s3 ? s3.t !== a3 : !c(f2, a3))
                      return true;
                  }
                }
                var v2 = !!r2[Q];
                return e2.length !== nn(r2).length + (v2 ? 0 : 1);
              }
              function a2(n2) {
                var r2 = n2.k;
                if (r2.length !== n2.t.length)
                  return true;
                var t3 = Object.getOwnPropertyDescriptor(r2, r2.length - 1);
                if (t3 && !t3.get)
                  return true;
                for (var e2 = 0; e2 < r2.length; e2++)
                  if (!r2.hasOwnProperty(e2))
                    return true;
                return false;
              }
              var s2 = {};
              m("ES5", { J: function(n2, r2) {
                var e2 = Array.isArray(n2), i2 = function(n3, r3) {
                  if (n3) {
                    for (var e3 = Array(r3.length), i3 = 0; i3 < r3.length; i3++)
                      Object.defineProperty(e3, "" + i3, t2(i3, true));
                    return e3;
                  }
                  var o4 = rn(r3);
                  delete o4[Q];
                  for (var u2 = nn(o4), a3 = 0; a3 < u2.length; a3++) {
                    var f2 = u2[a3];
                    o4[f2] = t2(f2, n3 || !!o4[f2].enumerable);
                  }
                  return Object.create(Object.getPrototypeOf(r3), o4);
                }(e2, n2), o3 = { i: e2 ? 5 : 4, A: r2 ? r2.A : _(), P: false, I: false, R: {}, l: r2, t: n2, k: i2, o: null, g: false, C: false };
                return Object.defineProperty(i2, Q, { value: o3, writable: true }), i2;
              }, S: function(n2, t3, o3) {
                o3 ? r(t3) && t3[Q].A === n2 && e(n2.p) : (n2.u && function n3(r2) {
                  if (r2 && "object" == typeof r2) {
                    var t4 = r2[Q];
                    if (t4) {
                      var e2 = t4.t, o4 = t4.k, f2 = t4.R, c2 = t4.i;
                      if (4 === c2)
                        i(o4, function(r3) {
                          r3 !== Q && (void 0 !== e2[r3] || u(e2, r3) ? f2[r3] || n3(o4[r3]) : (f2[r3] = true, k(t4)));
                        }), i(e2, function(n4) {
                          void 0 !== o4[n4] || u(o4, n4) || (f2[n4] = false, k(t4));
                        });
                      else if (5 === c2) {
                        if (a2(t4) && (k(t4), f2.length = true), o4.length < e2.length)
                          for (var s3 = o4.length; s3 < e2.length; s3++)
                            f2[s3] = false;
                        else
                          for (var v2 = e2.length; v2 < o4.length; v2++)
                            f2[v2] = true;
                        for (var p2 = Math.min(o4.length, e2.length), l2 = 0; l2 < p2; l2++)
                          o4.hasOwnProperty(l2) || (f2[l2] = true), void 0 === f2[l2] && n3(o4[l2]);
                      }
                    }
                  }
                }(n2.p[0]), e(n2.p));
              }, K: function(n2) {
                return 4 === n2.i ? o2(n2) : a2(n2);
              } });
            }
            var G, U, W = "undefined" != typeof Symbol && "symbol" == typeof Symbol("x"), X = "undefined" != typeof Map, q = "undefined" != typeof Set, B = "undefined" != typeof Proxy && void 0 !== Proxy.revocable && "undefined" != typeof Reflect, H = W ? Symbol.for("immer-nothing") : ((G = {})["immer-nothing"] = true, G), L = W ? Symbol.for("immer-draftable") : "__$immer_draftable", Q = W ? Symbol.for("immer-state") : "__$immer_state", Z = "" + Object.prototype.constructor, nn = "undefined" != typeof Reflect && Reflect.ownKeys ? Reflect.ownKeys : void 0 !== Object.getOwnPropertySymbols ? function(n2) {
              return Object.getOwnPropertyNames(n2).concat(Object.getOwnPropertySymbols(n2));
            } : Object.getOwnPropertyNames, rn = Object.getOwnPropertyDescriptors || function(n2) {
              var r2 = {};
              return nn(n2).forEach(function(t2) {
                r2[t2] = Object.getOwnPropertyDescriptor(n2, t2);
              }), r2;
            }, tn = {}, en = { get: function(n2, r2) {
              if (r2 === Q)
                return n2;
              var e = p(n2);
              if (!u(e, r2))
                return function(n3, r3, t2) {
                  var e2, i3 = I(r3, t2);
                  return i3 ? "value" in i3 ? i3.value : null === (e2 = i3.get) || void 0 === e2 ? void 0 : e2.call(n3.k) : void 0;
                }(n2, e, r2);
              var i2 = e[r2];
              return n2.I || !t(i2) ? i2 : i2 === z(n2.t, r2) ? (E(n2), n2.o[r2] = N(n2.A.h, i2, n2)) : i2;
            }, has: function(n2, r2) {
              return r2 in p(n2);
            }, ownKeys: function(n2) {
              return Reflect.ownKeys(p(n2));
            }, set: function(n2, r2, t2) {
              var e = I(p(n2), r2);
              if (null == e ? void 0 : e.set)
                return e.set.call(n2.k, t2), true;
              if (!n2.P) {
                var i2 = z(p(n2), r2), o2 = null == i2 ? void 0 : i2[Q];
                if (o2 && o2.t === t2)
                  return n2.o[r2] = t2, n2.R[r2] = false, true;
                if (c(t2, i2) && (void 0 !== t2 || u(n2.t, r2)))
                  return true;
                E(n2), k(n2);
              }
              return n2.o[r2] === t2 && (void 0 !== t2 || r2 in n2.o) || Number.isNaN(t2) && Number.isNaN(n2.o[r2]) || (n2.o[r2] = t2, n2.R[r2] = true), true;
            }, deleteProperty: function(n2, r2) {
              return void 0 !== z(n2.t, r2) || r2 in n2.t ? (n2.R[r2] = false, E(n2), k(n2)) : delete n2.R[r2], n2.o && delete n2.o[r2], true;
            }, getOwnPropertyDescriptor: function(n2, r2) {
              var t2 = p(n2), e = Reflect.getOwnPropertyDescriptor(t2, r2);
              return e ? { writable: true, configurable: 1 !== n2.i || "length" !== r2, enumerable: e.enumerable, value: t2[r2] } : e;
            }, defineProperty: function() {
              n(11);
            }, getPrototypeOf: function(n2) {
              return Object.getPrototypeOf(n2.t);
            }, setPrototypeOf: function() {
              n(12);
            } }, on = {};
            i(en, function(n2, r2) {
              on[n2] = function() {
                return arguments[0] = arguments[0][0], r2.apply(this, arguments);
              };
            }), on.deleteProperty = function(r2, t2) {
              return on.set.call(this, r2, t2, void 0);
            }, on.set = function(r2, t2, e) {
              return en.set.call(this, r2[0], t2, e, r2[0]);
            };
            var un = function() {
              function e(r2) {
                var e2 = this;
                this.O = B, this.D = true, this.produce = function(r3, i3, o2) {
                  if ("function" == typeof r3 && "function" != typeof i3) {
                    var u2 = i3;
                    i3 = r3;
                    var a2 = e2;
                    return function(n2) {
                      var r4 = this;
                      void 0 === n2 && (n2 = u2);
                      for (var t2 = arguments.length, e3 = Array(t2 > 1 ? t2 - 1 : 0), o3 = 1; o3 < t2; o3++)
                        e3[o3 - 1] = arguments[o3];
                      return a2.produce(n2, function(n3) {
                        var t3;
                        return (t3 = i3).call.apply(t3, [r4, n3].concat(e3));
                      });
                    };
                  }
                  var f2;
                  if ("function" != typeof i3 && n(6), void 0 !== o2 && "function" != typeof o2 && n(7), t(r3)) {
                    var c2 = w(e2), s2 = N(e2, r3, void 0), v2 = true;
                    try {
                      f2 = i3(s2), v2 = false;
                    } finally {
                      v2 ? g(c2) : O(c2);
                    }
                    return "undefined" != typeof Promise && f2 instanceof Promise ? f2.then(function(n2) {
                      return j(c2, o2), P(n2, c2);
                    }, function(n2) {
                      throw g(c2), n2;
                    }) : (j(c2, o2), P(f2, c2));
                  }
                  if (!r3 || "object" != typeof r3) {
                    if (void 0 === (f2 = i3(r3)) && (f2 = r3), f2 === H && (f2 = void 0), e2.D && d(f2, true), o2) {
                      var p2 = [], l2 = [];
                      b("Patches").M(r3, f2, p2, l2), o2(p2, l2);
                    }
                    return f2;
                  }
                  n(21, r3);
                }, this.produceWithPatches = function(n2, r3) {
                  if ("function" == typeof n2)
                    return function(r4) {
                      for (var t3 = arguments.length, i4 = Array(t3 > 1 ? t3 - 1 : 0), o3 = 1; o3 < t3; o3++)
                        i4[o3 - 1] = arguments[o3];
                      return e2.produceWithPatches(r4, function(r5) {
                        return n2.apply(void 0, [r5].concat(i4));
                      });
                    };
                  var t2, i3, o2 = e2.produce(n2, r3, function(n3, r4) {
                    t2 = n3, i3 = r4;
                  });
                  return "undefined" != typeof Promise && o2 instanceof Promise ? o2.then(function(n3) {
                    return [n3, t2, i3];
                  }) : [o2, t2, i3];
                }, "boolean" == typeof (null == r2 ? void 0 : r2.useProxies) && this.setUseProxies(r2.useProxies), "boolean" == typeof (null == r2 ? void 0 : r2.autoFreeze) && this.setAutoFreeze(r2.autoFreeze);
              }
              var i2 = e.prototype;
              return i2.createDraft = function(e2) {
                t(e2) || n(8), r(e2) && (e2 = R(e2));
                var i3 = w(this), o2 = N(this, e2, void 0);
                return o2[Q].C = true, O(i3), o2;
              }, i2.finishDraft = function(r2, t2) {
                var e2 = r2 && r2[Q];
                var i3 = e2.A;
                return j(i3, t2), P(void 0, i3);
              }, i2.setAutoFreeze = function(n2) {
                this.D = n2;
              }, i2.setUseProxies = function(r2) {
                r2 && !B && n(20), this.O = r2;
              }, i2.applyPatches = function(n2, t2) {
                var e2;
                for (e2 = t2.length - 1; e2 >= 0; e2--) {
                  var i3 = t2[e2];
                  if (0 === i3.path.length && "replace" === i3.op) {
                    n2 = i3.value;
                    break;
                  }
                }
                e2 > -1 && (t2 = t2.slice(e2 + 1));
                var o2 = b("Patches").$;
                return r(n2) ? o2(n2, t2) : this.produce(n2, function(n3) {
                  return o2(n3, t2);
                });
              }, e;
            }(), an = new un(), fn = an.produce;
            an.produceWithPatches.bind(an);
            an.setAutoFreeze.bind(an);
            an.setUseProxies.bind(an);
            an.applyPatches.bind(an);
            an.createDraft.bind(an);
            an.finishDraft.bind(an);
            __webpack_exports__2.Ay = fn;
          }
        };
        var __webpack_module_cache__ = {};
        function __webpack_require__(moduleId) {
          var cachedModule = __webpack_module_cache__[moduleId];
          if (cachedModule !== void 0) {
            return cachedModule.exports;
          }
          var module3 = __webpack_module_cache__[moduleId] = {
            exports: {}
          };
          __webpack_modules__[moduleId].call(module3.exports, module3, module3.exports, __webpack_require__);
          return module3.exports;
        }
        !function() {
          __webpack_require__.n = function(module3) {
            var getter = module3 && module3.__esModule ? function() {
              return module3["default"];
            } : function() {
              return module3;
            };
            __webpack_require__.d(getter, { a: getter });
            return getter;
          };
        }();
        !function() {
          __webpack_require__.d = function(exports3, definition) {
            for (var key in definition) {
              if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports3, key)) {
                Object.defineProperty(exports3, key, { enumerable: true, get: definition[key] });
              }
            }
          };
        }();
        !function() {
          __webpack_require__.g = function() {
            if (typeof globalThis === "object")
              return globalThis;
            try {
              return this || new Function("return this")();
            } catch (e) {
              if (typeof window === "object")
                return window;
            }
          }();
        }();
        !function() {
          __webpack_require__.o = function(obj, prop) {
            return Object.prototype.hasOwnProperty.call(obj, prop);
          };
        }();
        var __webpack_exports__ = {};
        !function() {
          var immer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1178);
          (0, immer__WEBPACK_IMPORTED_MODULE_0__.rF)();
        }();
        !function() {
          __webpack_require__.d(__webpack_exports__, {
            "default": function() {
              return src_0;
            }
          });
          __webpack_require__(8070);
          __webpack_require__(3510);
          __webpack_require__(2432);
          __webpack_require__(5307);
          __webpack_require__(7107);
          __webpack_require__(3252);
          __webpack_require__(3873);
          __webpack_require__(595);
          __webpack_require__(3185);
          __webpack_require__(2380);
          __webpack_require__(630);
          __webpack_require__(2353);
          __webpack_require__(7270);
          __webpack_require__(1011);
          __webpack_require__(7010);
          var n, preact_module_l, u, i, o, r, f, e, c, s, a, h = {}, p = [], v = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i, y = Array.isArray;
          function d(n2, l2) {
            for (var u2 in l2)
              n2[u2] = l2[u2];
            return n2;
          }
          function w(n2) {
            var l2 = n2.parentNode;
            l2 && l2.removeChild(n2);
          }
          function _(l2, u2, t) {
            var i2, o2, r2, f2 = {};
            for (r2 in u2)
              "key" == r2 ? i2 = u2[r2] : "ref" == r2 ? o2 = u2[r2] : f2[r2] = u2[r2];
            if (arguments.length > 2 && (f2.children = arguments.length > 3 ? n.call(arguments, 2) : t), "function" == typeof l2 && null != l2.defaultProps)
              for (r2 in l2.defaultProps)
                void 0 === f2[r2] && (f2[r2] = l2.defaultProps[r2]);
            return g(l2, f2, i2, o2, null);
          }
          function g(n2, t, i2, o2, r2) {
            var f2 = { type: n2, props: t, key: i2, ref: o2, __k: null, __: null, __b: 0, __e: null, __d: void 0, __c: null, constructor: void 0, __v: null == r2 ? ++u : r2, __i: -1, __u: 0 };
            return null == r2 && null != preact_module_l.vnode && preact_module_l.vnode(f2), f2;
          }
          function preact_module_k(n2) {
            return n2.children;
          }
          function b(n2, l2) {
            this.props = n2, this.context = l2;
          }
          function x(n2, l2) {
            if (null == l2)
              return n2.__ ? x(n2.__, n2.__i + 1) : null;
            for (var u2; l2 < n2.__k.length; l2++)
              if (null != (u2 = n2.__k[l2]) && null != u2.__e)
                return u2.__e;
            return "function" == typeof n2.type ? x(n2) : null;
          }
          function C(n2) {
            var l2, u2;
            if (null != (n2 = n2.__) && null != n2.__c) {
              for (n2.__e = n2.__c.base = null, l2 = 0; l2 < n2.__k.length; l2++)
                if (null != (u2 = n2.__k[l2]) && null != u2.__e) {
                  n2.__e = n2.__c.base = u2.__e;
                  break;
                }
              return C(n2);
            }
          }
          function M(n2) {
            (!n2.__d && (n2.__d = true) && i.push(n2) && !P.__r++ || o !== preact_module_l.debounceRendering) && ((o = preact_module_l.debounceRendering) || r)(P);
          }
          function P() {
            var n2, u2, t, o2, r2, e2, c2, s2;
            for (i.sort(f); n2 = i.shift(); )
              n2.__d && (u2 = i.length, o2 = void 0, e2 = (r2 = (t = n2).__v).__e, c2 = [], s2 = [], t.__P && ((o2 = d({}, r2)).__v = r2.__v + 1, preact_module_l.vnode && preact_module_l.vnode(o2), O(t.__P, o2, r2, t.__n, t.__P.namespaceURI, 32 & r2.__u ? [e2] : null, c2, null == e2 ? x(r2) : e2, !!(32 & r2.__u), s2), o2.__v = r2.__v, o2.__.__k[o2.__i] = o2, j(c2, o2, s2), o2.__e != e2 && C(o2)), i.length > u2 && i.sort(f));
            P.__r = 0;
          }
          function S(n2, l2, u2, t, i2, o2, r2, f2, e2, c2, s2) {
            var a2, v2, y2, d2, w2, _2 = t && t.__k || p, g2 = l2.length;
            for (u2.__d = e2, $(u2, l2, _2), e2 = u2.__d, a2 = 0; a2 < g2; a2++)
              null != (y2 = u2.__k[a2]) && "boolean" != typeof y2 && "function" != typeof y2 && (v2 = -1 === y2.__i ? h : _2[y2.__i] || h, y2.__i = a2, O(n2, y2, v2, i2, o2, r2, f2, e2, c2, s2), d2 = y2.__e, y2.ref && v2.ref != y2.ref && (v2.ref && N(v2.ref, null, y2), s2.push(y2.ref, y2.__c || d2, y2)), null == w2 && null != d2 && (w2 = d2), 65536 & y2.__u || v2.__k === y2.__k ? e2 = I(y2, e2, n2) : "function" == typeof y2.type && void 0 !== y2.__d ? e2 = y2.__d : d2 && (e2 = d2.nextSibling), y2.__d = void 0, y2.__u &= -196609);
            u2.__d = e2, u2.__e = w2;
          }
          function $(n2, l2, u2) {
            var t, i2, o2, r2, f2, e2 = l2.length, c2 = u2.length, s2 = c2, a2 = 0;
            for (n2.__k = [], t = 0; t < e2; t++)
              r2 = t + a2, null != (i2 = n2.__k[t] = null == (i2 = l2[t]) || "boolean" == typeof i2 || "function" == typeof i2 ? null : "string" == typeof i2 || "number" == typeof i2 || "bigint" == typeof i2 || i2.constructor == String ? g(null, i2, null, null, null) : y(i2) ? g(preact_module_k, { children: i2 }, null, null, null) : void 0 === i2.constructor && i2.__b > 0 ? g(i2.type, i2.props, i2.key, i2.ref ? i2.ref : null, i2.__v) : i2) ? (i2.__ = n2, i2.__b = n2.__b + 1, f2 = L(i2, u2, r2, s2), i2.__i = f2, o2 = null, -1 !== f2 && (s2--, (o2 = u2[f2]) && (o2.__u |= 131072)), null == o2 || null === o2.__v ? (-1 == f2 && a2--, "function" != typeof i2.type && (i2.__u |= 65536)) : f2 !== r2 && (f2 == r2 - 1 ? a2-- : f2 == r2 + 1 ? a2++ : f2 > r2 ? s2 > e2 - r2 ? a2 += f2 - r2 : a2-- : f2 < r2 && (f2 == r2 - a2 ? a2 -= f2 - r2 : a2++), f2 !== t + a2 && (i2.__u |= 65536))) : (o2 = u2[r2]) && null == o2.key && o2.__e && 0 == (131072 & o2.__u) && (o2.__e == n2.__d && (n2.__d = x(o2)), V(o2, o2, false), u2[r2] = null, s2--);
            if (s2)
              for (t = 0; t < c2; t++)
                null != (o2 = u2[t]) && 0 == (131072 & o2.__u) && (o2.__e == n2.__d && (n2.__d = x(o2)), V(o2, o2));
          }
          function I(n2, l2, u2) {
            var t, i2;
            if ("function" == typeof n2.type) {
              for (t = n2.__k, i2 = 0; t && i2 < t.length; i2++)
                t[i2] && (t[i2].__ = n2, l2 = I(t[i2], l2, u2));
              return l2;
            }
            n2.__e != l2 && (l2 && n2.type && !u2.contains(l2) && (l2 = x(n2)), u2.insertBefore(n2.__e, l2 || null), l2 = n2.__e);
            do {
              l2 = l2 && l2.nextSibling;
            } while (null != l2 && 8 === l2.nodeType);
            return l2;
          }
          function H(n2, l2) {
            return l2 = l2 || [], null == n2 || "boolean" == typeof n2 || (y(n2) ? n2.some(function(n3) {
              H(n3, l2);
            }) : l2.push(n2)), l2;
          }
          function L(n2, l2, u2, t) {
            var i2 = n2.key, o2 = n2.type, r2 = u2 - 1, f2 = u2 + 1, e2 = l2[u2];
            if (null === e2 || e2 && i2 == e2.key && o2 === e2.type && 0 == (131072 & e2.__u))
              return u2;
            if (t > (null != e2 && 0 == (131072 & e2.__u) ? 1 : 0))
              for (; r2 >= 0 || f2 < l2.length; ) {
                if (r2 >= 0) {
                  if ((e2 = l2[r2]) && 0 == (131072 & e2.__u) && i2 == e2.key && o2 === e2.type)
                    return r2;
                  r2--;
                }
                if (f2 < l2.length) {
                  if ((e2 = l2[f2]) && 0 == (131072 & e2.__u) && i2 == e2.key && o2 === e2.type)
                    return f2;
                  f2++;
                }
              }
            return -1;
          }
          function T(n2, l2, u2) {
            "-" === l2[0] ? n2.setProperty(l2, null == u2 ? "" : u2) : n2[l2] = null == u2 ? "" : "number" != typeof u2 || v.test(l2) ? u2 : u2 + "px";
          }
          function A(n2, l2, u2, t, i2) {
            var o2;
            n:
              if ("style" === l2)
                if ("string" == typeof u2)
                  n2.style.cssText = u2;
                else {
                  if ("string" == typeof t && (n2.style.cssText = t = ""), t)
                    for (l2 in t)
                      u2 && l2 in u2 || T(n2.style, l2, "");
                  if (u2)
                    for (l2 in u2)
                      t && u2[l2] === t[l2] || T(n2.style, l2, u2[l2]);
                }
              else if ("o" === l2[0] && "n" === l2[1])
                o2 = l2 !== (l2 = l2.replace(/(PointerCapture)$|Capture$/i, "$1")), l2 = l2.toLowerCase() in n2 || "onFocusOut" === l2 || "onFocusIn" === l2 ? l2.toLowerCase().slice(2) : l2.slice(2), n2.l || (n2.l = {}), n2.l[l2 + o2] = u2, u2 ? t ? u2.u = t.u : (u2.u = e, n2.addEventListener(l2, o2 ? s : c, o2)) : n2.removeEventListener(l2, o2 ? s : c, o2);
              else {
                if ("http://www.w3.org/2000/svg" == i2)
                  l2 = l2.replace(/xlink(H|:h)/, "h").replace(/sName$/, "s");
                else if ("width" != l2 && "height" != l2 && "href" != l2 && "list" != l2 && "form" != l2 && "tabIndex" != l2 && "download" != l2 && "rowSpan" != l2 && "colSpan" != l2 && "role" != l2 && "popover" != l2 && l2 in n2)
                  try {
                    n2[l2] = null == u2 ? "" : u2;
                    break n;
                  } catch (n3) {
                  }
                "function" == typeof u2 || (null == u2 || false === u2 && "-" !== l2[4] ? n2.removeAttribute(l2) : n2.setAttribute(l2, "popover" == l2 && 1 == u2 ? "" : u2));
              }
          }
          function F(n2) {
            return function(u2) {
              if (this.l) {
                var t = this.l[u2.type + n2];
                if (null == u2.t)
                  u2.t = e++;
                else if (u2.t < t.u)
                  return;
                return t(preact_module_l.event ? preact_module_l.event(u2) : u2);
              }
            };
          }
          function O(n2, u2, t, i2, o2, r2, f2, e2, c2, s2) {
            var a2, h2, p2, v2, w2, _2, g2, m, x2, C2, M2, P2, $2, I2, H2, L2, T2 = u2.type;
            if (void 0 !== u2.constructor)
              return null;
            128 & t.__u && (c2 = !!(32 & t.__u), r2 = [e2 = u2.__e = t.__e]), (a2 = preact_module_l.__b) && a2(u2);
            n:
              if ("function" == typeof T2)
                try {
                  if (m = u2.props, x2 = "prototype" in T2 && T2.prototype.render, C2 = (a2 = T2.contextType) && i2[a2.__c], M2 = a2 ? C2 ? C2.props.value : a2.__ : i2, t.__c ? g2 = (h2 = u2.__c = t.__c).__ = h2.__E : (x2 ? u2.__c = h2 = new T2(m, M2) : (u2.__c = h2 = new b(m, M2), h2.constructor = T2, h2.render = q), C2 && C2.sub(h2), h2.props = m, h2.state || (h2.state = {}), h2.context = M2, h2.__n = i2, p2 = h2.__d = true, h2.__h = [], h2._sb = []), x2 && null == h2.__s && (h2.__s = h2.state), x2 && null != T2.getDerivedStateFromProps && (h2.__s == h2.state && (h2.__s = d({}, h2.__s)), d(h2.__s, T2.getDerivedStateFromProps(m, h2.__s))), v2 = h2.props, w2 = h2.state, h2.__v = u2, p2)
                    x2 && null == T2.getDerivedStateFromProps && null != h2.componentWillMount && h2.componentWillMount(), x2 && null != h2.componentDidMount && h2.__h.push(h2.componentDidMount);
                  else {
                    if (x2 && null == T2.getDerivedStateFromProps && m !== v2 && null != h2.componentWillReceiveProps && h2.componentWillReceiveProps(m, M2), !h2.__e && (null != h2.shouldComponentUpdate && false === h2.shouldComponentUpdate(m, h2.__s, M2) || u2.__v === t.__v)) {
                      for (u2.__v !== t.__v && (h2.props = m, h2.state = h2.__s, h2.__d = false), u2.__e = t.__e, u2.__k = t.__k, u2.__k.forEach(function(n3) {
                        n3 && (n3.__ = u2);
                      }), P2 = 0; P2 < h2._sb.length; P2++)
                        h2.__h.push(h2._sb[P2]);
                      h2._sb = [], h2.__h.length && f2.push(h2);
                      break n;
                    }
                    null != h2.componentWillUpdate && h2.componentWillUpdate(m, h2.__s, M2), x2 && null != h2.componentDidUpdate && h2.__h.push(function() {
                      h2.componentDidUpdate(v2, w2, _2);
                    });
                  }
                  if (h2.context = M2, h2.props = m, h2.__P = n2, h2.__e = false, $2 = preact_module_l.__r, I2 = 0, x2) {
                    for (h2.state = h2.__s, h2.__d = false, $2 && $2(u2), a2 = h2.render(h2.props, h2.state, h2.context), H2 = 0; H2 < h2._sb.length; H2++)
                      h2.__h.push(h2._sb[H2]);
                    h2._sb = [];
                  } else
                    do {
                      h2.__d = false, $2 && $2(u2), a2 = h2.render(h2.props, h2.state, h2.context), h2.state = h2.__s;
                    } while (h2.__d && ++I2 < 25);
                  h2.state = h2.__s, null != h2.getChildContext && (i2 = d(d({}, i2), h2.getChildContext())), x2 && !p2 && null != h2.getSnapshotBeforeUpdate && (_2 = h2.getSnapshotBeforeUpdate(v2, w2)), S(n2, y(L2 = null != a2 && a2.type === preact_module_k && null == a2.key ? a2.props.children : a2) ? L2 : [L2], u2, t, i2, o2, r2, f2, e2, c2, s2), h2.base = u2.__e, u2.__u &= -161, h2.__h.length && f2.push(h2), g2 && (h2.__E = h2.__ = null);
                } catch (n3) {
                  if (u2.__v = null, c2 || null != r2) {
                    for (u2.__u |= c2 ? 160 : 32; e2 && 8 === e2.nodeType && e2.nextSibling; )
                      e2 = e2.nextSibling;
                    r2[r2.indexOf(e2)] = null, u2.__e = e2;
                  } else
                    u2.__e = t.__e, u2.__k = t.__k;
                  preact_module_l.__e(n3, u2, t);
                }
              else
                null == r2 && u2.__v === t.__v ? (u2.__k = t.__k, u2.__e = t.__e) : u2.__e = z(t.__e, u2, t, i2, o2, r2, f2, c2, s2);
            (a2 = preact_module_l.diffed) && a2(u2);
          }
          function j(n2, u2, t) {
            u2.__d = void 0;
            for (var i2 = 0; i2 < t.length; i2++)
              N(t[i2], t[++i2], t[++i2]);
            preact_module_l.__c && preact_module_l.__c(u2, n2), n2.some(function(u3) {
              try {
                n2 = u3.__h, u3.__h = [], n2.some(function(n3) {
                  n3.call(u3);
                });
              } catch (n3) {
                preact_module_l.__e(n3, u3.__v);
              }
            });
          }
          function z(l2, u2, t, i2, o2, r2, f2, e2, c2) {
            var s2, a2, p2, v2, d2, _2, g2, m = t.props, k2 = u2.props, b2 = u2.type;
            if ("svg" === b2 ? o2 = "http://www.w3.org/2000/svg" : "math" === b2 ? o2 = "http://www.w3.org/1998/Math/MathML" : o2 || (o2 = "http://www.w3.org/1999/xhtml"), null != r2) {
              for (s2 = 0; s2 < r2.length; s2++)
                if ((d2 = r2[s2]) && "setAttribute" in d2 == !!b2 && (b2 ? d2.localName === b2 : 3 === d2.nodeType)) {
                  l2 = d2, r2[s2] = null;
                  break;
                }
            }
            if (null == l2) {
              if (null === b2)
                return document.createTextNode(k2);
              l2 = document.createElementNS(o2, b2, k2.is && k2), r2 = null, e2 = false;
            }
            if (null === b2)
              m === k2 || e2 && l2.data === k2 || (l2.data = k2);
            else {
              if (r2 = r2 && n.call(l2.childNodes), m = t.props || h, !e2 && null != r2)
                for (m = {}, s2 = 0; s2 < l2.attributes.length; s2++)
                  m[(d2 = l2.attributes[s2]).name] = d2.value;
              for (s2 in m)
                if (d2 = m[s2], "children" == s2)
                  ;
                else if ("dangerouslySetInnerHTML" == s2)
                  p2 = d2;
                else if ("key" !== s2 && !(s2 in k2)) {
                  if ("value" == s2 && "defaultValue" in k2 || "checked" == s2 && "defaultChecked" in k2)
                    continue;
                  A(l2, s2, null, d2, o2);
                }
              for (s2 in k2)
                d2 = k2[s2], "children" == s2 ? v2 = d2 : "dangerouslySetInnerHTML" == s2 ? a2 = d2 : "value" == s2 ? _2 = d2 : "checked" == s2 ? g2 = d2 : "key" === s2 || e2 && "function" != typeof d2 || m[s2] === d2 || A(l2, s2, d2, m[s2], o2);
              if (a2)
                e2 || p2 && (a2.__html === p2.__html || a2.__html === l2.innerHTML) || (l2.innerHTML = a2.__html), u2.__k = [];
              else if (p2 && (l2.innerHTML = ""), S(l2, y(v2) ? v2 : [v2], u2, t, i2, "foreignObject" === b2 ? "http://www.w3.org/1999/xhtml" : o2, r2, f2, r2 ? r2[0] : t.__k && x(t, 0), e2, c2), null != r2)
                for (s2 = r2.length; s2--; )
                  null != r2[s2] && w(r2[s2]);
              e2 || (s2 = "value", void 0 !== _2 && (_2 !== l2[s2] || "progress" === b2 && !_2 || "option" === b2 && _2 !== m[s2]) && A(l2, s2, _2, m[s2], o2), s2 = "checked", void 0 !== g2 && g2 !== l2[s2] && A(l2, s2, g2, m[s2], o2));
            }
            return l2;
          }
          function N(n2, u2, t) {
            try {
              if ("function" == typeof n2) {
                var i2 = "function" == typeof n2.__u;
                i2 && n2.__u(), i2 && null == u2 || (n2.__u = n2(u2));
              } else
                n2.current = u2;
            } catch (n3) {
              preact_module_l.__e(n3, t);
            }
          }
          function V(n2, u2, t) {
            var i2, o2;
            if (preact_module_l.unmount && preact_module_l.unmount(n2), (i2 = n2.ref) && (i2.current && i2.current !== n2.__e || N(i2, null, u2)), null != (i2 = n2.__c)) {
              if (i2.componentWillUnmount)
                try {
                  i2.componentWillUnmount();
                } catch (n3) {
                  preact_module_l.__e(n3, u2);
                }
              i2.base = i2.__P = null;
            }
            if (i2 = n2.__k)
              for (o2 = 0; o2 < i2.length; o2++)
                i2[o2] && V(i2[o2], u2, t || "function" != typeof n2.type);
            t || null == n2.__e || w(n2.__e), n2.__c = n2.__ = n2.__e = n2.__d = void 0;
          }
          function q(n2, l2, u2) {
            return this.constructor(n2, u2);
          }
          function B(u2, t, i2) {
            var o2, r2, f2, e2;
            preact_module_l.__ && preact_module_l.__(u2, t), r2 = (o2 = "function" == typeof i2) ? null : i2 && i2.__k || t.__k, f2 = [], e2 = [], O(t, u2 = (!o2 && i2 || t).__k = _(preact_module_k, null, [u2]), r2 || h, h, t.namespaceURI, !o2 && i2 ? [i2] : r2 ? null : t.firstChild ? n.call(t.childNodes) : null, f2, !o2 && i2 ? i2 : r2 ? r2.__e : t.firstChild, o2, e2), j(f2, u2, e2);
          }
          function E(l2, u2, t) {
            var i2, o2, r2, f2, e2 = d({}, l2.props);
            for (r2 in l2.type && l2.type.defaultProps && (f2 = l2.type.defaultProps), u2)
              "key" == r2 ? i2 = u2[r2] : "ref" == r2 ? o2 = u2[r2] : e2[r2] = void 0 === u2[r2] && void 0 !== f2 ? f2[r2] : u2[r2];
            return arguments.length > 2 && (e2.children = arguments.length > 3 ? n.call(arguments, 2) : t), g(l2.type, e2, i2 || l2.key, o2 || l2.ref, null);
          }
          function G(n2, l2) {
            var u2 = { __c: l2 = "__cC" + a++, __: n2, Consumer: function(n3, l3) {
              return n3.children(l3);
            }, Provider: function(n3) {
              var u3, t;
              return this.getChildContext || (u3 = [], (t = {})[l2] = this, this.getChildContext = function() {
                return t;
              }, this.componentWillUnmount = function() {
                u3 = null;
              }, this.shouldComponentUpdate = function(n4) {
                this.props.value !== n4.value && u3.some(function(n5) {
                  n5.__e = true, M(n5);
                });
              }, this.sub = function(n4) {
                u3.push(n4);
                var l3 = n4.componentWillUnmount;
                n4.componentWillUnmount = function() {
                  u3 && u3.splice(u3.indexOf(n4), 1), l3 && l3.call(n4);
                };
              }), n3.children;
            } };
            return u2.Provider.__ = u2.Consumer.contextType = u2;
          }
          n = p.slice, preact_module_l = { __e: function(n2, l2, u2, t) {
            for (var i2, o2, r2; l2 = l2.__; )
              if ((i2 = l2.__c) && !i2.__)
                try {
                  if ((o2 = i2.constructor) && null != o2.getDerivedStateFromError && (i2.setState(o2.getDerivedStateFromError(n2)), r2 = i2.__d), null != i2.componentDidCatch && (i2.componentDidCatch(n2, t || {}), r2 = i2.__d), r2)
                    return i2.__E = i2;
                } catch (l3) {
                  n2 = l3;
                }
            throw n2;
          } }, u = 0, b.prototype.setState = function(n2, l2) {
            var u2;
            u2 = null != this.__s && this.__s !== this.state ? this.__s : this.__s = d({}, this.state), "function" == typeof n2 && (n2 = n2(d({}, u2), this.props)), n2 && d(u2, n2), null != n2 && this.__v && (l2 && this._sb.push(l2), M(this));
          }, b.prototype.forceUpdate = function(n2) {
            this.__v && (this.__e = true, n2 && this.__h.push(n2), M(this));
          }, b.prototype.render = preact_module_k, i = [], r = "function" == typeof Promise ? Promise.prototype.then.bind(Promise.resolve()) : setTimeout, f = function(n2, l2) {
            return n2.__v.__b - l2.__v.__b;
          }, P.__r = 0, e = 0, c = F(false), s = F(true), a = 0;
          var hooks_module_t, hooks_module_r, hooks_module_u, hooks_module_i, hooks_module_o = 0, hooks_module_f = [], hooks_module_c = preact_module_l, hooks_module_e = hooks_module_c.__b, hooks_module_a = hooks_module_c.__r, hooks_module_v = hooks_module_c.diffed, l = hooks_module_c.__c, hooks_module_m = hooks_module_c.unmount, hooks_module_s = hooks_module_c.__;
          function hooks_module_d(n2, t) {
            hooks_module_c.__h && hooks_module_c.__h(hooks_module_r, n2, hooks_module_o || t), hooks_module_o = 0;
            var u2 = hooks_module_r.__H || (hooks_module_r.__H = { __: [], __h: [] });
            return n2 >= u2.__.length && u2.__.push({}), u2.__[n2];
          }
          function hooks_module_h(n2) {
            return hooks_module_o = 1, hooks_module_p(hooks_module_D, n2);
          }
          function hooks_module_p(n2, u2, i2) {
            var o2 = hooks_module_d(hooks_module_t++, 2);
            if (o2.t = n2, !o2.__c && (o2.__ = [i2 ? i2(u2) : hooks_module_D(void 0, u2), function(n3) {
              var t = o2.__N ? o2.__N[0] : o2.__[0], r2 = o2.t(t, n3);
              t !== r2 && (o2.__N = [r2, o2.__[1]], o2.__c.setState({}));
            }], o2.__c = hooks_module_r, !hooks_module_r.u)) {
              var f2 = function(n3, t, r2) {
                if (!o2.__c.__H)
                  return true;
                var u3 = o2.__c.__H.__.filter(function(n4) {
                  return !!n4.__c;
                });
                if (u3.every(function(n4) {
                  return !n4.__N;
                }))
                  return !c2 || c2.call(this, n3, t, r2);
                var i3 = false;
                return u3.forEach(function(n4) {
                  if (n4.__N) {
                    var t2 = n4.__[0];
                    n4.__ = n4.__N, n4.__N = void 0, t2 !== n4.__[0] && (i3 = true);
                  }
                }), !(!i3 && o2.__c.props === n3) && (!c2 || c2.call(this, n3, t, r2));
              };
              hooks_module_r.u = true;
              var c2 = hooks_module_r.shouldComponentUpdate, e2 = hooks_module_r.componentWillUpdate;
              hooks_module_r.componentWillUpdate = function(n3, t, r2) {
                if (this.__e) {
                  var u3 = c2;
                  c2 = void 0, f2(n3, t, r2), c2 = u3;
                }
                e2 && e2.call(this, n3, t, r2);
              }, hooks_module_r.shouldComponentUpdate = f2;
            }
            return o2.__N || o2.__;
          }
          function hooks_module_y(n2, u2) {
            var i2 = hooks_module_d(hooks_module_t++, 3);
            !hooks_module_c.__s && hooks_module_C(i2.__H, u2) && (i2.__ = n2, i2.i = u2, hooks_module_r.__H.__h.push(i2));
          }
          function hooks_module_(n2, u2) {
            var i2 = hooks_module_d(hooks_module_t++, 4);
            !hooks_module_c.__s && hooks_module_C(i2.__H, u2) && (i2.__ = n2, i2.i = u2, hooks_module_r.__h.push(i2));
          }
          function hooks_module_A(n2) {
            return hooks_module_o = 5, hooks_module_T(function() {
              return { current: n2 };
            }, []);
          }
          function hooks_module_T(n2, r2) {
            var u2 = hooks_module_d(hooks_module_t++, 7);
            return hooks_module_C(u2.__H, r2) && (u2.__ = n2(), u2.__H = r2, u2.__h = n2), u2.__;
          }
          function hooks_module_q(n2, t) {
            return hooks_module_o = 8, hooks_module_T(function() {
              return n2;
            }, t);
          }
          function hooks_module_x(n2) {
            var u2 = hooks_module_r.context[n2.__c], i2 = hooks_module_d(hooks_module_t++, 9);
            return i2.c = n2, u2 ? (null == i2.__ && (i2.__ = true, u2.sub(hooks_module_r)), u2.props.value) : n2.__;
          }
          function hooks_module_j() {
            for (var n2; n2 = hooks_module_f.shift(); )
              if (n2.__P && n2.__H)
                try {
                  n2.__H.__h.forEach(hooks_module_z), n2.__H.__h.forEach(hooks_module_B), n2.__H.__h = [];
                } catch (t) {
                  n2.__H.__h = [], hooks_module_c.__e(t, n2.__v);
                }
          }
          hooks_module_c.__b = function(n2) {
            hooks_module_r = null, hooks_module_e && hooks_module_e(n2);
          }, hooks_module_c.__ = function(n2, t) {
            n2 && t.__k && t.__k.__m && (n2.__m = t.__k.__m), hooks_module_s && hooks_module_s(n2, t);
          }, hooks_module_c.__r = function(n2) {
            hooks_module_a && hooks_module_a(n2), hooks_module_t = 0;
            var i2 = (hooks_module_r = n2.__c).__H;
            i2 && (hooks_module_u === hooks_module_r ? (i2.__h = [], hooks_module_r.__h = [], i2.__.forEach(function(n3) {
              n3.__N && (n3.__ = n3.__N), n3.i = n3.__N = void 0;
            })) : (i2.__h.forEach(hooks_module_z), i2.__h.forEach(hooks_module_B), i2.__h = [], hooks_module_t = 0)), hooks_module_u = hooks_module_r;
          }, hooks_module_c.diffed = function(n2) {
            hooks_module_v && hooks_module_v(n2);
            var t = n2.__c;
            t && t.__H && (t.__H.__h.length && (1 !== hooks_module_f.push(t) && hooks_module_i === hooks_module_c.requestAnimationFrame || ((hooks_module_i = hooks_module_c.requestAnimationFrame) || hooks_module_w)(hooks_module_j)), t.__H.__.forEach(function(n3) {
              n3.i && (n3.__H = n3.i), n3.i = void 0;
            })), hooks_module_u = hooks_module_r = null;
          }, hooks_module_c.__c = function(n2, t) {
            t.some(function(n3) {
              try {
                n3.__h.forEach(hooks_module_z), n3.__h = n3.__h.filter(function(n4) {
                  return !n4.__ || hooks_module_B(n4);
                });
              } catch (r2) {
                t.some(function(n4) {
                  n4.__h && (n4.__h = []);
                }), t = [], hooks_module_c.__e(r2, n3.__v);
              }
            }), l && l(n2, t);
          }, hooks_module_c.unmount = function(n2) {
            hooks_module_m && hooks_module_m(n2);
            var t, r2 = n2.__c;
            r2 && r2.__H && (r2.__H.__.forEach(function(n3) {
              try {
                hooks_module_z(n3);
              } catch (n4) {
                t = n4;
              }
            }), r2.__H = void 0, t && hooks_module_c.__e(t, r2.__v));
          };
          var k = "function" == typeof requestAnimationFrame;
          function hooks_module_w(n2) {
            var t, r2 = function() {
              clearTimeout(u2), k && cancelAnimationFrame(t), setTimeout(n2);
            }, u2 = setTimeout(r2, 100);
            k && (t = requestAnimationFrame(r2));
          }
          function hooks_module_z(n2) {
            var t = hooks_module_r, u2 = n2.__c;
            "function" == typeof u2 && (n2.__c = void 0, u2()), hooks_module_r = t;
          }
          function hooks_module_B(n2) {
            var t = hooks_module_r;
            n2.__c = n2.__(), hooks_module_r = t;
          }
          function hooks_module_C(n2, t) {
            return !n2 || n2.length !== t.length || t.some(function(t2, r2) {
              return t2 !== n2[r2];
            });
          }
          function hooks_module_D(n2, t) {
            return "function" == typeof t ? t(n2) : t;
          }
          __webpack_require__(1875);
          __webpack_require__(2234);
          __webpack_require__(8981);
          __webpack_require__(6569);
          __webpack_require__(3277);
          __webpack_require__(8376);
          __webpack_require__(6929);
          __webpack_require__(568);
          __webpack_require__(7748);
          __webpack_require__(6411);
          __webpack_require__(5305);
          __webpack_require__(7678);
          __webpack_require__(1909);
          __webpack_require__(8291);
          __webpack_require__(8867);
          __webpack_require__(865);
          var immer_esm = __webpack_require__(1178);
          __webpack_require__(8803);
          __webpack_require__(4147);
          __webpack_require__(9431);
          __webpack_require__(9428);
          __webpack_require__(4293);
          __webpack_require__(8225);
          var range = __webpack_require__(9129);
          var range_default = /* @__PURE__ */ __webpack_require__.n(range);
          var DEFAULT_DAY_NAME_MARGIN_LEFT = "0";
          var MONTH_EVENT_HEIGHT = 24;
          var MONTH_EVENT_MARGIN_TOP = 2;
          var MONTH_CELL_PADDING_TOP = 3;
          var MONTH_CELL_BAR_HEIGHT = 27;
          var MONTH_MORE_VIEW_PADDING = 5;
          var MONTH_MORE_VIEW_MIN_WIDTH = 280;
          var MONTH_MORE_VIEW_HEADER_HEIGHT = 44;
          var MONTH_MORE_VIEW_HEADER_MARGIN_BOTTOM = 12;
          var MONTH_MORE_VIEW_HEADER_PADDING_TOP = 12;
          var MONTH_MORE_VIEW_HEADER_PADDING = "12px 17px 0";
          var WEEK_DAY_NAME_HEIGHT = 42;
          var WEEK_DAY_NAME_BORDER = 1;
          var WEEK_EVENT_MARGIN_TOP = 2;
          var DEFAULT_PANEL_HEIGHT = 72;
          var DEFAULT_EVENT_COLORS = {
            color: "#000",
            backgroundColor: "#a1b56c",
            dragBackgroundColor: "#a1b56c",
            borderColor: "#000"
          };
          var TIME_EVENT_CONTAINER_MARGIN_LEFT = 2;
          var COLLAPSED_DUPLICATE_EVENT_WIDTH_PX = 9;
          var isString = __webpack_require__(9450);
          var isString_default = /* @__PURE__ */ __webpack_require__.n(isString);
          var CSS_PREFIX = "toastui-calendar-";
          function cls() {
            var result = [];
            for (var _len = arguments.length, args = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {
              args[_key2] = arguments[_key2];
            }
            args.forEach(function(arg) {
              if (!arg) {
                return;
              }
              if (isString_default()(arg)) {
                result.push(arg);
              } else {
                Object.keys(arg).forEach(function(className2) {
                  if (arg[className2]) {
                    result.push(className2);
                  }
                });
              }
            });
            return result.map(function(str) {
              return "".concat(CSS_PREFIX).concat(str);
            }).join(" ");
          }
          function toPercent(value) {
            return "".concat(value, "%");
          }
          function toPx(value) {
            return "".concat(value, "px");
          }
          function extractPercentPx(value) {
            var percentRegexp = /(\d+)%/;
            var percentResult = value.match(percentRegexp);
            var pxRegexp = /(-?)\s?(\d+)px/;
            var pxResult = value.match(pxRegexp);
            return {
              percent: percentResult ? parseInt(percentResult[1], 10) : 0,
              px: pxResult ? parseInt("".concat(pxResult[1]).concat(pxResult[2]), 10) : 0
            };
          }
          function getEventColors(uiModel, calendarColor) {
            var eventColors = uiModel.model.getColors();
            return Object.keys(DEFAULT_EVENT_COLORS).reduce(function(colors, _key) {
              var _ref, _eventColors$key;
              var key = _key;
              colors[key] = (_ref = (_eventColors$key = eventColors[key]) !== null && _eventColors$key !== void 0 ? _eventColors$key : calendarColor[key]) !== null && _ref !== void 0 ? _ref : DEFAULT_EVENT_COLORS[key];
              return colors;
            }, {});
          }
          function _typeof(o2) {
            "@babel/helpers - typeof";
            return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, _typeof(o2);
          }
          function _construct(t, e2, r2) {
            if (_isNativeReflectConstruct())
              return Reflect.construct.apply(null, arguments);
            var o2 = [null];
            o2.push.apply(o2, e2);
            var p2 = new (t.bind.apply(t, o2))();
            return r2 && _setPrototypeOf(p2, r2.prototype), p2;
          }
          function _setPrototypeOf(t, e2) {
            return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e3) {
              return t2.__proto__ = e3, t2;
            }, _setPrototypeOf(t, e2);
          }
          function _isNativeReflectConstruct() {
            try {
              var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              }));
            } catch (t2) {
            }
            return (_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
              return !!t;
            })();
          }
          function _classCallCheck(a2, n2) {
            if (!(a2 instanceof n2))
              throw new TypeError("Cannot call a class as a function");
          }
          function _defineProperties(e2, r2) {
            for (var t = 0; t < r2.length; t++) {
              var o2 = r2[t];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, _toPropertyKey(o2.key), o2);
            }
          }
          function _createClass(e2, r2, t) {
            return r2 && _defineProperties(e2.prototype, r2), t && _defineProperties(e2, t), Object.defineProperty(e2, "prototype", { writable: false }), e2;
          }
          function _toPropertyKey(t) {
            var i2 = _toPrimitive(t, "string");
            return "symbol" == _typeof(i2) ? i2 : i2 + "";
          }
          function _toPrimitive(t, r2) {
            if ("object" != _typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != _typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function _slicedToArray(r2, e2) {
            return _arrayWithHoles(r2) || _iterableToArrayLimit(r2, e2) || _unsupportedIterableToArray(r2, e2) || _nonIterableRest();
          }
          function _nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function _unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return _arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function _arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function _iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function _arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          var rISO8601 = /^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\.)?([0-9]+)?([+-]\d\d(?::?\d\d)?|\s*Z)?$/;
          function throwNotSupported() {
            throw new Error("This operation is not supported.");
          }
          function getDateTime(dateString) {
            var match = rISO8601.exec(dateString);
            if (match) {
              var _match = _slicedToArray(match, 10), y2 = _match[1], M2 = _match[2], d2 = _match[3], h2 = _match[4], m = _match[5], s2 = _match[6], ms = _match[8], zoneInfo = _match[9];
              return {
                y: Number(y2),
                M: Number(M2) - 1,
                d: Number(d2),
                h: Number(h2),
                m: Number(m),
                s: Number(s2),
                ms: Number(ms) || 0,
                zoneInfo
              };
            }
            return null;
          }
          function createFromDateString(dateString) {
            var info = getDateTime(dateString);
            if (info && !info.zoneInfo) {
              var y2 = info.y, M2 = info.M, d2 = info.d, h2 = info.h, m = info.m, s2 = info.s, ms = info.ms;
              return new Date(y2, M2, d2, h2, m, s2, ms);
            }
            return null;
          }
          var LocalDate = /* @__PURE__ */ function() {
            function LocalDate2() {
              _classCallCheck(this, LocalDate2);
              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
              }
              var firstArg = args[0];
              if (firstArg instanceof Date) {
                this.d = new Date(firstArg.getTime());
              } else if (isString_default()(firstArg) && args.length === 1) {
                this.d = createFromDateString(firstArg);
              }
              if (!this.d) {
                this.d = _construct(Date, args);
              }
            }
            return _createClass(LocalDate2, [{
              key: "setTimezoneOffset",
              value: function setTimezoneOffset() {
                throwNotSupported();
              }
            }, {
              key: "setTimezoneName",
              value: function setTimezoneName() {
                throwNotSupported();
              }
            }, {
              key: "clone",
              value: function clone() {
                return new LocalDate2(this.d);
              }
            }, {
              key: "toDate",
              value: function toDate() {
                return new Date(this.d.getTime());
              }
            }, {
              key: "toString",
              value: function toString() {
                return this.d.toString();
              }
            }]);
          }();
          var getterMethods = ["getTime", "getTimezoneOffset", "getFullYear", "getMonth", "getDate", "getHours", "getMinutes", "getSeconds", "getMilliseconds", "getDay"];
          var setterMethods = ["setTime", "setFullYear", "setMonth", "setDate", "setHours", "setMinutes", "setSeconds", "setMilliseconds"];
          getterMethods.forEach(function(methodName) {
            LocalDate.prototype[methodName] = function() {
              var _this$d;
              return (_this$d = this.d)[methodName].apply(_this$d, arguments);
            };
          });
          setterMethods.forEach(function(methodName) {
            LocalDate.prototype[methodName] = function() {
              var _this$d2;
              return (_this$d2 = this.d)[methodName].apply(_this$d2, arguments);
            };
          });
          function utcDate_typeof(o2) {
            "@babel/helpers - typeof";
            return utcDate_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, utcDate_typeof(o2);
          }
          function utcDate_classCallCheck(a2, n2) {
            if (!(a2 instanceof n2))
              throw new TypeError("Cannot call a class as a function");
          }
          function utcDate_defineProperties(e2, r2) {
            for (var t = 0; t < r2.length; t++) {
              var o2 = r2[t];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, utcDate_toPropertyKey(o2.key), o2);
            }
          }
          function utcDate_createClass(e2, r2, t) {
            return r2 && utcDate_defineProperties(e2.prototype, r2), t && utcDate_defineProperties(e2, t), Object.defineProperty(e2, "prototype", { writable: false }), e2;
          }
          function utcDate_toPropertyKey(t) {
            var i2 = utcDate_toPrimitive(t, "string");
            return "symbol" == utcDate_typeof(i2) ? i2 : i2 + "";
          }
          function utcDate_toPrimitive(t, r2) {
            if ("object" != utcDate_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != utcDate_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function _callSuper(t, o2, e2) {
            return o2 = _getPrototypeOf(o2), _possibleConstructorReturn(t, utcDate_isNativeReflectConstruct() ? Reflect.construct(o2, e2 || [], _getPrototypeOf(t).constructor) : o2.apply(t, e2));
          }
          function _possibleConstructorReturn(t, e2) {
            if (e2 && ("object" == utcDate_typeof(e2) || "function" == typeof e2))
              return e2;
            if (void 0 !== e2)
              throw new TypeError("Derived constructors may only return object or undefined");
            return _assertThisInitialized(t);
          }
          function _assertThisInitialized(e2) {
            if (void 0 === e2)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e2;
          }
          function utcDate_isNativeReflectConstruct() {
            try {
              var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              }));
            } catch (t2) {
            }
            return (utcDate_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
              return !!t;
            })();
          }
          function _getPrototypeOf(t) {
            return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
              return t2.__proto__ || Object.getPrototypeOf(t2);
            }, _getPrototypeOf(t);
          }
          function _inherits(t, e2) {
            if ("function" != typeof e2 && null !== e2)
              throw new TypeError("Super expression must either be null or a function");
            t.prototype = Object.create(e2 && e2.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e2 && utcDate_setPrototypeOf(t, e2);
          }
          function utcDate_setPrototypeOf(t, e2) {
            return utcDate_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e3) {
              return t2.__proto__ = e3, t2;
            }, utcDate_setPrototypeOf(t, e2);
          }
          var UTCDate = /* @__PURE__ */ function(_LocalDate) {
            function UTCDate2() {
              utcDate_classCallCheck(this, UTCDate2);
              return _callSuper(this, UTCDate2, arguments);
            }
            _inherits(UTCDate2, _LocalDate);
            return utcDate_createClass(UTCDate2, [{
              key: "clone",
              value: function clone() {
                return new UTCDate2(this.d);
              }
            }, {
              key: "getTimezoneOffset",
              value: function getTimezoneOffset() {
                return 0;
              }
            }]);
          }(LocalDate);
          var getterProperties = ["FullYear", "Month", "Date", "Hours", "Minutes", "Seconds", "Milliseconds", "Day"];
          var setterProperties = ["FullYear", "Month", "Date", "Hours", "Minutes", "Seconds", "Milliseconds"];
          getterProperties.forEach(function(prop) {
            var methodName = "get".concat(prop);
            UTCDate.prototype[methodName] = function() {
              var _this$d;
              return (_this$d = this.d)["getUTC".concat(prop)].apply(_this$d, arguments);
            };
          });
          setterProperties.forEach(function(prop) {
            var methodName = "set".concat(prop);
            UTCDate.prototype[methodName] = function() {
              var _this$d2;
              return (_this$d2 = this.d)["setUTC".concat(prop)].apply(_this$d2, arguments);
            };
          });
          __webpack_require__(8470);
          var INVALID_DATETIME_FORMAT = "Invalid DateTime Format";
          var INVALID_TIMEZONE_NAME = "Invalid IANA Timezone Name";
          var INVALID_VIEW_TYPE = "Invalid View Type";
          var MESSAGE_PREFIX = "@toast-ui/calendar: ";
          function error_typeof(o2) {
            "@babel/helpers - typeof";
            return error_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, error_typeof(o2);
          }
          function error_defineProperties(e2, r2) {
            for (var t = 0; t < r2.length; t++) {
              var o2 = r2[t];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, error_toPropertyKey(o2.key), o2);
            }
          }
          function error_createClass(e2, r2, t) {
            return r2 && error_defineProperties(e2.prototype, r2), t && error_defineProperties(e2, t), Object.defineProperty(e2, "prototype", { writable: false }), e2;
          }
          function error_toPropertyKey(t) {
            var i2 = error_toPrimitive(t, "string");
            return "symbol" == error_typeof(i2) ? i2 : i2 + "";
          }
          function error_toPrimitive(t, r2) {
            if ("object" != error_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != error_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function error_classCallCheck(a2, n2) {
            if (!(a2 instanceof n2))
              throw new TypeError("Cannot call a class as a function");
          }
          function error_callSuper(t, o2, e2) {
            return o2 = error_getPrototypeOf(o2), error_possibleConstructorReturn(t, error_isNativeReflectConstruct() ? Reflect.construct(o2, e2 || [], error_getPrototypeOf(t).constructor) : o2.apply(t, e2));
          }
          function error_possibleConstructorReturn(t, e2) {
            if (e2 && ("object" == error_typeof(e2) || "function" == typeof e2))
              return e2;
            if (void 0 !== e2)
              throw new TypeError("Derived constructors may only return object or undefined");
            return error_assertThisInitialized(t);
          }
          function error_assertThisInitialized(e2) {
            if (void 0 === e2)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e2;
          }
          function error_inherits(t, e2) {
            if ("function" != typeof e2 && null !== e2)
              throw new TypeError("Super expression must either be null or a function");
            t.prototype = Object.create(e2 && e2.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e2 && error_setPrototypeOf(t, e2);
          }
          function _wrapNativeSuper(t) {
            var r2 = "function" == typeof Map ? /* @__PURE__ */ new Map() : void 0;
            return _wrapNativeSuper = function _wrapNativeSuper2(t2) {
              if (null === t2 || !_isNativeFunction(t2))
                return t2;
              if ("function" != typeof t2)
                throw new TypeError("Super expression must either be null or a function");
              if (void 0 !== r2) {
                if (r2.has(t2))
                  return r2.get(t2);
                r2.set(t2, Wrapper);
              }
              function Wrapper() {
                return error_construct(t2, arguments, error_getPrototypeOf(this).constructor);
              }
              return Wrapper.prototype = Object.create(t2.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }), error_setPrototypeOf(Wrapper, t2);
            }, _wrapNativeSuper(t);
          }
          function error_construct(t, e2, r2) {
            if (error_isNativeReflectConstruct())
              return Reflect.construct.apply(null, arguments);
            var o2 = [null];
            o2.push.apply(o2, e2);
            var p2 = new (t.bind.apply(t, o2))();
            return r2 && error_setPrototypeOf(p2, r2.prototype), p2;
          }
          function error_isNativeReflectConstruct() {
            try {
              var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              }));
            } catch (t2) {
            }
            return (error_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
              return !!t;
            })();
          }
          function _isNativeFunction(t) {
            try {
              return -1 !== Function.toString.call(t).indexOf("[native code]");
            } catch (n2) {
              return "function" == typeof t;
            }
          }
          function error_setPrototypeOf(t, e2) {
            return error_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e3) {
              return t2.__proto__ = e3, t2;
            }, error_setPrototypeOf(t, e2);
          }
          function error_getPrototypeOf(t) {
            return error_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
              return t2.__proto__ || Object.getPrototypeOf(t2);
            }, error_getPrototypeOf(t);
          }
          var InvalidTimezoneNameError = /* @__PURE__ */ function(_Error) {
            function InvalidTimezoneNameError2(timezoneName) {
              var _this;
              error_classCallCheck(this, InvalidTimezoneNameError2);
              _this = error_callSuper(this, InvalidTimezoneNameError2, ["".concat(MESSAGE_PREFIX).concat(INVALID_TIMEZONE_NAME, " - ").concat(timezoneName)]);
              _this.name = "InvalidTimezoneNameError";
              return _this;
            }
            error_inherits(InvalidTimezoneNameError2, _Error);
            return error_createClass(InvalidTimezoneNameError2);
          }(/* @__PURE__ */ _wrapNativeSuper(Error));
          var InvalidDateTimeFormatError = /* @__PURE__ */ function(_Error2) {
            function InvalidDateTimeFormatError2(dateTimeString) {
              var _this2;
              error_classCallCheck(this, InvalidDateTimeFormatError2);
              _this2 = error_callSuper(this, InvalidDateTimeFormatError2, ["".concat(MESSAGE_PREFIX).concat(INVALID_DATETIME_FORMAT, " - ").concat(dateTimeString)]);
              _this2.name = "InvalidDateTimeFormatError";
              return _this2;
            }
            error_inherits(InvalidDateTimeFormatError2, _Error2);
            return error_createClass(InvalidDateTimeFormatError2);
          }(/* @__PURE__ */ _wrapNativeSuper(Error));
          var InvalidViewTypeError = /* @__PURE__ */ function(_Error3) {
            function InvalidViewTypeError2(viewType) {
              var _this3;
              error_classCallCheck(this, InvalidViewTypeError2);
              _this3 = error_callSuper(this, InvalidViewTypeError2, ["".concat(MESSAGE_PREFIX).concat(INVALID_VIEW_TYPE, " - ").concat(viewType)]);
              _this3.name = "InvalidViewTypeError";
              return _this3;
            }
            error_inherits(InvalidViewTypeError2, _Error3);
            return error_createClass(InvalidViewTypeError2);
          }(/* @__PURE__ */ _wrapNativeSuper(Error));
          var logger = {
            error: function error(firstArg) {
              var _console;
              for (var _len = arguments.length, restArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                restArgs[_key - 1] = arguments[_key];
              }
              (_console = console).error.apply(_console, ["".concat(MESSAGE_PREFIX).concat(firstArg)].concat(restArgs));
            },
            warn: function warn(firstArg) {
              var _console2;
              for (var _len2 = arguments.length, restArgs = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                restArgs[_key2 - 1] = arguments[_key2];
              }
              (_console2 = console).warn.apply(_console2, ["".concat(MESSAGE_PREFIX).concat(firstArg)].concat(restArgs));
            }
          };
          var isUndefined = __webpack_require__(1395);
          var isUndefined_default = /* @__PURE__ */ __webpack_require__.n(isUndefined);
          var isBoolean = __webpack_require__(499);
          var isBoolean_default = /* @__PURE__ */ __webpack_require__.n(isBoolean);
          var isNumber = __webpack_require__(2090);
          var isNumber_default = /* @__PURE__ */ __webpack_require__.n(isNumber);
          var isObject = __webpack_require__(460);
          var isObject_default = /* @__PURE__ */ __webpack_require__.n(isObject);
          function type_isNil(value) {
            return isUndefined_default()(value) || value === null;
          }
          function isPresent(value) {
            return !type_isNil(value);
          }
          function isFunction(value) {
            return typeof value === "function";
          }
          function timezone_slicedToArray(r2, e2) {
            return timezone_arrayWithHoles(r2) || timezone_iterableToArrayLimit(r2, e2) || timezone_unsupportedIterableToArray(r2, e2) || timezone_nonIterableRest();
          }
          function timezone_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function timezone_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return timezone_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? timezone_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function timezone_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function timezone_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function timezone_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function timezone_construct(t, e2, r2) {
            if (timezone_isNativeReflectConstruct())
              return Reflect.construct.apply(null, arguments);
            var o2 = [null];
            o2.push.apply(o2, e2);
            var p2 = new (t.bind.apply(t, o2))();
            return r2 && timezone_setPrototypeOf(p2, r2.prototype), p2;
          }
          function timezone_setPrototypeOf(t, e2) {
            return timezone_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e3) {
              return t2.__proto__ = e3, t2;
            }, timezone_setPrototypeOf(t, e2);
          }
          function timezone_isNativeReflectConstruct() {
            try {
              var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              }));
            } catch (t2) {
            }
            return (timezone_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
              return !!t;
            })();
          }
          var Constructor = LocalDate;
          function date() {
            for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
              args[_key] = arguments[_key];
            }
            return timezone_construct(Constructor, args);
          }
          function getLocalTimezoneOffset() {
            return -new Date().getTimezoneOffset();
          }
          function calculateTimezoneOffset(timezoneName) {
            var targetDate = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : new date_TZDate();
            if (!isIntlDateTimeFormatSupported()) {
              logger.warn("Intl.DateTimeFormat is not fully supported. So It will return the local timezone offset only.\nYou can use a polyfill to fix this issue.");
              return -targetDate.toDate().getTimezoneOffset();
            }
            validateIANATimezoneName(timezoneName);
            var token = tokenizeTZDate(targetDate, timezoneName);
            var utcDate = tokenToUtcDate(token);
            return Math.round((utcDate.getTime() - targetDate.getTime()) / 60 / 1e3);
          }
          function isUsingDST(targetDate, timezoneName) {
            if (timezoneName) {
              validateIANATimezoneName(timezoneName);
            }
            var jan = new date_TZDate(targetDate.getFullYear(), 0, 1);
            var jul = new date_TZDate(targetDate.getFullYear(), 6, 1);
            if (timezoneName) {
              return Math.max(-calculateTimezoneOffset(timezoneName, jan), -calculateTimezoneOffset(timezoneName, jul)) !== -calculateTimezoneOffset(timezoneName, targetDate);
            }
            return Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset()) !== targetDate.toDate().getTimezoneOffset();
          }
          var dtfCache = {};
          var timezoneNameValidationCache = {};
          function isIntlDateTimeFormatSupported() {
            var _Intl;
            return isFunction((_Intl = Intl) === null || _Intl === void 0 || (_Intl = _Intl.DateTimeFormat) === null || _Intl === void 0 || (_Intl = _Intl.prototype) === null || _Intl === void 0 ? void 0 : _Intl.formatToParts);
          }
          function validateIANATimezoneName(timezoneName) {
            if (timezoneNameValidationCache[timezoneName]) {
              return true;
            }
            try {
              Intl.DateTimeFormat("en-US", {
                timeZone: timezoneName
              });
              timezoneNameValidationCache[timezoneName] = true;
              return true;
            } catch (_unused) {
              throw new InvalidTimezoneNameError(timezoneName);
            }
          }
          function getDateTimeFormat(timezoneName) {
            if (dtfCache[timezoneName]) {
              return dtfCache[timezoneName];
            }
            var dtf = new Intl.DateTimeFormat("en-US", {
              timeZone: timezoneName,
              hourCycle: "h23",
              hour12: false,
              year: "numeric",
              month: "numeric",
              day: "numeric",
              hour: "numeric",
              minute: "numeric",
              second: "numeric"
            });
            dtfCache[timezoneName] = dtf;
            return dtf;
          }
          var typeToPos = {
            year: 0,
            month: 1,
            day: 2,
            hour: 3,
            minute: 4,
            second: 5
          };
          function tokenizeTZDate(tzDate, timezoneName) {
            var dtf = getDateTimeFormat(timezoneName);
            var formatted = dtf.formatToParts(tzDate.toDate());
            return formatted.reduce(function(result, cur) {
              var pos = typeToPos[cur.type];
              if (isPresent(pos)) {
                result[pos] = parseInt(cur.value, 10);
              }
              return result;
            }, []);
          }
          function tokenToUtcDate(token) {
            var _token = timezone_slicedToArray(token, 6), year = _token[0], monthPlusOne = _token[1], day = _token[2], hour = _token[3], minute = _token[4], second = _token[5];
            var month = monthPlusOne - 1;
            return new Date(Date.UTC(year, month, day, hour % 24, minute, second));
          }
          function date_typeof(o2) {
            "@babel/helpers - typeof";
            return date_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, date_typeof(o2);
          }
          function date_classCallCheck(a2, n2) {
            if (!(a2 instanceof n2))
              throw new TypeError("Cannot call a class as a function");
          }
          function date_defineProperties(e2, r2) {
            for (var t = 0; t < r2.length; t++) {
              var o2 = r2[t];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, date_toPropertyKey(o2.key), o2);
            }
          }
          function date_createClass(e2, r2, t) {
            return r2 && date_defineProperties(e2.prototype, r2), t && date_defineProperties(e2, t), Object.defineProperty(e2, "prototype", { writable: false }), e2;
          }
          function _defineProperty(e2, r2, t) {
            return (r2 = date_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function date_toPropertyKey(t) {
            var i2 = date_toPrimitive(t, "string");
            return "symbol" == date_typeof(i2) ? i2 : i2 + "";
          }
          function date_toPrimitive(t, r2) {
            if ("object" != date_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != date_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function getTZOffsetMSDifference(offset) {
            return (getLocalTimezoneOffset() - offset) * MS_PER_MINUTES;
          }
          var date_TZDate = /* @__PURE__ */ function() {
            function TZDate() {
              date_classCallCheck(this, TZDate);
              _defineProperty(this, "tzOffset", null);
              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
              }
              if (args[0] instanceof TZDate) {
                this.d = date(args[0].getTime());
              } else {
                this.d = date.apply(void 0, args);
              }
            }
            return date_createClass(TZDate, [{
              key: "toString",
              value: function toString() {
                return this.d.toString();
              }
            }, {
              key: "addFullYear",
              value: function addFullYear(y2) {
                this.setFullYear(this.getFullYear() + y2);
                return this;
              }
            }, {
              key: "addMonth",
              value: function addMonth(m) {
                this.setMonth(this.getMonth() + m);
                return this;
              }
            }, {
              key: "addDate",
              value: function addDate2(d2) {
                this.setDate(this.getDate() + d2);
                return this;
              }
            }, {
              key: "addHours",
              value: function addHours(h2) {
                this.setHours(this.getHours() + h2);
                return this;
              }
            }, {
              key: "addMinutes",
              value: function addMinutes2(M2) {
                this.setMinutes(this.getMinutes() + M2);
                return this;
              }
            }, {
              key: "addSeconds",
              value: function addSeconds(s2) {
                this.setSeconds(this.getSeconds() + s2);
                return this;
              }
            }, {
              key: "addMilliseconds",
              value: function addMilliseconds2(ms) {
                this.setMilliseconds(this.getMilliseconds() + ms);
                return this;
              }
            }, {
              key: "setWithRaw",
              value: function setWithRaw(y2, m, d2, h2, M2, s2, ms) {
                this.setFullYear(y2, m, d2);
                this.setHours(h2, M2, s2, ms);
                return this;
              }
            }, {
              key: "toDate",
              value: function toDate() {
                return this.d.toDate();
              }
            }, {
              key: "valueOf",
              value: function valueOf() {
                return this.getTime();
              }
            }, {
              key: "getTimezoneOffset",
              value: function getTimezoneOffset() {
                var _this$tzOffset;
                return (_this$tzOffset = this.tzOffset) !== null && _this$tzOffset !== void 0 ? _this$tzOffset : this.d.getTimezoneOffset();
              }
            }, {
              key: "getTime",
              value: function getTime() {
                return this.d.getTime();
              }
            }, {
              key: "getFullYear",
              value: function getFullYear() {
                return this.d.getFullYear();
              }
            }, {
              key: "getMonth",
              value: function getMonth() {
                return this.d.getMonth();
              }
            }, {
              key: "getDate",
              value: function getDate() {
                return this.d.getDate();
              }
            }, {
              key: "getHours",
              value: function getHours() {
                return this.d.getHours();
              }
            }, {
              key: "getMinutes",
              value: function getMinutes() {
                return this.d.getMinutes();
              }
            }, {
              key: "getSeconds",
              value: function getSeconds() {
                return this.d.getSeconds();
              }
            }, {
              key: "getMilliseconds",
              value: function getMilliseconds() {
                return this.d.getMilliseconds();
              }
            }, {
              key: "getDay",
              value: function getDay() {
                return this.d.getDay();
              }
            }, {
              key: "setTime",
              value: function setTime(t) {
                return this.d.setTime(t);
              }
            }, {
              key: "setFullYear",
              value: function setFullYear(y2) {
                var m = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.getMonth();
                var d2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this.getDate();
                return this.d.setFullYear(y2, m, d2);
              }
            }, {
              key: "setMonth",
              value: function setMonth(m) {
                var d2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.getDate();
                return this.d.setMonth(m, d2);
              }
            }, {
              key: "setDate",
              value: function setDate(d2) {
                return this.d.setDate(d2);
              }
            }, {
              key: "setHours",
              value: function setHours(h2) {
                var M2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.getMinutes();
                var s2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this.getSeconds();
                var ms = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : this.getMilliseconds();
                return this.d.setHours(h2, M2, s2, ms);
              }
            }, {
              key: "setMinutes",
              value: function setMinutes(M2) {
                var s2 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.getSeconds();
                var ms = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this.getMilliseconds();
                return this.d.setMinutes(M2, s2, ms);
              }
            }, {
              key: "setSeconds",
              value: function setSeconds(s2) {
                var ms = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.getMilliseconds();
                return this.d.setSeconds(s2, ms);
              }
            }, {
              key: "setMilliseconds",
              value: function setMilliseconds(ms) {
                return this.d.setMilliseconds(ms);
              }
            }, {
              key: "tz",
              value: function tz(tzValue) {
                if (tzValue === "Local") {
                  return new TZDate(this.getTime());
                }
                var tzOffset = isString_default()(tzValue) ? calculateTimezoneOffset(tzValue, this) : tzValue;
                var newTZDate = new TZDate(this.getTime() - getTZOffsetMSDifference(tzOffset));
                newTZDate.tzOffset = tzOffset;
                return newTZDate;
              }
            }, {
              key: "local",
              value: function local(tzValue) {
                if (isPresent(tzValue)) {
                  var tzOffset = isString_default()(tzValue) ? calculateTimezoneOffset(tzValue, this) : tzValue;
                  return new TZDate(this.getTime() + getTZOffsetMSDifference(tzOffset));
                }
                return new TZDate(this.getTime() + (isPresent(this.tzOffset) ? getTZOffsetMSDifference(this.tzOffset) : 0));
              }
            }]);
          }();
          __webpack_require__(7050);
          function pick(obj) {
            for (var _len = arguments.length, propNames = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              propNames[_key - 1] = arguments[_key];
            }
            return propNames.reduce(function(acc, key) {
              if (obj.hasOwnProperty(key)) {
                acc[key] = obj[key];
              }
              return acc;
            }, {});
          }
          function object_clone(source) {
            return Object.assign(Object.create(Object.getPrototypeOf(source)), source);
          }
          function mergeObject(target) {
            var source = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
            if (!isObject_default()(source)) {
              return target;
            }
            Object.keys(source).forEach(function(k2) {
              var targetKey = k2;
              var sourceKey = k2;
              if (!Array.isArray(source[sourceKey]) && isObject_default()(target[targetKey]) && isObject_default()(source[sourceKey]) && !(source[sourceKey] instanceof date_TZDate)) {
                target[targetKey] = mergeObject(target[targetKey], source[sourceKey]);
              } else {
                target[targetKey] = source[sourceKey];
              }
            });
            return target;
          }
          function eventUIModel_typeof(o2) {
            "@babel/helpers - typeof";
            return eventUIModel_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, eventUIModel_typeof(o2);
          }
          function eventUIModel_classCallCheck(a2, n2) {
            if (!(a2 instanceof n2))
              throw new TypeError("Cannot call a class as a function");
          }
          function eventUIModel_defineProperties(e2, r2) {
            for (var t = 0; t < r2.length; t++) {
              var o2 = r2[t];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, eventUIModel_toPropertyKey(o2.key), o2);
            }
          }
          function eventUIModel_createClass(e2, r2, t) {
            return r2 && eventUIModel_defineProperties(e2.prototype, r2), t && eventUIModel_defineProperties(e2, t), Object.defineProperty(e2, "prototype", { writable: false }), e2;
          }
          function eventUIModel_defineProperty(e2, r2, t) {
            return (r2 = eventUIModel_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function eventUIModel_toPropertyKey(t) {
            var i2 = eventUIModel_toPrimitive(t, "string");
            return "symbol" == eventUIModel_typeof(i2) ? i2 : i2 + "";
          }
          function eventUIModel_toPrimitive(t, r2) {
            if ("object" != eventUIModel_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != eventUIModel_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          var eventUIPropsKey = ["top", "left", "width", "height", "exceedLeft", "exceedRight", "croppedStart", "croppedEnd", "goingDurationHeight", "modelDurationHeight", "comingDurationHeight", "duplicateEvents", "duplicateEventIndex", "duplicateStarts", "duplicateEnds", "duplicateLeft", "duplicateWidth", "collapse", "isMain"];
          var EventUIModel = /* @__PURE__ */ function() {
            function EventUIModel2(event) {
              eventUIModel_classCallCheck(this, EventUIModel2);
              eventUIModel_defineProperty(this, "top", 0);
              eventUIModel_defineProperty(this, "left", 0);
              eventUIModel_defineProperty(this, "width", 0);
              eventUIModel_defineProperty(this, "height", 0);
              eventUIModel_defineProperty(this, "exceedLeft", false);
              eventUIModel_defineProperty(this, "exceedRight", false);
              eventUIModel_defineProperty(this, "croppedStart", false);
              eventUIModel_defineProperty(this, "croppedEnd", false);
              eventUIModel_defineProperty(this, "goingDurationHeight", 0);
              eventUIModel_defineProperty(this, "modelDurationHeight", 100);
              eventUIModel_defineProperty(this, "comingDurationHeight", 0);
              eventUIModel_defineProperty(this, "duplicateEvents", []);
              eventUIModel_defineProperty(this, "duplicateEventIndex", -1);
              eventUIModel_defineProperty(this, "duplicateLeft", "");
              eventUIModel_defineProperty(this, "duplicateWidth", "");
              eventUIModel_defineProperty(this, "collapse", false);
              eventUIModel_defineProperty(this, "isMain", false);
              this.model = event;
            }
            return eventUIModel_createClass(EventUIModel2, [{
              key: "getUIProps",
              value: function getUIProps() {
                return pick.apply(void 0, [this].concat(eventUIPropsKey));
              }
            }, {
              key: "setUIProps",
              value: function setUIProps(props) {
                Object.assign(this, props);
              }
            }, {
              key: "getStarts",
              value: function getStarts() {
                if (this.renderStarts) {
                  return this.renderStarts;
                }
                return this.model.getStarts();
              }
            }, {
              key: "getEnds",
              value: function getEnds() {
                if (this.renderEnds) {
                  return this.renderEnds;
                }
                return this.model.getEnds();
              }
            }, {
              key: "cid",
              value: function cid() {
                return this.model.cid();
              }
            }, {
              key: "valueOf",
              value: function valueOf() {
                return this.model;
              }
            }, {
              key: "duration",
              value: function duration() {
                return this.model.duration();
              }
            }, {
              key: "collidesWith",
              value: function collidesWith(uiModel) {
                var usingTravelTime = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
                var infos = [];
                [this, uiModel].forEach(function(event) {
                  var isDuplicateEvent = event instanceof EventUIModel2 && event.duplicateEvents.length > 0;
                  if (isDuplicateEvent) {
                    infos.push({
                      start: event.duplicateStarts,
                      end: event.duplicateEnds,
                      goingDuration: 0,
                      comingDuration: 0
                    });
                  } else {
                    infos.push({
                      start: event.getStarts(),
                      end: event.getEnds(),
                      goingDuration: event.valueOf().goingDuration,
                      comingDuration: event.valueOf().comingDuration
                    });
                  }
                });
                var thisInfo = infos[0], targetInfo = infos[1];
                return events_collidesWith({
                  start: thisInfo.start.getTime(),
                  end: thisInfo.end.getTime(),
                  targetStart: targetInfo.start.getTime(),
                  targetEnd: targetInfo.end.getTime(),
                  goingDuration: thisInfo.goingDuration,
                  comingDuration: thisInfo.comingDuration,
                  targetGoingDuration: targetInfo.goingDuration,
                  targetComingDuration: targetInfo.comingDuration,
                  usingTravelTime
                });
              }
            }, {
              key: "clone",
              value: function clone() {
                var eventUIModelProps = this.getUIProps();
                var clonedEventUIModel = new EventUIModel2(this.model);
                clonedEventUIModel.setUIProps(eventUIModelProps);
                if (this.renderStarts) {
                  clonedEventUIModel.renderStarts = new date_TZDate(this.renderStarts);
                }
                if (this.renderEnds) {
                  clonedEventUIModel.renderEnds = new date_TZDate(this.renderEnds);
                }
                return clonedEventUIModel;
              }
            }]);
          }();
          function compareBooleansASC(a2, b2) {
            if (a2 !== b2) {
              return a2 ? -1 : 1;
            }
            return 0;
          }
          function compareNumbersASC(a2, b2) {
            return Number(a2) - Number(b2);
          }
          function compareStringsASC(_a, _b) {
            var a2 = String(_a);
            var b2 = String(_b);
            if (a2 === b2) {
              return 0;
            }
            return a2 > b2 ? 1 : -1;
          }
          function compareEventsASC(a2, b2) {
            var modelA = a2 instanceof EventUIModel ? a2.model : a2;
            var modelB = b2 instanceof EventUIModel ? b2.model : b2;
            var alldayCompare = compareBooleansASC(modelA.isAllday || modelA.hasMultiDates, modelB.isAllday || modelB.hasMultiDates);
            if (alldayCompare) {
              return alldayCompare;
            }
            var startsCompare = compare(a2.getStarts(), b2.getStarts());
            if (startsCompare) {
              return startsCompare;
            }
            var durationA = a2.duration();
            var durationB = b2.duration();
            if (durationA < durationB) {
              return 1;
            }
            if (durationA > durationB) {
              return -1;
            }
            return modelA.cid() - modelB.cid();
          }
          function bsearch(arr, search, fn, compareFn) {
            var minIndex = 0;
            var maxIndex = arr.length - 1;
            var currentIndex;
            var value;
            var comp;
            compareFn = compareFn || compareStringsASC;
            while (minIndex <= maxIndex) {
              currentIndex = (minIndex + maxIndex) / 2 | 0;
              value = fn ? fn(arr[currentIndex]) : arr[currentIndex];
              comp = compareFn(value, search);
              if (comp < 0) {
                minIndex = currentIndex + 1;
              } else if (comp > 0) {
                maxIndex = currentIndex - 1;
              } else {
                return currentIndex;
              }
            }
            return ~maxIndex;
          }
          var array = {
            bsearch,
            compare: {
              event: {
                asc: compareEventsASC
              },
              num: {
                asc: compareNumbersASC
              }
            }
          };
          function first(array2) {
            return array2[0];
          }
          function last(array2) {
            return array2[array2.length - 1];
          }
          function findLastIndex(array2, predicate) {
            for (var i2 = array2.length - 1; i2 >= 0; i2 -= 1) {
              if (predicate(array2[i2])) {
                return i2;
              }
            }
            return -1;
          }
          function fill(length, value) {
            if (length > 0) {
              return Array.from({
                length
              }, function() {
                if (Array.isArray(value)) {
                  return value.slice();
                }
                return value;
              });
            }
            return [];
          }
          function _toConsumableArray(r2) {
            return _arrayWithoutHoles(r2) || _iterableToArray(r2) || datetime_unsupportedIterableToArray(r2) || _nonIterableSpread();
          }
          function _nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function _iterableToArray(r2) {
            if ("undefined" != typeof Symbol && null != r2[Symbol.iterator] || null != r2["@@iterator"])
              return Array.from(r2);
          }
          function _arrayWithoutHoles(r2) {
            if (Array.isArray(r2))
              return datetime_arrayLikeToArray(r2);
          }
          function datetime_slicedToArray(r2, e2) {
            return datetime_arrayWithHoles(r2) || datetime_iterableToArrayLimit(r2, e2) || datetime_unsupportedIterableToArray(r2, e2) || datetime_nonIterableRest();
          }
          function datetime_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function datetime_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return datetime_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? datetime_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function datetime_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function datetime_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function datetime_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          var Day = /* @__PURE__ */ function(Day2) {
            Day2[Day2["SUN"] = 0] = "SUN";
            Day2[Day2["MON"] = 1] = "MON";
            Day2[Day2["TUE"] = 2] = "TUE";
            Day2[Day2["WED"] = 3] = "WED";
            Day2[Day2["THU"] = 4] = "THU";
            Day2[Day2["FRI"] = 5] = "FRI";
            Day2[Day2["SAT"] = 6] = "SAT";
            return Day2;
          }({});
          var WEEK_DAYS = 7;
          var dateFormatRx = /^(\d{4}[-|/]*\d{2}[-|/]*\d{2})\s?(\d{2}:\d{2}:\d{2})?$/;
          var memo = {
            millisecondsTo: {},
            millisecondsFrom: {}
          };
          var convByTimeUnit = [24, 60, 60, 1e3];
          function leadingZero(number, length) {
            var zero = "";
            var i2 = 0;
            if (String(number).length > length) {
              return String(number);
            }
            for (; i2 < length - 1; i2 += 1) {
              zero += "0";
            }
            return (zero + number).slice(length * -1);
          }
          function getHourForMeridiem(date2) {
            var hour = date2.getHours();
            if (hour === 0) {
              hour = 12;
            }
            if (hour > 12) {
              hour = hour % 12;
            }
            return hour;
          }
          var tokenFunc = {
            YYYYMMDD: function YYYYMMDD(date2) {
              return [date2.getFullYear(), leadingZero(date2.getMonth() + 1, 2), leadingZero(date2.getDate(), 2)].join("");
            },
            YYYY: function YYYY(date2) {
              return String(date2.getFullYear());
            },
            MM: function MM(date2) {
              return leadingZero(date2.getMonth() + 1, 2);
            },
            DD: function DD(date2) {
              return leadingZero(date2.getDate(), 2);
            },
            "HH:mm": function HHMm(date2) {
              var hour = date2.getHours();
              var minutes = date2.getMinutes();
              return "".concat(leadingZero(hour, 2), ":").concat(leadingZero(minutes, 2));
            },
            "hh:mm": function hhMm(date2) {
              var hour = getHourForMeridiem(date2);
              var minutes = date2.getMinutes();
              return "".concat(leadingZero(hour, 2), ":").concat(leadingZero(minutes, 2));
            },
            hh: function hh(date2) {
              var hour = getHourForMeridiem(date2);
              return String(hour);
            },
            tt: function tt(date2) {
              var hour = date2.getHours();
              return hour < 12 ? "am" : "pm";
            }
          };
          var MS_PER_DAY = 864e5;
          var MS_PER_MINUTES = 6e4;
          var MS_EVENT_MIN_DURATION = 20 * MS_PER_MINUTES;
          var MS_PER_THIRTY_MINUTES = 30 * 60 * 1e3;
          function datetime_toFormat(date2, strFormat) {
            var result = strFormat;
            Object.entries(tokenFunc).forEach(function(_ref) {
              var _ref2 = datetime_slicedToArray(_ref, 2), token = _ref2[0], converter = _ref2[1];
              result = result.replace(token, converter(date2));
            });
            return result;
          }
          function convMilliseconds(type, value, iteratee) {
            var index = {
              date: 0,
              hour: 1,
              minute: 2,
              second: 3
            };
            if (!(type in index) || isNaN(value)) {
              return 0;
            }
            return [value].concat(convByTimeUnit.slice(index[type])).reduce(iteratee);
          }
          function millisecondsFrom(type, value) {
            var cache = memo.millisecondsFrom;
            var key = type + value;
            if (cache[key]) {
              return cache[key];
            }
            var result = convMilliseconds(type, value, function(m, v2) {
              return m * v2;
            });
            if (!result) {
              return 0;
            }
            cache[key] = result;
            return cache[key];
          }
          function toStartOfDay(date2) {
            var d2 = date2 ? new date_TZDate(date2) : new date_TZDate();
            d2.setHours(0, 0, 0, 0);
            return d2;
          }
          function makeDateRange(startDate, endDate, step) {
            var startTime = startDate.getTime();
            var endTime = endDate.getTime();
            var date2 = new date_TZDate(startDate);
            var result = [];
            var cursor = startTime;
            while (cursor <= endTime && endTime >= date2.getTime()) {
              result.push(new date_TZDate(date2));
              cursor = cursor + step;
              date2.addMilliseconds(step);
            }
            return result;
          }
          function datetime_clone(date2) {
            return new date_TZDate(date2);
          }
          function compare(d1, d2) {
            var _d1 = d1.getTime();
            var _d2 = d2.getTime();
            if (_d1 < _d2) {
              return -1;
            }
            if (_d1 > _d2) {
              return 1;
            }
            return 0;
          }
          function isSameYear(d1, d2) {
            return d1.getFullYear() === d2.getFullYear();
          }
          function isSameMonth(d1, d2) {
            return isSameYear(d1, d2) && d1.getMonth() === d2.getMonth();
          }
          function isSameDate(d1, d2) {
            return isSameMonth(d1, d2) && d1.getDate() === d2.getDate();
          }
          function max(d1, d2) {
            return compare(d1, d2) === 1 ? d1 : d2;
          }
          function min(d1, d2) {
            return compare(d1, d2) === -1 ? d1 : d2;
          }
          function isNotHolyday(d1, daysList) {
            var date2 = "".concat(d1.getDate(), ".").concat(d1.getMonth(), ".").concat(d1.getFullYear());
            return daysList.some(function(d2) {
              return d2 === date2;
            });
          }
          function parse(str) {
            var fixMonth = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : -1;
            var matches = str.match(dateFormatRx);
            var separator;
            var ymd;
            var hms;
            if (!matches) {
              throw new InvalidDateTimeFormatError(str);
            }
            if (str.length > 8) {
              separator = ~str.indexOf("/") ? "/" : "-";
              var result = matches.splice(1);
              ymd = result[0].split(separator);
              hms = result[1] ? result[1].split(":") : [0, 0, 0];
            } else {
              var _matches = datetime_slicedToArray(matches, 1), _result = _matches[0];
              ymd = [_result.substr(0, 4), _result.substr(4, 2), _result.substr(6, 2)];
              hms = [0, 0, 0];
            }
            return new date_TZDate().setWithRaw(Number(ymd[0]), Number(ymd[1]) + fixMonth, Number(ymd[2]), Number(hms[0]), Number(hms[1]), Number(hms[2]), 0);
          }
          function toEndOfDay(date2) {
            var d2 = date2 ? new date_TZDate(date2) : new date_TZDate();
            d2.setHours(23, 59, 59, 999);
            return d2;
          }
          function isWeekend(day) {
            return day === Day.SUN || day === Day.SAT;
          }
          function isSunday(day) {
            return day === Day.SUN;
          }
          function isSaturday(day) {
            return day === Day.SAT;
          }
          function toStartOfMonth(date2) {
            var startDate = new date_TZDate(date2);
            startDate.setDate(1);
            startDate.setHours(0, 0, 0, 0);
            return startDate;
          }
          function toEndOfMonth(date2) {
            var endDate = toStartOfMonth(date2);
            endDate.setMonth(endDate.getMonth() + 1);
            endDate.setDate(endDate.getDate() - 1);
            endDate.setHours(23, 59, 59, 999);
            return endDate;
          }
          function getRowStyleInfo(days, narrowWeekend, startDayOfWeek, workweek) {
            var limitDaysToApplyNarrowWeekend = 5;
            var uniformWidth = 100 / days;
            var wideWidth = days > limitDaysToApplyNarrowWeekend ? 100 / (days - 1) : uniformWidth;
            var accumulatedWidth = 0;
            var dates = range_default()(startDayOfWeek, WEEK_DAYS).concat(range_default()(days)).slice(0, WEEK_DAYS);
            narrowWeekend = workweek ? false : narrowWeekend;
            var rowStyleInfo = dates.map(function(day) {
              var width = narrowWeekend ? wideWidth : uniformWidth;
              if (days > limitDaysToApplyNarrowWeekend && narrowWeekend && isWeekend(day)) {
                width = wideWidth / 2;
              }
              var model = {
                width,
                left: accumulatedWidth
              };
              accumulatedWidth += width;
              return model;
            });
            var length = rowStyleInfo.length;
            var cellWidthMap = fill(length, fill(length, 0));
            rowStyleInfo.forEach(function(_ref3, index) {
              var width = _ref3.width;
              for (var i2 = 0; i2 <= index; i2 += 1) {
                for (var j2 = index; j2 < length; j2 += 1) {
                  cellWidthMap[i2][j2] += width;
                }
              }
            });
            cellWidthMap[0][length - 1] = 100;
            return {
              rowStyleInfo,
              cellWidthMap: cellWidthMap.map(function(widthList) {
                return widthList.map(toPercent);
              })
            };
          }
          function addMilliseconds(d2, step) {
            var date2 = datetime_clone(d2);
            date2.setMilliseconds(d2.getMilliseconds() + step);
            return date2;
          }
          function addMinutes(d2, step) {
            var date2 = datetime_clone(d2);
            date2.setMinutes(d2.getMinutes() + step);
            return date2;
          }
          function setTimeStrToDate(d2, timeStr) {
            var date2 = datetime_clone(d2);
            date2.setHours.apply(date2, _toConsumableArray(timeStr.split(":").map(Number)));
            return date2;
          }
          function addDate(d2, step) {
            var date2 = datetime_clone(d2);
            date2.setDate(d2.getDate() + step);
            return date2;
          }
          function subtractDate(d2, steps) {
            var date2 = datetime_clone(d2);
            date2.setDate(d2.getDate() - steps);
            return date2;
          }
          function addMonths(d2) {
            var step = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
            var date2 = datetime_clone(d2);
            if (step !== 0) {
              var dayOfMonth = date2.getDate();
              var endOfDesiredMonth = new date_TZDate(date2.getTime());
              endOfDesiredMonth.setMonth(date2.getMonth() + step + 1, 0);
              var daysInMonth = endOfDesiredMonth.getDate();
              if (dayOfMonth >= daysInMonth) {
                return endOfDesiredMonth;
              }
              date2.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);
            }
            return date2;
          }
          function getDateDifference(d1, d2) {
            var _d1 = new date_TZDate(d1.getFullYear(), d1.getMonth(), d1.getDate()).getTime();
            var _d2 = new date_TZDate(d2.getFullYear(), d2.getMonth(), d2.getDate()).getTime();
            return Math.round((_d1 - _d2) / MS_PER_DAY);
          }
          function hasCollision(start, end, targetStart, targetEnd) {
            return targetStart > start && targetStart < end || targetEnd > start && targetEnd < end || targetStart <= start && targetEnd >= end;
          }
          function events_collidesWith(_ref) {
            var start = _ref.start, end = _ref.end, targetStart = _ref.targetStart, targetEnd = _ref.targetEnd, goingDuration = _ref.goingDuration, comingDuration = _ref.comingDuration, targetGoingDuration = _ref.targetGoingDuration, targetComingDuration = _ref.targetComingDuration, usingTravelTime = _ref.usingTravelTime;
            if (Math.abs(end - start) < MS_EVENT_MIN_DURATION) {
              end += MS_EVENT_MIN_DURATION;
            }
            if (Math.abs(end - start) < MS_EVENT_MIN_DURATION) {
              end += MS_EVENT_MIN_DURATION;
            }
            if (usingTravelTime) {
              start -= millisecondsFrom("minute", goingDuration);
              end += millisecondsFrom("minute", comingDuration);
              targetStart -= millisecondsFrom("minute", targetGoingDuration);
              targetEnd += millisecondsFrom("minute", targetComingDuration);
            }
            return hasCollision(start, end, targetStart, targetEnd);
          }
          function isSameEvent(event, eventId, calendarId2) {
            return event.id === eventId && event.calendarId === calendarId2;
          }
          function idGenerator() {
            var id = 0;
            return {
              next: function next() {
                id += 1;
                return id;
              }
            };
          }
          var getId = function() {
            var generator = idGenerator();
            return function() {
              return generator.next();
            };
          }();
          function stamp(obj) {
            if (!obj.__fe_id) {
              obj.__fe_id = getId();
            }
            return obj.__fe_id;
          }
          function eventModel_typeof(o2) {
            "@babel/helpers - typeof";
            return eventModel_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, eventModel_typeof(o2);
          }
          function eventModel_classCallCheck(a2, n2) {
            if (!(a2 instanceof n2))
              throw new TypeError("Cannot call a class as a function");
          }
          function eventModel_defineProperties(e2, r2) {
            for (var t = 0; t < r2.length; t++) {
              var o2 = r2[t];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, eventModel_toPropertyKey(o2.key), o2);
            }
          }
          function eventModel_createClass(e2, r2, t) {
            return r2 && eventModel_defineProperties(e2.prototype, r2), t && eventModel_defineProperties(e2, t), Object.defineProperty(e2, "prototype", { writable: false }), e2;
          }
          function eventModel_defineProperty(e2, r2, t) {
            return (r2 = eventModel_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function eventModel_toPropertyKey(t) {
            var i2 = eventModel_toPrimitive(t, "string");
            return "symbol" == eventModel_typeof(i2) ? i2 : i2 + "";
          }
          function eventModel_toPrimitive(t, r2) {
            if ("object" != eventModel_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != eventModel_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          var EventModel = /* @__PURE__ */ function() {
            function EventModel2() {
              var event = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
              eventModel_classCallCheck(this, EventModel2);
              eventModel_defineProperty(this, "id", "");
              eventModel_defineProperty(this, "calendarId", "");
              eventModel_defineProperty(this, "title", "");
              eventModel_defineProperty(this, "body", "");
              eventModel_defineProperty(this, "isAllday", false);
              eventModel_defineProperty(this, "start", new date_TZDate());
              eventModel_defineProperty(this, "end", new date_TZDate());
              eventModel_defineProperty(this, "goingDuration", 0);
              eventModel_defineProperty(this, "comingDuration", 0);
              eventModel_defineProperty(this, "location", "");
              eventModel_defineProperty(this, "attendees", []);
              eventModel_defineProperty(this, "category", "time");
              eventModel_defineProperty(this, "dueDateClass", "");
              eventModel_defineProperty(this, "recurrenceRule", "");
              eventModel_defineProperty(this, "state", "Busy");
              eventModel_defineProperty(this, "isVisible", true);
              eventModel_defineProperty(this, "isPending", false);
              eventModel_defineProperty(this, "isFocused", false);
              eventModel_defineProperty(this, "isReadOnly", false);
              eventModel_defineProperty(this, "isPrivate", false);
              eventModel_defineProperty(this, "customStyle", {});
              eventModel_defineProperty(this, "raw", null);
              eventModel_defineProperty(this, "hasMultiDates", false);
              stamp(this);
              this.init(event);
            }
            return eventModel_createClass(EventModel2, [{
              key: "init",
              value: function init() {
                var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref$id = _ref.id, id = _ref$id === void 0 ? "" : _ref$id, _ref$calendarId = _ref.calendarId, calendarId2 = _ref$calendarId === void 0 ? "" : _ref$calendarId, _ref$title = _ref.title, title = _ref$title === void 0 ? "" : _ref$title, _ref$body = _ref.body, body = _ref$body === void 0 ? "" : _ref$body, _ref$isAllday = _ref.isAllday, isAllday2 = _ref$isAllday === void 0 ? false : _ref$isAllday, _ref$start = _ref.start, start = _ref$start === void 0 ? new date_TZDate() : _ref$start, _ref$end = _ref.end, end = _ref$end === void 0 ? new date_TZDate() : _ref$end, _ref$goingDuration = _ref.goingDuration, goingDuration = _ref$goingDuration === void 0 ? 0 : _ref$goingDuration, _ref$comingDuration = _ref.comingDuration, comingDuration = _ref$comingDuration === void 0 ? 0 : _ref$comingDuration, _ref$location = _ref.location, location2 = _ref$location === void 0 ? "" : _ref$location, _ref$attendees = _ref.attendees, attendees = _ref$attendees === void 0 ? [] : _ref$attendees, _ref$category = _ref.category, category = _ref$category === void 0 ? "time" : _ref$category, _ref$dueDateClass = _ref.dueDateClass, dueDateClass = _ref$dueDateClass === void 0 ? "" : _ref$dueDateClass, _ref$recurrenceRule = _ref.recurrenceRule, recurrenceRule = _ref$recurrenceRule === void 0 ? "" : _ref$recurrenceRule, _ref$state = _ref.state, state = _ref$state === void 0 ? "Busy" : _ref$state, _ref$isVisible = _ref.isVisible, isVisible = _ref$isVisible === void 0 ? true : _ref$isVisible, _ref$isPending = _ref.isPending, isPending = _ref$isPending === void 0 ? false : _ref$isPending, _ref$isFocused = _ref.isFocused, isFocused = _ref$isFocused === void 0 ? false : _ref$isFocused, _ref$isReadOnly = _ref.isReadOnly, isReadOnly = _ref$isReadOnly === void 0 ? false : _ref$isReadOnly, _ref$isPrivate = _ref.isPrivate, isPrivate = _ref$isPrivate === void 0 ? false : _ref$isPrivate, color = _ref.color, backgroundColor = _ref.backgroundColor, dragBackgroundColor = _ref.dragBackgroundColor, borderColor = _ref.borderColor, _ref$customStyle = _ref.customStyle, customStyle = _ref$customStyle === void 0 ? {} : _ref$customStyle, _ref$raw = _ref.raw, raw = _ref$raw === void 0 ? null : _ref$raw;
                this.id = id;
                this.calendarId = calendarId2;
                this.title = title;
                this.body = body;
                this.isAllday = category === "allday" ? true : isAllday2;
                this.goingDuration = goingDuration;
                this.comingDuration = comingDuration;
                this.location = location2;
                this.attendees = attendees;
                this.category = category;
                this.dueDateClass = dueDateClass;
                this.recurrenceRule = recurrenceRule;
                this.state = state;
                this.isVisible = isVisible;
                this.isPending = isPending;
                this.isFocused = isFocused;
                this.isReadOnly = isReadOnly;
                this.isPrivate = isPrivate;
                this.color = color;
                this.backgroundColor = backgroundColor;
                this.dragBackgroundColor = dragBackgroundColor;
                this.borderColor = borderColor;
                this.customStyle = customStyle;
                this.raw = raw;
                if (this.isAllday) {
                  this.setAlldayPeriod(start, end);
                } else {
                  this.setTimePeriod(start, end);
                }
                if (category === "milestone" || category === "task") {
                  this.start = new date_TZDate(this.end);
                }
              }
            }, {
              key: "setAlldayPeriod",
              value: function setAlldayPeriod(start, end) {
                var startedAt;
                var endedAt;
                if (isString_default()(start)) {
                  startedAt = parse(start.substring(0, 10));
                } else {
                  startedAt = new date_TZDate(start || Date.now());
                }
                if (isString_default()(end)) {
                  endedAt = parse(end.substring(0, 10));
                } else {
                  endedAt = new date_TZDate(end || this.start);
                }
                this.start = startedAt;
                this.start.setHours(0, 0, 0);
                this.end = endedAt || new date_TZDate(this.start);
                this.end.setHours(23, 59, 59);
              }
            }, {
              key: "setTimePeriod",
              value: function setTimePeriod(start, end) {
                this.start = new date_TZDate(start || Date.now());
                this.end = new date_TZDate(end || this.start);
                if (!end) {
                  this.end.setMinutes(this.end.getMinutes() + 30);
                }
                this.hasMultiDates = this.end.getTime() - this.start.getTime() > MS_PER_DAY;
              }
            }, {
              key: "getStarts",
              value: function getStarts() {
                return this.start;
              }
            }, {
              key: "getEnds",
              value: function getEnds() {
                return this.end;
              }
            }, {
              key: "cid",
              value: function cid() {
                return stamp(this);
              }
            }, {
              key: "equals",
              value: function equals(event) {
                if (this.id !== event.id) {
                  return false;
                }
                if (this.title !== event.title) {
                  return false;
                }
                if (this.body !== event.body) {
                  return false;
                }
                if (this.isAllday !== event.isAllday) {
                  return false;
                }
                if (compare(this.getStarts(), event.getStarts()) !== 0) {
                  return false;
                }
                if (compare(this.getEnds(), event.getEnds()) !== 0) {
                  return false;
                }
                if (this.color !== event.color) {
                  return false;
                }
                if (this.backgroundColor !== event.backgroundColor) {
                  return false;
                }
                if (this.dragBackgroundColor !== event.dragBackgroundColor) {
                  return false;
                }
                if (this.borderColor !== event.borderColor) {
                  return false;
                }
                return true;
              }
            }, {
              key: "duration",
              value: function duration() {
                var start = Number(this.getStarts());
                var end = Number(this.getEnds());
                var duration2;
                if (this.isAllday) {
                  duration2 = Number(toEndOfDay(end)) - Number(toStartOfDay(start));
                } else {
                  duration2 = end - start;
                }
                return duration2;
              }
            }, {
              key: "valueOf",
              value: function valueOf() {
                return this;
              }
            }, {
              key: "collidesWith",
              value: function collidesWith(event) {
                var usingTravelTime = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
                event = event instanceof EventUIModel ? event.model : event;
                return events_collidesWith({
                  start: Number(this.getStarts()),
                  end: Number(this.getEnds()),
                  targetStart: Number(event.getStarts()),
                  targetEnd: Number(event.getEnds()),
                  goingDuration: this.goingDuration,
                  comingDuration: this.comingDuration,
                  targetGoingDuration: event.goingDuration,
                  targetComingDuration: event.comingDuration,
                  usingTravelTime
                });
              }
            }, {
              key: "toEventObject",
              value: function toEventObject() {
                return {
                  id: this.id,
                  calendarId: this.calendarId,
                  __cid: this.cid(),
                  title: this.title,
                  body: this.body,
                  isAllday: this.isAllday,
                  start: this.start,
                  end: this.end,
                  goingDuration: this.goingDuration,
                  comingDuration: this.comingDuration,
                  location: this.location,
                  attendees: this.attendees,
                  category: this.category,
                  dueDateClass: this.dueDateClass,
                  recurrenceRule: this.recurrenceRule,
                  state: this.state,
                  isVisible: this.isVisible,
                  isPending: this.isPending,
                  isFocused: this.isFocused,
                  isReadOnly: this.isReadOnly,
                  isPrivate: this.isPrivate,
                  color: this.color,
                  backgroundColor: this.backgroundColor,
                  dragBackgroundColor: this.dragBackgroundColor,
                  borderColor: this.borderColor,
                  customStyle: this.customStyle,
                  raw: this.raw
                };
              }
            }, {
              key: "getColors",
              value: function getColors() {
                return {
                  color: this.color,
                  backgroundColor: this.backgroundColor,
                  dragBackgroundColor: this.dragBackgroundColor,
                  borderColor: this.borderColor
                };
              }
            }]);
          }();
          eventModel_defineProperty(EventModel, "schema", {
            required: ["title"],
            dateRange: ["start", "end"]
          });
          function isTimeEvent(_ref2) {
            var model = _ref2.model;
            var category = model.category, isAllday2 = model.isAllday, hasMultiDates = model.hasMultiDates;
            return category === "time" && !isAllday2 && !hasMultiDates;
          }
          __webpack_require__(3975);
          function collection_typeof(o2) {
            "@babel/helpers - typeof";
            return collection_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, collection_typeof(o2);
          }
          function collection_slicedToArray(r2, e2) {
            return collection_arrayWithHoles(r2) || collection_iterableToArrayLimit(r2, e2) || collection_unsupportedIterableToArray(r2, e2) || collection_nonIterableRest();
          }
          function collection_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function collection_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return collection_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? collection_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function collection_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function collection_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function collection_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function collection_classCallCheck(a2, n2) {
            if (!(a2 instanceof n2))
              throw new TypeError("Cannot call a class as a function");
          }
          function collection_defineProperties(e2, r2) {
            for (var t = 0; t < r2.length; t++) {
              var o2 = r2[t];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, collection_toPropertyKey(o2.key), o2);
            }
          }
          function collection_createClass(e2, r2, t) {
            return r2 && collection_defineProperties(e2.prototype, r2), t && collection_defineProperties(e2, t), Object.defineProperty(e2, "prototype", { writable: false }), e2;
          }
          function collection_defineProperty(e2, r2, t) {
            return (r2 = collection_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function collection_toPropertyKey(t) {
            var i2 = collection_toPrimitive(t, "string");
            return "symbol" == collection_typeof(i2) ? i2 : i2 + "";
          }
          function collection_toPrimitive(t, r2) {
            if ("object" != collection_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != collection_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          var Collection = /* @__PURE__ */ function() {
            function Collection2(getItemIDFn) {
              collection_classCallCheck(this, Collection2);
              collection_defineProperty(this, "internalMap", /* @__PURE__ */ new Map());
              if (isFunction(getItemIDFn)) {
                this.getItemID = getItemIDFn;
              }
            }
            return collection_createClass(Collection2, [{
              key: "getItemID",
              value: function getItemID(item) {
                var _item$_id;
                return (_item$_id = item === null || item === void 0 ? void 0 : item._id) !== null && _item$_id !== void 0 ? _item$_id : "";
              }
            }, {
              key: "getFirstItem",
              value: function getFirstItem() {
                var iterator = this.internalMap.values();
                return iterator.next().value;
              }
            }, {
              key: "add",
              value: function add() {
                var _this = this;
                for (var _len = arguments.length, items = new Array(_len), _key = 0; _key < _len; _key++) {
                  items[_key] = arguments[_key];
                }
                items.forEach(function(item) {
                  var id = _this.getItemID(item);
                  _this.internalMap.set(id, item);
                });
                return this;
              }
            }, {
              key: "remove",
              value: function remove() {
                var _this2 = this;
                var removeResult = [];
                for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
                  items[_key2] = arguments[_key2];
                }
                items.forEach(function(item) {
                  var id = isString_default()(item) || isNumber_default()(item) ? item : _this2.getItemID(item);
                  if (!_this2.internalMap.has(id)) {
                    return;
                  }
                  removeResult.push(_this2.internalMap.get(id));
                  _this2.internalMap["delete"](id);
                });
                return removeResult.length === 1 ? removeResult[0] : removeResult;
              }
            }, {
              key: "has",
              value: function has(item) {
                var id = isString_default()(item) || isNumber_default()(item) ? item : this.getItemID(item);
                return this.internalMap.has(id);
              }
            }, {
              key: "get",
              value: function get(item) {
                var _this$internalMap$get;
                var id = isString_default()(item) || isNumber_default()(item) ? item : this.getItemID(item);
                return (_this$internalMap$get = this.internalMap.get(id)) !== null && _this$internalMap$get !== void 0 ? _this$internalMap$get : null;
              }
            }, {
              key: "doWhenHas",
              value: function doWhenHas(id, callback) {
                var item = this.internalMap.get(id);
                if (type_isNil(item)) {
                  return;
                }
                callback(item);
              }
            }, {
              key: "filter",
              value: function filter(filterFn) {
                var result = new Collection2();
                if (this.hasOwnProperty("getItemID")) {
                  result.getItemID = this.getItemID;
                }
                this.internalMap.forEach(function(item) {
                  if (filterFn(item) === true) {
                    result.add(item);
                  }
                });
                return result;
              }
            }, {
              key: "groupBy",
              value: function groupBy(groupByFn) {
                var _this3 = this;
                var result = {};
                this.internalMap.forEach(function(item) {
                  var _key3, _result$_key;
                  var key = isFunction(groupByFn) ? groupByFn(item) : item[groupByFn];
                  if (isFunction(key)) {
                    key = key.call(item);
                  }
                  (_result$_key = result[_key3 = key]) !== null && _result$_key !== void 0 ? _result$_key : result[_key3] = new Collection2(_this3.getItemID);
                  result[key].add(item);
                });
                return result;
              }
            }, {
              key: "find",
              value: function find(findFn) {
                var result = null;
                var items = this.internalMap.values();
                var next = items.next();
                while (next.done === false) {
                  if (findFn(next.value)) {
                    result = next.value;
                    break;
                  }
                  next = items.next();
                }
                return result;
              }
            }, {
              key: "sort",
              value: function sort(compareFn) {
                return this.toArray().sort(compareFn);
              }
            }, {
              key: "each",
              value: function each(iteratee) {
                var entries = this.internalMap.entries();
                var next = entries.next();
                while (next.done === false) {
                  var _next$value = collection_slicedToArray(next.value, 2), key = _next$value[0], value = _next$value[1];
                  if (iteratee(value, key) === false) {
                    break;
                  }
                  next = entries.next();
                }
              }
            }, {
              key: "clear",
              value: function clear() {
                this.internalMap.clear();
              }
            }, {
              key: "toArray",
              value: function toArray() {
                return Array.from(this.internalMap.values());
              }
            }, {
              key: "size",
              get: function get() {
                return this.internalMap.size;
              }
            }], [{
              key: "and",
              value: function and() {
                for (var _len3 = arguments.length, filterFns = new Array(_len3), _key4 = 0; _key4 < _len3; _key4++) {
                  filterFns[_key4] = arguments[_key4];
                }
                var length = filterFns.length;
                return function(item) {
                  for (var i2 = 0; i2 < length; i2 += 1) {
                    if (!filterFns[i2].call(null, item)) {
                      return false;
                    }
                  }
                  return true;
                };
              }
            }, {
              key: "or",
              value: function or() {
                for (var _len4 = arguments.length, filterFns = new Array(_len4), _key5 = 0; _key5 < _len4; _key5++) {
                  filterFns[_key5] = arguments[_key5];
                }
                var length = filterFns.length;
                if (!length) {
                  return function() {
                    return false;
                  };
                }
                return function(item) {
                  var result = filterFns[0].call(null, item);
                  for (var i2 = 1; i2 < length; i2 += 1) {
                    result = result || filterFns[i2].call(null, item);
                  }
                  return result;
                };
              }
            }]);
          }();
          function base_typeof(o2) {
            "@babel/helpers - typeof";
            return base_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, base_typeof(o2);
          }
          function ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function _objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? ownKeys(Object(t), true).forEach(function(r3) {
                base_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function base_defineProperty(e2, r2, t) {
            return (r2 = base_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function base_toPropertyKey(t) {
            var i2 = base_toPrimitive(t, "string");
            return "symbol" == base_typeof(i2) ? i2 : i2 + "";
          }
          function base_toPrimitive(t, r2) {
            if ("object" != base_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != base_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function createEventCollection() {
            var collection = new Collection(function(event) {
              return event.cid();
            });
            if (arguments.length) {
              collection.add.apply(collection, arguments);
            }
            return collection;
          }
          function getDateRange(start, end) {
            return makeDateRange(toStartOfDay(start), toEndOfDay(end), MS_PER_DAY);
          }
          function isAllday(event) {
            return event.isAllday || event.category === "time" && Number(event.end) - Number(event.start) > MS_PER_DAY;
          }
          function filterByCategory(uiModel) {
            var model = uiModel.model;
            if (isAllday(model)) {
              return "allday";
            }
            return model.category;
          }
          function addToMatrix(idsOfDay, event) {
            var containDates = getDateRange(event.getStarts(), event.getEnds());
            containDates.forEach(function(date2) {
              var ymd = datetime_toFormat(date2, "YYYYMMDD");
              var matrix = idsOfDay[ymd] = idsOfDay[ymd] || [];
              matrix.push(event.cid());
            });
          }
          function removeFromMatrix(idsOfDay, event) {
            var modelID = event.cid();
            Object.values(idsOfDay).forEach(function(ids) {
              var index = ids.indexOf(modelID);
              if (~index) {
                ids.splice(index, 1);
              }
            });
          }
          function addEvent(calendarData, event) {
            calendarData.events.add(event);
            addToMatrix(calendarData.idsOfDay, event);
            return event;
          }
          function createEvent(calendarData, eventData) {
            var event = new EventModel(eventData);
            return addEvent(calendarData, event);
          }
          function base_createEvents(calendarData) {
            var events = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [];
            return events.map(function(eventData) {
              return createEvent(calendarData, eventData);
            });
          }
          function base_updateEvent(calendarData, eventId, calendarId2, eventData) {
            var idsOfDay = calendarData.idsOfDay;
            var event = calendarData.events.find(function(item) {
              return isSameEvent(item, eventId, calendarId2);
            });
            if (!event) {
              return false;
            }
            event.init(_objectSpread(_objectSpread({}, event), eventData));
            removeFromMatrix(idsOfDay, event);
            addToMatrix(idsOfDay, event);
            return true;
          }
          function base_deleteEvent(calendarData, event) {
            removeFromMatrix(calendarData.idsOfDay, event);
            calendarData.events.remove(event);
            return event;
          }
          function base_clearEvents(calendarData) {
            calendarData.idsOfDay = {};
            calendarData.events.clear();
          }
          var randomUUID = typeof crypto !== "undefined" && crypto.randomUUID && crypto.randomUUID.bind(crypto);
          var esm_browser_native = {
            randomUUID
          };
          var getRandomValues;
          var rnds8 = new Uint8Array(16);
          function rng() {
            if (!getRandomValues) {
              getRandomValues = typeof crypto !== "undefined" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);
              if (!getRandomValues) {
                throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");
              }
            }
            return getRandomValues(rnds8);
          }
          var byteToHex = [];
          for (var stringify_i = 0; stringify_i < 256; ++stringify_i) {
            byteToHex.push((stringify_i + 256).toString(16).slice(1));
          }
          function unsafeStringify(arr, offset = 0) {
            return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + "-" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + "-" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + "-" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + "-" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();
          }
          function v4(options, buf, offset) {
            if (esm_browser_native.randomUUID && !buf && !options) {
              return esm_browser_native.randomUUID();
            }
            options = options || {};
            var rnds = options.random || (options.rng || rng)();
            rnds[6] = rnds[6] & 15 | 64;
            rnds[8] = rnds[8] & 63 | 128;
            if (buf) {
              offset = offset || 0;
              for (var i2 = 0; i2 < 16; ++i2) {
                buf[offset + i2] = rnds[i2];
              }
              return buf;
            }
            return unsafeStringify(rnds);
          }
          var esm_browser_v4 = v4;
          var calendarId = esm_browser_v4();
          var constants_calendarId = calendarId;
          var initialCalendars = [{
            id: constants_calendarId,
            name: "Public Holidays",
            backgroundColor: "#ff4040",
            borderColor: "#ff4040"
          }];
          var initialCalendar = initialCalendars;
          var initialEvents = [{
            id: esm_browser_v4(),
            calendarId: constants_calendarId,
            isReadOnly: true,
            title: "\u041D\u043E\u0432\u043E\u0433\u043E\u0434\u043D\u0438\u0435 \u043A\u0430\u043D\u0438\u043A\u0443\u043B\u044B",
            category: "allday",
            start: "2024-01-01T00:00:00",
            end: "2024-01-01T23:59:00"
          }, {
            id: esm_browser_v4(),
            calendarId: constants_calendarId,
            isReadOnly: true,
            title: "\u041D\u043E\u0432\u043E\u0433\u043E\u0434\u043D\u0438\u0435 \u043A\u0430\u043D\u0438\u043A\u0443\u043B\u044B",
            category: "allday",
            start: "2024-01-02T00:00:00",
            end: "2024-01-02T23:59:00"
          }, {
            id: esm_browser_v4(),
            calendarId: constants_calendarId,
            isReadOnly: true,
            title: "\u041D\u043E\u0432\u043E\u0433\u043E\u0434\u043D\u0438\u0435 \u043A\u0430\u043D\u0438\u043A\u0443\u043B\u044B",
            category: "allday",
            start: "2024-01-03T00:00:00",
            end: "2024-01-03T23:59:00"
          }, {
            id: esm_browser_v4(),
            calendarId: constants_calendarId,
            isReadOnly: true,
            title: "\u041D\u043E\u0432\u043E\u0433\u043E\u0434\u043D\u0438\u0435 \u043A\u0430\u043D\u0438\u043A\u0443\u043B\u044B",
            category: "allday",
            start: "2024-01-04T00:00:00",
            end: "2024-01-04T23:59:00"
          }, {
            id: esm_browser_v4(),
            calendarId: constants_calendarId,
            isReadOnly: true,
            title: "\u041D\u043E\u0432\u043E\u0433\u043E\u0434\u043D\u0438\u0435 \u043A\u0430\u043D\u0438\u043A\u0443\u043B\u044B",
            category: "allday",
            start: "2024-01-05T00:00:00",
            end: "2024-01-05T23:59:00"
          }, {
            id: esm_browser_v4(),
            calendarId: constants_calendarId,
            isReadOnly: true,
            title: "\u041D\u043E\u0432\u043E\u0433\u043E\u0434\u043D\u0438\u0435 \u043A\u0430\u043D\u0438\u043A\u0443\u043B\u044B",
            category: "allday",
            start: "2024-01-06T00:00:00",
            end: "2024-01-06T23:59:00"
          }, {
            id: esm_browser_v4(),
            calendarId: constants_calendarId,
            isReadOnly: true,
            title: "\u0420\u043E\u0436\u0434\u0435\u0441\u0442\u0432\u043E \u0425\u0440\u0438\u0441\u0442\u043E\u0432\u043E",
            category: "allday",
            start: "2024-01-07T00:00:00",
            end: "2024-01-07T23:59:00"
          }, {
            id: esm_browser_v4(),
            calendarId: constants_calendarId,
            isReadOnly: true,
            title: "\u041D\u043E\u0432\u043E\u0433\u043E\u0434\u043D\u0438\u0435 \u043A\u0430\u043D\u0438\u043A\u0443\u043B\u044B",
            category: "allday",
            start: "2024-01-08T00:00:00",
            end: "2024-01-08T23:59:00"
          }, {
            id: esm_browser_v4(),
            calendarId: constants_calendarId,
            isReadOnly: true,
            title: "\u0414\u0435\u043D\u044C \u0437\u0430\u0449\u0438\u0442\u043D\u0438\u043A\u0430 \u041E\u0442\u0435\u0447\u0435\u0441\u0442\u0432\u0430",
            category: "allday",
            start: "2024-02-23T00:00:00",
            end: "2024-02-23T23:59:00"
          }, {
            id: esm_browser_v4(),
            calendarId: constants_calendarId,
            isReadOnly: true,
            title: "\u041C\u0435\u0436\u0434\u0443\u043D\u0430\u0440\u043E\u0434\u043D\u044B\u0439 \u0436\u0435\u043D\u0441\u043A\u0438\u0439 \u0434\u0435\u043D\u044C",
            category: "allday",
            start: "2024-03-08T00:00:00",
            end: "2024-03-08T23:59:00"
          }, {
            id: esm_browser_v4(),
            calendarId: constants_calendarId,
            isReadOnly: true,
            title: "\u041F\u0440\u0430\u0437\u0434\u043D\u0438\u043A \u0412\u0435\u0441\u043D\u044B \u0438 \u0422\u0440\u0443\u0434\u0430",
            category: "allday",
            start: "2024-04-29T00:00:00",
            end: "2024-04-29T23:59:00"
          }, {
            id: esm_browser_v4(),
            calendarId: constants_calendarId,
            isReadOnly: true,
            title: "\u041F\u0440\u0430\u0437\u0434\u043D\u0438\u043A \u0412\u0435\u0441\u043D\u044B \u0438 \u0422\u0440\u0443\u0434\u0430",
            category: "allday",
            start: "2024-04-30T00:00:00",
            end: "2024-04-30T23:59:00"
          }, {
            id: esm_browser_v4(),
            calendarId: constants_calendarId,
            isReadOnly: true,
            title: "\u041F\u0440\u0430\u0437\u0434\u043D\u0438\u043A \u0412\u0435\u0441\u043D\u044B \u0438 \u0422\u0440\u0443\u0434\u0430",
            category: "allday",
            start: "2024-05-01T00:00:00",
            end: "2024-05-01T23:59:00"
          }, {
            id: esm_browser_v4(),
            calendarId: constants_calendarId,
            isReadOnly: true,
            title: "\u0414\u0435\u043D\u044C \u041F\u043E\u0431\u0435\u0434\u044B",
            category: "allday",
            start: "2024-05-09T00:00:00",
            end: "2024-05-09T23:59:00"
          }, {
            id: esm_browser_v4(),
            calendarId: constants_calendarId,
            isReadOnly: true,
            title: "\u0414\u0435\u043D\u044C \u041F\u043E\u0431\u0435\u0434\u044B",
            category: "allday",
            start: "2024-05-10T00:00:00",
            end: "2024-05-10T23:59:00"
          }, {
            id: esm_browser_v4(),
            calendarId: constants_calendarId,
            isReadOnly: true,
            title: "\u0414\u0435\u043D\u044C \u0420\u043E\u0441\u0441\u0438\u0438",
            category: "allday",
            start: "2024-06-12T00:00:00",
            end: "2024-06-12T23:59:00"
          }, {
            id: esm_browser_v4(),
            calendarId: constants_calendarId,
            isReadOnly: true,
            title: "\u0414\u0435\u043D\u044C \u043D\u0430\u0440\u043E\u0434\u043D\u043E\u0433\u043E \u0435\u0434\u0438\u043D\u0441\u0442\u0432\u0430",
            category: "allday",
            start: "2024-11-04T00:00:00",
            end: "2024-11-04T23:59:00"
          }, {
            id: esm_browser_v4(),
            calendarId: constants_calendarId,
            isReadOnly: true,
            title: "\u041D\u043E\u0432\u043E\u0433\u043E\u0434\u043D\u0438\u0435 \u043A\u0430\u043D\u0438\u043A\u0443\u043B\u044B",
            category: "allday",
            start: "2024-12-30T00:00:00",
            end: "2024-12-30T23:59:00"
          }, {
            id: esm_browser_v4(),
            calendarId: constants_calendarId,
            isReadOnly: true,
            title: "\u041D\u043E\u0432\u043E\u0433\u043E\u0434\u043D\u0438\u0435 \u043A\u0430\u043D\u0438\u043A\u0443\u043B\u044B",
            category: "allday",
            start: "2024-12-31T00:00:00",
            end: "2024-12-31T23:59:00"
          }];
          var eventModels = initialEvents.map(function(event) {
            return new EventModel(event);
          });
          var constants_initialEvents = eventModels;
          function calendar_typeof(o2) {
            "@babel/helpers - typeof";
            return calendar_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, calendar_typeof(o2);
          }
          function calendar_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function calendar_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? calendar_ownKeys(Object(t), true).forEach(function(r3) {
                calendar_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : calendar_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function calendar_defineProperty(e2, r2, t) {
            return (r2 = calendar_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function calendar_toPropertyKey(t) {
            var i2 = calendar_toPrimitive(t, "string");
            return "symbol" == calendar_typeof(i2) ? i2 : i2 + "";
          }
          function calendar_toPrimitive(t, r2) {
            if ("object" != calendar_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != calendar_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function calendar_toConsumableArray(r2) {
            return calendar_arrayWithoutHoles(r2) || calendar_iterableToArray(r2) || calendar_unsupportedIterableToArray(r2) || calendar_nonIterableSpread();
          }
          function calendar_nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function calendar_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return calendar_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? calendar_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function calendar_iterableToArray(r2) {
            if ("undefined" != typeof Symbol && null != r2[Symbol.iterator] || null != r2["@@iterator"])
              return Array.from(r2);
          }
          function calendar_arrayWithoutHoles(r2) {
            if (Array.isArray(r2))
              return calendar_arrayLikeToArray(r2);
          }
          function calendar_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function createCalendarSlice() {
            var calendars = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
            return {
              calendar: {
                calendars: [].concat(calendar_toConsumableArray(calendars), calendar_toConsumableArray(initialCalendar)),
                events: createEventCollection.apply(void 0, calendar_toConsumableArray(constants_initialEvents)),
                idsOfDay: {}
              }
            };
          }
          function createCalendarDispatchers(set) {
            return {
              createEvents: function createEvents(events) {
                return set((0, immer_esm.Ay)(function(state) {
                  base_createEvents(state.calendar, events);
                }));
              },
              updateEvent: function updateEvent(_ref) {
                var event = _ref.event, eventData = _ref.eventData;
                return set((0, immer_esm.Ay)(function(state) {
                  base_updateEvent(state.calendar, event.id, event.calendarId, eventData);
                }));
              },
              deleteEvent: function deleteEvent(event) {
                return set((0, immer_esm.Ay)(function(state) {
                  base_deleteEvent(state.calendar, event);
                }));
              },
              clearEvents: function clearEvents() {
                return set((0, immer_esm.Ay)(function(state) {
                  base_clearEvents(state.calendar);
                }));
              },
              setCalendars: function setCalendars(calendars) {
                return set((0, immer_esm.Ay)(function(state) {
                  state.calendar.calendars = calendars;
                }));
              },
              setCalendarColor: function setCalendarColor(calendarId2, colorOptions) {
                return set((0, immer_esm.Ay)(function(state) {
                  var calendars = state.calendar.calendars.map(function(calendar) {
                    if (calendar.id === calendarId2) {
                      return calendar_objectSpread(calendar_objectSpread({}, calendar), colorOptions);
                    }
                    return calendar;
                  });
                  var events = state.calendar.events.toArray().map(function(event) {
                    if (event.calendarId === calendarId2) {
                      var _colorOptions$color, _colorOptions$backgro, _colorOptions$borderC, _colorOptions$dragBac;
                      event.color = (_colorOptions$color = colorOptions.color) !== null && _colorOptions$color !== void 0 ? _colorOptions$color : event.color;
                      event.backgroundColor = (_colorOptions$backgro = colorOptions.backgroundColor) !== null && _colorOptions$backgro !== void 0 ? _colorOptions$backgro : event.backgroundColor;
                      event.borderColor = (_colorOptions$borderC = colorOptions.borderColor) !== null && _colorOptions$borderC !== void 0 ? _colorOptions$borderC : event.borderColor;
                      event.dragBackgroundColor = (_colorOptions$dragBac = colorOptions.dragBackgroundColor) !== null && _colorOptions$dragBac !== void 0 ? _colorOptions$dragBac : event.dragBackgroundColor;
                    }
                    return event;
                  });
                  var collection = createEventCollection.apply(void 0, calendar_toConsumableArray(events));
                  state.calendar.calendars = calendars;
                  state.calendar.events = collection;
                }));
              },
              setCalendarVisibility: function setCalendarVisibility(calendarIds, isVisible) {
                return set((0, immer_esm.Ay)(function(state) {
                  var events = state.calendar.events.toArray();
                  state.calendar.events = createEventCollection.apply(void 0, calendar_toConsumableArray(events.map(function(event) {
                    if (calendarIds.includes(event.calendarId)) {
                      event.isVisible = isVisible;
                    }
                    return event;
                  })));
                }));
              }
            };
          }
          function dnd_typeof(o2) {
            "@babel/helpers - typeof";
            return dnd_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, dnd_typeof(o2);
          }
          function dnd_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function dnd_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? dnd_ownKeys(Object(t), true).forEach(function(r3) {
                dnd_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : dnd_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function dnd_defineProperty(e2, r2, t) {
            return (r2 = dnd_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function dnd_toPropertyKey(t) {
            var i2 = dnd_toPrimitive(t, "string");
            return "symbol" == dnd_typeof(i2) ? i2 : i2 + "";
          }
          function dnd_toPrimitive(t, r2) {
            if ("object" != dnd_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != dnd_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          var DraggingState = /* @__PURE__ */ function(DraggingState2) {
            DraggingState2[DraggingState2["IDLE"] = 0] = "IDLE";
            DraggingState2[DraggingState2["INIT"] = 1] = "INIT";
            DraggingState2[DraggingState2["DRAGGING"] = 2] = "DRAGGING";
            DraggingState2[DraggingState2["CANCELED"] = 3] = "CANCELED";
            return DraggingState2;
          }({});
          function createDndSlice() {
            return {
              dnd: {
                draggingItemType: null,
                draggingState: DraggingState.IDLE,
                initX: null,
                initY: null,
                x: null,
                y: null,
                draggingEventUIModel: null
              }
            };
          }
          function createDndDispatchers(set) {
            return {
              initDrag: function initDrag(initState) {
                set((0, immer_esm.Ay)(function(state) {
                  state.dnd = dnd_objectSpread(dnd_objectSpread(dnd_objectSpread({}, state.dnd), initState), {}, {
                    draggingState: DraggingState.INIT
                  });
                }));
              },
              setDragging: function setDragging(newState) {
                set((0, immer_esm.Ay)(function(state) {
                  state.dnd = dnd_objectSpread(dnd_objectSpread(dnd_objectSpread({}, state.dnd), newState), {}, {
                    draggingState: DraggingState.DRAGGING
                  });
                }));
              },
              cancelDrag: function cancelDrag() {
                set((0, immer_esm.Ay)(function(state) {
                  state.dnd = createDndSlice().dnd;
                  state.dnd.draggingState = DraggingState.CANCELED;
                }));
              },
              reset: function reset() {
                set((0, immer_esm.Ay)(function(state) {
                  state.dnd = createDndSlice().dnd;
                }));
              },
              setDraggingEventUIModel: function setDraggingEventUIModel(eventUIModel) {
                set((0, immer_esm.Ay)(function(state) {
                  var _eventUIModel$clone;
                  state.dnd.draggingEventUIModel = (_eventUIModel$clone = eventUIModel === null || eventUIModel === void 0 ? void 0 : eventUIModel.clone()) !== null && _eventUIModel$clone !== void 0 ? _eventUIModel$clone : null;
                }));
              }
            };
          }
          function gridSelection_toConsumableArray(r2) {
            return gridSelection_arrayWithoutHoles(r2) || gridSelection_iterableToArray(r2) || gridSelection_unsupportedIterableToArray(r2) || gridSelection_nonIterableSpread();
          }
          function gridSelection_nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function gridSelection_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return gridSelection_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? gridSelection_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function gridSelection_iterableToArray(r2) {
            if ("undefined" != typeof Symbol && null != r2[Symbol.iterator] || null != r2["@@iterator"])
              return Array.from(r2);
          }
          function gridSelection_arrayWithoutHoles(r2) {
            if (Array.isArray(r2))
              return gridSelection_arrayLikeToArray(r2);
          }
          function gridSelection_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function createGridSelectionSlice() {
            return {
              gridSelection: {
                dayGridMonth: null,
                dayGridWeek: null,
                timeGrid: null,
                accumulated: {
                  dayGridMonth: []
                }
              }
            };
          }
          function createGridSelectionDispatchers(set) {
            return {
              setGridSelection: function setGridSelection(type, gridSelection) {
                set((0, immer_esm.Ay)(function(state) {
                  state.gridSelection[type] = gridSelection;
                }));
              },
              addGridSelection: function addGridSelection(type, gridSelection) {
                set((0, immer_esm.Ay)(function(state) {
                  if (type === "dayGridMonth" && gridSelection) {
                    state.gridSelection.accumulated[type] = [].concat(gridSelection_toConsumableArray(state.gridSelection.accumulated[type]), [gridSelection]);
                    state.gridSelection.dayGridMonth = null;
                  }
                }));
              },
              clearAll: function clearAll() {
                return set((0, immer_esm.Ay)(function(state) {
                  state.gridSelection = createGridSelectionSlice().gridSelection;
                }));
              }
            };
          }
          var DEFAULT_RESIZER_LENGTH = 3;
          var DEFAULT_DUPLICATE_EVENT_CID = -1;
          function getRestPanelHeight(dayGridRowsState, lastPanelType, initHeight) {
            return Object.keys(dayGridRowsState).reduce(function(acc, rowName) {
              if (rowName === lastPanelType) {
                return acc;
              }
              return acc - dayGridRowsState[rowName].height - DEFAULT_RESIZER_LENGTH;
            }, initHeight);
          }
          function createWeekViewLayoutSlice() {
            return {
              layout: 500,
              weekViewLayout: {
                lastPanelType: null,
                dayGridRows: {},
                selectedDuplicateEventCid: DEFAULT_DUPLICATE_EVENT_CID
              }
            };
          }
          function createWeekViewLayoutDispatchers(set) {
            return {
              setLastPanelType: function setLastPanelType(type) {
                set((0, immer_esm.Ay)(function(state) {
                  state.weekViewLayout.lastPanelType = type;
                  if (type) {
                    state.weekViewLayout.dayGridRows[type].height = getRestPanelHeight(state.weekViewLayout.dayGridRows, type, state.layout);
                  }
                }));
              },
              updateLayoutHeight: function updateLayoutHeight(height) {
                return set((0, immer_esm.Ay)(function(state) {
                  var lastPanelType = state.weekViewLayout.lastPanelType;
                  state.layout = height;
                  if (lastPanelType) {
                    state.weekViewLayout.dayGridRows[lastPanelType].height = getRestPanelHeight(state.weekViewLayout.dayGridRows, lastPanelType, height);
                  }
                }));
              },
              updateDayGridRowHeight: function updateDayGridRowHeight(_ref) {
                var rowName = _ref.rowName, height = _ref.height;
                return set((0, immer_esm.Ay)(function(state) {
                  var lastPanelType = state.weekViewLayout.lastPanelType;
                  state.weekViewLayout.dayGridRows[rowName] = {
                    height
                  };
                  if (lastPanelType) {
                    state.weekViewLayout.dayGridRows[lastPanelType].height = getRestPanelHeight(state.weekViewLayout.dayGridRows, lastPanelType, state.layout);
                  }
                }));
              },
              updateDayGridRowHeightByDiff: function updateDayGridRowHeightByDiff(_ref2) {
                var rowName = _ref2.rowName, diff = _ref2.diff;
                return set((0, immer_esm.Ay)(function(state) {
                  var _state$weekViewLayout, _state$weekViewLayout2;
                  var lastPanelType = state.weekViewLayout.lastPanelType;
                  var height = (_state$weekViewLayout = (_state$weekViewLayout2 = state.weekViewLayout.dayGridRows) === null || _state$weekViewLayout2 === void 0 || (_state$weekViewLayout2 = _state$weekViewLayout2[rowName]) === null || _state$weekViewLayout2 === void 0 ? void 0 : _state$weekViewLayout2.height) !== null && _state$weekViewLayout !== void 0 ? _state$weekViewLayout : DEFAULT_PANEL_HEIGHT;
                  state.weekViewLayout.dayGridRows[rowName] = {
                    height: height + diff
                  };
                  if (lastPanelType) {
                    state.weekViewLayout.dayGridRows[lastPanelType].height = getRestPanelHeight(state.weekViewLayout.dayGridRows, lastPanelType, state.layout);
                  }
                }));
              },
              setSelectedDuplicateEventCid: function setSelectedDuplicateEventCid(cid) {
                return set((0, immer_esm.Ay)(function(state) {
                  state.weekViewLayout.selectedDuplicateEventCid = cid !== null && cid !== void 0 ? cid : DEFAULT_DUPLICATE_EVENT_CID;
                }));
              }
            };
          }
          function capitalize(str) {
            return str.charAt(0).toUpperCase() + str.slice(1);
          }
          var DEFAULT_DAY_NAMES = ["sun", "mon", "tue", "wed", "thu", "fri", "sat"];
          var getDayName = function getDayName2(dayIndex) {
            return DEFAULT_DAY_NAMES[dayIndex];
          };
          function getDayNames(days, weekDayNamesOption) {
            return days.map(function(day) {
              var dayIndex = day.getDay();
              var dayName = weekDayNamesOption.length > 0 ? weekDayNamesOption[dayIndex] : capitalize(getDayName(dayIndex));
              return {
                date: day.getDate(),
                day: day.getDay(),
                dayName,
                isToday: true,
                renderDate: "date",
                dateInstance: day
              };
            });
          }
          function options_typeof(o2) {
            "@babel/helpers - typeof";
            return options_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, options_typeof(o2);
          }
          function options_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function options_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? options_ownKeys(Object(t), true).forEach(function(r3) {
                options_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : options_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function options_defineProperty(e2, r2, t) {
            return (r2 = options_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function options_toPropertyKey(t) {
            var i2 = options_toPrimitive(t, "string");
            return "symbol" == options_typeof(i2) ? i2 : i2 + "";
          }
          function options_toPrimitive(t, r2) {
            if ("object" != options_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != options_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function initializeCollapseDuplicateEvents(options) {
            if (!options) {
              return false;
            }
            var initialCollapseDuplicateEvents = {
              getDuplicateEvents: function getDuplicateEvents(targetEvent, events) {
                return events.filter(function(event) {
                  return event.title === targetEvent.title && compare(event.start, targetEvent.start) === 0 && compare(event.end, targetEvent.end) === 0;
                }).sort(function(a2, b2) {
                  return a2.calendarId > b2.calendarId ? 1 : -1;
                });
              },
              getMainEvent: function getMainEvent(events) {
                return last(events);
              }
            };
            if (isBoolean_default()(options)) {
              return initialCollapseDuplicateEvents;
            }
            return options_objectSpread(options_objectSpread({}, initialCollapseDuplicateEvents), options);
          }
          function initializeWeekOptions() {
            var weekOptions = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
            var week = options_objectSpread({
              startDayOfWeek: Day.SUN,
              dayNames: [],
              narrowWeekend: false,
              workweek: false,
              showNowIndicator: true,
              showTimezoneCollapseButton: false,
              timezonesCollapsed: false,
              hourStart: 0,
              hourEnd: 24,
              eventView: true,
              taskView: true,
              collapseDuplicateEvents: false
            }, weekOptions);
            week.collapseDuplicateEvents = initializeCollapseDuplicateEvents(week.collapseDuplicateEvents);
            return week;
          }
          function initializeTimezoneOptions() {
            var timezoneOptions = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
            return options_objectSpread({
              zones: []
            }, timezoneOptions);
          }
          function initializeMonthOptions() {
            var monthOptions = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
            var month = options_objectSpread({
              dayNames: [],
              visibleWeeksCount: 0,
              workweek: false,
              narrowWeekend: false,
              startDayOfWeek: Day.SUN,
              isAlways6Weeks: true,
              visibleEventCount: 6
            }, monthOptions);
            if (month.dayNames.length === 0) {
              month.dayNames = DEFAULT_DAY_NAMES.slice();
            }
            return month;
          }
          function initializeGridSelectionOptions(options) {
            if (isBoolean_default()(options)) {
              return {
                enableDblClick: options,
                enableClick: options
              };
            }
            return options_objectSpread({
              enableDblClick: true,
              enableClick: true
            }, options);
          }
          var initialEventFilter = function initialEventFilter2(event) {
            return !!event.isVisible;
          };
          function createOptionsSlice() {
            var _options$defaultView, _options$useFormPopup, _options$useDetailPop, _options$isReadOnly, _options$usageStatist, _options$eventFilter;
            var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
            return {
              options: {
                defaultView: (_options$defaultView = options.defaultView) !== null && _options$defaultView !== void 0 ? _options$defaultView : "week",
                useFormPopup: (_options$useFormPopup = options.useFormPopup) !== null && _options$useFormPopup !== void 0 ? _options$useFormPopup : false,
                useDetailPopup: (_options$useDetailPop = options.useDetailPopup) !== null && _options$useDetailPop !== void 0 ? _options$useDetailPop : false,
                isReadOnly: (_options$isReadOnly = options.isReadOnly) !== null && _options$isReadOnly !== void 0 ? _options$isReadOnly : false,
                week: initializeWeekOptions(options.week),
                month: initializeMonthOptions(options.month),
                gridSelection: initializeGridSelectionOptions(options.gridSelection),
                usageStatistics: (_options$usageStatist = options.usageStatistics) !== null && _options$usageStatist !== void 0 ? _options$usageStatist : true,
                eventFilter: (_options$eventFilter = options.eventFilter) !== null && _options$eventFilter !== void 0 ? _options$eventFilter : initialEventFilter,
                timezone: initializeTimezoneOptions(options.timezone)
              }
            };
          }
          function createOptionsDispatchers(set) {
            return {
              setOptions: function setOptions() {
                var newOptions = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                return set((0, immer_esm.Ay)(function(state) {
                  var _newOptions$week;
                  if (newOptions.gridSelection) {
                    newOptions.gridSelection = initializeGridSelectionOptions(newOptions.gridSelection);
                  }
                  if ((_newOptions$week = newOptions.week) !== null && _newOptions$week !== void 0 && _newOptions$week.collapseDuplicateEvents) {
                    newOptions.week.collapseDuplicateEvents = initializeCollapseDuplicateEvents(newOptions.week.collapseDuplicateEvents);
                  }
                  mergeObject(state.options, newOptions);
                }));
              }
            };
          }
          function popup_typeof(o2) {
            "@babel/helpers - typeof";
            return popup_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, popup_typeof(o2);
          }
          function popup_defineProperty(e2, r2, t) {
            return (r2 = popup_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function popup_toPropertyKey(t) {
            var i2 = popup_toPrimitive(t, "string");
            return "symbol" == popup_typeof(i2) ? i2 : i2 + "";
          }
          function popup_toPrimitive(t, r2) {
            if ("object" != popup_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != popup_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          var PopupType = /* @__PURE__ */ function(PopupType2) {
            PopupType2["SeeMore"] = "seeMore";
            PopupType2["Form"] = "form";
            PopupType2["Detail"] = "detail";
            return PopupType2;
          }({});
          function createPopupSlice() {
            return {
              popup: popup_defineProperty(popup_defineProperty(popup_defineProperty({}, PopupType.SeeMore, null), PopupType.Form, null), PopupType.Detail, null)
            };
          }
          function createPopupDispatchers(set) {
            return {
              showSeeMorePopup: function showSeeMorePopup(param) {
                return set((0, immer_esm.Ay)(function(state) {
                  state.popup[PopupType.SeeMore] = param;
                  state.popup[PopupType.Form] = null;
                  state.popup[PopupType.Detail] = null;
                }));
              },
              showFormPopup: function showFormPopup(param) {
                return set((0, immer_esm.Ay)(function(state) {
                  state.popup[PopupType.Form] = param;
                  state.popup[PopupType.SeeMore] = null;
                  state.popup[PopupType.Detail] = null;
                }));
              },
              showDetailPopup: function showDetailPopup(param, isOpenedInSeeMorePopup) {
                return set((0, immer_esm.Ay)(function(state) {
                  state.popup[PopupType.Detail] = param;
                  state.popup[PopupType.Form] = null;
                  if (!isOpenedInSeeMorePopup) {
                    state.popup[PopupType.SeeMore] = null;
                  }
                }));
              },
              hideSeeMorePopup: function hideSeeMorePopup() {
                return set((0, immer_esm.Ay)(function(state) {
                  state.popup[PopupType.SeeMore] = null;
                }));
              },
              hideFormPopup: function hideFormPopup() {
                return set((0, immer_esm.Ay)(function(state) {
                  state.popup[PopupType.Form] = null;
                }));
              },
              hideDetailPopup: function hideDetailPopup() {
                return set((0, immer_esm.Ay)(function(state) {
                  state.popup[PopupType.Detail] = null;
                }));
              },
              hideAllPopup: function hideAllPopup() {
                return set((0, immer_esm.Ay)(function(state) {
                  state.popup[PopupType.SeeMore] = null;
                  state.popup[PopupType.Form] = null;
                  state.popup[PopupType.Detail] = null;
                }));
              }
            };
          }
          var noop = function noop2() {
          };
          var CSS_AUTO_REGEX = /^auto$|^$|%/;
          function getStyle(el, style) {
            var value = el.style[style];
            if ((!value || value === "auto") && document.defaultView) {
              var css = document.defaultView.getComputedStyle(el, null);
              value = css ? css[style] : null;
            }
            return value === "auto" ? null : value;
          }
          function invalidateSizeValue(value) {
            if (isString_default()(value)) {
              return CSS_AUTO_REGEX.test(value);
            }
            return value === null;
          }
          function getSize(el) {
            var w2 = getStyle(el, "width");
            var h2 = getStyle(el, "height");
            if ((invalidateSizeValue(w2) || invalidateSizeValue(h2)) && el.getBoundingClientRect) {
              var _el$getBoundingClient2 = el.getBoundingClientRect(), width = _el$getBoundingClient2.width, height = _el$getBoundingClient2.height;
              return {
                width: width || el.offsetWidth,
                height: height || el.offsetHeight
              };
            }
            return {
              width: parseFloat(w2 !== null && w2 !== void 0 ? w2 : "0"),
              height: parseFloat(h2 !== null && h2 !== void 0 ? h2 : "0")
            };
          }
          var ElementClass = typeof Element === "undefined" ? noop : Element;
          var elProto = ElementClass.prototype;
          elProto.matches || elProto.webkitMatchesSelector || elProto.msMatchesSelector || function(selector) {
            return Array.from(document.querySelectorAll(selector)).includes(this);
          };
          function stripTags(str) {
            return str.replace(/<([^>]+)>/gi, "");
          }
          var SIXTY_MINUTES = 60;
          var templates = {
            milestone: function milestone(model) {
              var classNames2 = cls("icon", "ic-milestone");
              return _(preact_module_k, null, _("span", {
                className: classNames2
              }), _("span", {
                style: {
                  backgroundColor: model.backgroundColor
                }
              }, stripTags(model.title)));
            },
            milestoneTitle: function milestoneTitle() {
              return _("span", {
                className: cls("left-content")
              }, "Milestone");
            },
            task: function task(model) {
              return "#".concat(model.title);
            },
            taskTitle: function taskTitle() {
              return _("span", {
                className: cls("left-content")
              }, "Task");
            },
            alldayTitle: function alldayTitle() {
              return _("span", {
                className: cls("left-content")
              }, "All Day");
            },
            allday: function allday(model) {
              return stripTags(model.title);
            },
            time: function time(model) {
              var start = model.start, title = model.title;
              if (start) {
                return _("span", null, _("strong", null, datetime_toFormat(start, "HH:mm")), "\xA0", _("span", null, stripTags(title)));
              }
              return stripTags(title);
            },
            goingDuration: function goingDuration(model) {
              var goingDuration2 = model.goingDuration;
              var hour = Math.floor(goingDuration2 / SIXTY_MINUTES);
              var minutes = goingDuration2 % SIXTY_MINUTES;
              return "GoingTime ".concat(leadingZero(hour, 2), ":").concat(leadingZero(minutes, 2));
            },
            comingDuration: function comingDuration(model) {
              var comingDuration2 = model.comingDuration;
              var hour = Math.floor(comingDuration2 / SIXTY_MINUTES);
              var minutes = comingDuration2 % SIXTY_MINUTES;
              return "ComingTime ".concat(leadingZero(hour, 2), ":").concat(leadingZero(minutes, 2));
            },
            monthMoreTitleDate: function monthMoreTitleDate(moreTitle) {
              var date2 = moreTitle.date, day = moreTitle.day;
              var classNameDay = cls("more-title-date");
              var classNameDayLabel = cls("more-title-day");
              var dayName = capitalize(getDayName(day));
              return _(preact_module_k, null, _("span", {
                className: classNameDay
              }, date2), _("span", {
                className: classNameDayLabel
              }, dayName));
            },
            monthMoreClose: function monthMoreClose() {
              return "";
            },
            monthGridHeader: function monthGridHeader(model) {
              var date2 = parseInt(model.date.split("-")[2], 10);
              var classNames2 = cls("weekday-grid-date", {
                "weekday-grid-date-decorator": model.isToday
              });
              return _("span", {
                className: classNames2
              }, date2);
            },
            monthGridHeaderExceed: function monthGridHeaderExceed(hiddenEvents) {
              var className2 = cls("weekday-grid-more-events");
              return _("span", {
                className: className2
              }, hiddenEvents, " more");
            },
            monthGridFooter: function monthGridFooter(_model) {
              return "";
            },
            monthGridFooterExceed: function monthGridFooterExceed(_hiddenEvents) {
              return "";
            },
            monthDayName: function monthDayName(model) {
              return model.label;
            },
            weekDayName: function weekDayName(model) {
              var classDate = cls("day-name__date");
              var className2 = cls("day-name__name");
              return _(preact_module_k, null, _("span", {
                className: classDate
              }, model.date), "\xA0\xA0", _("span", {
                className: className2
              }, model.dayName));
            },
            weekGridFooterExceed: function weekGridFooterExceed(hiddenEvents) {
              return "+".concat(hiddenEvents);
            },
            collapseBtnTitle: function collapseBtnTitle() {
              var className2 = cls("collapse-btn-icon");
              return _("span", {
                className: className2
              });
            },
            timezoneDisplayLabel: function timezoneDisplayLabel(_ref) {
              var displayLabel = _ref.displayLabel, timezoneOffset = _ref.timezoneOffset;
              if (type_isNil(displayLabel) && isPresent(timezoneOffset)) {
                var sign = timezoneOffset < 0 ? "-" : "+";
                var hours = Math.abs(timezoneOffset / SIXTY_MINUTES);
                var minutes = Math.abs(timezoneOffset % SIXTY_MINUTES);
                return "GMT".concat(sign).concat(leadingZero(hours, 2), ":").concat(leadingZero(minutes, 2));
              }
              return displayLabel;
            },
            timegridDisplayPrimaryTime: function timegridDisplayPrimaryTime(props) {
              var time = props.time;
              return datetime_toFormat(time, "hh tt");
            },
            timegridDisplayTime: function timegridDisplayTime(props) {
              var time = props.time;
              return datetime_toFormat(time, "HH:mm");
            },
            timegridNowIndicatorLabel: function timegridNowIndicatorLabel(timezone) {
              var time = timezone.time, _timezone$format = timezone.format, format = _timezone$format === void 0 ? "HH:mm" : _timezone$format;
              return datetime_toFormat(time, format);
            },
            popupIsAllday: function popupIsAllday() {
              return "All day";
            },
            popupStateFree: function popupStateFree() {
              return "Free";
            },
            popupStateBusy: function popupStateBusy() {
              return "Busy";
            },
            titlePlaceholder: function titlePlaceholder() {
              return "Subject";
            },
            locationPlaceholder: function locationPlaceholder() {
              return "Location";
            },
            startDatePlaceholder: function startDatePlaceholder() {
              return "Start date";
            },
            endDatePlaceholder: function endDatePlaceholder() {
              return "End date";
            },
            popupSave: function popupSave() {
              return "Save";
            },
            popupUpdate: function popupUpdate() {
              return "Update";
            },
            popupEdit: function popupEdit() {
              return "Edit";
            },
            popupDelete: function popupDelete() {
              return "Delete";
            },
            popupDetailTitle: function popupDetailTitle(_ref2) {
              var title = _ref2.title;
              return title;
            },
            popupDetailDate: function popupDetailDate(_ref3) {
              var isAllday2 = _ref3.isAllday, start = _ref3.start, end = _ref3.end;
              var dayFormat = "YYYY.MM.DD";
              var timeFormat = "hh:mm tt";
              var detailFormat = "".concat(dayFormat, " ").concat(timeFormat);
              var startDate = datetime_toFormat(start, isAllday2 ? dayFormat : timeFormat);
              var endDateFormat = isSameDate(start, end) ? timeFormat : detailFormat;
              if (isAllday2) {
                return "".concat(startDate).concat(isSameDate(start, end) ? "" : " - ".concat(datetime_toFormat(end, dayFormat)));
              }
              return "".concat(datetime_toFormat(start, detailFormat), " - ").concat(datetime_toFormat(end, endDateFormat));
            },
            popupDetailLocation: function popupDetailLocation(_ref4) {
              var location2 = _ref4.location;
              return location2;
            },
            popupDetailAttendees: function popupDetailAttendees(_ref5) {
              var _ref5$attendees = _ref5.attendees, attendees = _ref5$attendees === void 0 ? [] : _ref5$attendees;
              return attendees.join(", ");
            },
            popupDetailState: function popupDetailState(_ref6) {
              var state = _ref6.state;
              return state || "Busy";
            },
            popupDetailRecurrenceRule: function popupDetailRecurrenceRule(_ref7) {
              var recurrenceRule = _ref7.recurrenceRule;
              return recurrenceRule;
            },
            popupDetailBody: function popupDetailBody(_ref8) {
              var body = _ref8.body;
              return body;
            }
          };
          function template_typeof(o2) {
            "@babel/helpers - typeof";
            return template_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, template_typeof(o2);
          }
          function template_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function template_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? template_ownKeys(Object(t), true).forEach(function(r3) {
                template_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : template_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function template_defineProperty(e2, r2, t) {
            return (r2 = template_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function template_toPropertyKey(t) {
            var i2 = template_toPrimitive(t, "string");
            return "symbol" == template_typeof(i2) ? i2 : i2 + "";
          }
          function template_toPrimitive(t, r2) {
            if ("object" != template_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != template_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function createTemplateSlice() {
            var templateConfig = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
            return {
              template: template_objectSpread(template_objectSpread({}, templates), templateConfig)
            };
          }
          function createTemplateDispatchers(set) {
            return {
              setTemplate: function setTemplate(template) {
                return set((0, immer_esm.Ay)(function(state) {
                  state.template = template_objectSpread(template_objectSpread({}, state.template), template);
                }));
              }
            };
          }
          function createViewSlice() {
            var initialView = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "week";
            var renderDate = new date_TZDate();
            renderDate.setHours(0, 0, 0, 0);
            return {
              view: {
                currentView: initialView,
                renderDate
              }
            };
          }
          function createViewDispatchers(set) {
            return {
              changeView: function changeView(nextView) {
                return set((0, immer_esm.Ay)(function(state) {
                  state.view.currentView = nextView;
                }));
              },
              setRenderDate: function setRenderDate(date2) {
                return set((0, immer_esm.Ay)(function(state) {
                  state.view.renderDate = toStartOfDay(date2);
                }));
              }
            };
          }
          __webpack_require__(4183);
          function store_slicedToArray(r2, e2) {
            return store_arrayWithHoles(r2) || store_iterableToArrayLimit(r2, e2) || store_unsupportedIterableToArray(r2, e2) || store_nonIterableRest();
          }
          function store_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function store_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return store_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? store_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function store_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function store_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function store_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          var isSSR = isUndefined_default()(window) || !window.navigator;
          var useIsomorphicLayoutEffect = isSSR ? hooks_module_y : hooks_module_;
          function createStoreContext() {
            var StoreContext = G(null);
            function StoreProvider2(_ref) {
              var children = _ref.children, store = _ref.store;
              return _(StoreContext.Provider, {
                value: store,
                children
              });
            }
            var useStore2 = function useStore3(selector) {
              var equalityFn = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Object.is;
              var storeCtx = hooks_module_x(StoreContext);
              if (type_isNil(storeCtx)) {
                throw new Error("StoreProvider is not found");
              }
              var _ref2 = hooks_module_p(function(notifyCount) {
                return notifyCount + 1;
              }, 0), _ref3 = store_slicedToArray(_ref2, 2), notify = _ref3[1];
              var state = storeCtx.getState();
              var stateRef = hooks_module_A(state);
              var selectorRef = hooks_module_A(selector);
              var equalityFnRef = hooks_module_A(equalityFn);
              var hasErrorRef = hooks_module_A(false);
              var currentSliceRef = hooks_module_A();
              if (isUndefined_default()(currentSliceRef.current)) {
                currentSliceRef.current = selector(state);
              }
              var newStateSlice;
              var hasNewStateSlice = false;
              var shouldGetNewSlice = stateRef.current !== state || selectorRef.current !== selector || equalityFnRef.current !== equalityFn || hasErrorRef.current;
              if (shouldGetNewSlice) {
                newStateSlice = selector(state);
                hasNewStateSlice = !equalityFn(currentSliceRef.current, newStateSlice);
              }
              useIsomorphicLayoutEffect(function() {
                if (hasNewStateSlice) {
                  currentSliceRef.current = newStateSlice;
                }
                stateRef.current = state;
                selectorRef.current = selector;
                equalityFnRef.current = equalityFn;
                hasErrorRef.current = false;
              });
              var stateBeforeSubscriptionRef = hooks_module_A(state);
              useIsomorphicLayoutEffect(function() {
                var listener = function listener2() {
                  try {
                    var nextState = storeCtx.getState();
                    var nextStateSlice = selectorRef.current(nextState);
                    var shouldUpdateState = !equalityFnRef.current(currentSliceRef.current, nextStateSlice);
                    if (shouldUpdateState) {
                      stateRef.current = nextState;
                      currentSliceRef.current = newStateSlice;
                      notify();
                    }
                  } catch (e2) {
                    console.error("[toastui-calendar] failed to update state", e2 === null || e2 === void 0 ? void 0 : e2.message);
                    hasErrorRef.current = true;
                    notify();
                  }
                };
                var unsubscribe = storeCtx.subscribe(listener);
                if (storeCtx.getState() !== stateBeforeSubscriptionRef.current) {
                  listener();
                }
                return unsubscribe;
              }, []);
              return hasNewStateSlice ? newStateSlice : currentSliceRef.current;
            };
            var useInternalStore2 = function useInternalStore3() {
              var storeCtx = hooks_module_x(StoreContext);
              if (type_isNil(storeCtx)) {
                throw new Error("StoreProvider is not found");
              }
              return hooks_module_T(function() {
                return storeCtx;
              }, [storeCtx]);
            };
            return {
              StoreProvider: StoreProvider2,
              useStore: useStore2,
              useInternalStore: useInternalStore2
            };
          }
          __webpack_require__(5668);
          function internal_typeof(o2) {
            "@babel/helpers - typeof";
            return internal_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, internal_typeof(o2);
          }
          function internal_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function internal_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? internal_ownKeys(Object(t), true).forEach(function(r3) {
                internal_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : internal_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function internal_defineProperty(e2, r2, t) {
            return (r2 = internal_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function internal_toPropertyKey(t) {
            var i2 = internal_toPrimitive(t, "string");
            return "symbol" == internal_typeof(i2) ? i2 : i2 + "";
          }
          function internal_toPrimitive(t, r2) {
            if ("object" != internal_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != internal_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function createStore(storeCreator2) {
            var state;
            var listeners = /* @__PURE__ */ new Set();
            var setState = function setState2(partialStateCreator) {
              var nextState = partialStateCreator(state);
              if (nextState !== state) {
                var previousState = state;
                state = internal_objectSpread(internal_objectSpread({}, state), nextState);
                listeners.forEach(function(listener) {
                  return listener(state, previousState);
                });
              }
            };
            var getState = function getState2() {
              return state;
            };
            var subscribe = function subscribe2(listener, selector, equalityFn) {
              var _listener = listener;
              if (selector) {
                var currentSlice = selector(state);
                var _equalityFn = equalityFn !== null && equalityFn !== void 0 ? equalityFn : Object.is;
                _listener = function _listener2() {
                  var nextSlice = selector(state);
                  if (!_equalityFn(currentSlice, nextSlice)) {
                    var previousSlice = currentSlice;
                    currentSlice = nextSlice;
                    listener(currentSlice, previousSlice);
                  }
                };
              }
              listeners.add(_listener);
              return function() {
                return listeners.delete(_listener);
              };
            };
            var clearListeners = function clearListeners2() {
              return listeners.clear();
            };
            var internal = {
              setState,
              getState,
              subscribe,
              clearListeners
            };
            state = storeCreator2(setState, getState, internal);
            return internal;
          }
          function calendarStore_typeof(o2) {
            "@babel/helpers - typeof";
            return calendarStore_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, calendarStore_typeof(o2);
          }
          function calendarStore_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function calendarStore_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? calendarStore_ownKeys(Object(t), true).forEach(function(r3) {
                calendarStore_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : calendarStore_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function calendarStore_defineProperty(e2, r2, t) {
            return (r2 = calendarStore_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function calendarStore_toPropertyKey(t) {
            var i2 = calendarStore_toPrimitive(t, "string");
            return "symbol" == calendarStore_typeof(i2) ? i2 : i2 + "";
          }
          function calendarStore_toPrimitive(t, r2) {
            if ("object" != calendarStore_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != calendarStore_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          var storeCreator = function storeCreator2(options) {
            return function(set) {
              return calendarStore_objectSpread(calendarStore_objectSpread(calendarStore_objectSpread(calendarStore_objectSpread(calendarStore_objectSpread(calendarStore_objectSpread(calendarStore_objectSpread(calendarStore_objectSpread(calendarStore_objectSpread({}, createOptionsSlice(options)), createTemplateSlice(options.template)), createPopupSlice()), createWeekViewLayoutSlice()), createCalendarSlice(options.calendars)), createViewSlice(options.defaultView)), createDndSlice()), createGridSelectionSlice()), {}, {
                dispatch: {
                  options: createOptionsDispatchers(set),
                  popup: createPopupDispatchers(set),
                  weekViewLayout: createWeekViewLayoutDispatchers(set),
                  calendar: createCalendarDispatchers(set),
                  view: createViewDispatchers(set),
                  dnd: createDndDispatchers(set),
                  gridSelection: createGridSelectionDispatchers(set),
                  template: createTemplateDispatchers(set)
                }
              });
            };
          };
          var initCalendarStore = function initCalendarStore2() {
            var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
            return createStore(storeCreator(options));
          };
          var _createStoreContext = createStoreContext(), StoreProvider = _createStoreContext.StoreProvider, useStore = _createStoreContext.useStore, useInternalStore = _createStoreContext.useInternalStore;
          function useDispatch(group) {
            return useStore(hooks_module_q(function(state) {
              if (!group) {
                return state.dispatch;
              }
              return state.dispatch[group];
            }, [group]));
          }
          function topLevelStateSelector(group) {
            return function(state) {
              return state[group];
            };
          }
          var calendarSelector = topLevelStateSelector("calendar");
          var weekViewLayoutSelector = topLevelStateSelector("weekViewLayout");
          var templateSelector = topLevelStateSelector("template");
          var viewSelector = topLevelStateSelector("view");
          var optionsSelector = topLevelStateSelector("options");
          var dndSelector = topLevelStateSelector("dnd");
          var browser = __webpack_require__(9897);
          var browser_default = /* @__PURE__ */ __webpack_require__.n(browser);
          var TEMP_TARGET_ATTRIBUTE = "data-target-temp";
          function addAttributeHooks() {
            browser_default().addHook("beforeSanitizeAttributes", function(node) {
              if (node.tagName === "A") {
                var targetValue = node.getAttribute("target");
                if (targetValue) {
                  node.setAttribute(TEMP_TARGET_ATTRIBUTE, targetValue);
                } else {
                  node.setAttribute("target", "_self");
                }
              }
            });
            browser_default().addHook("afterSanitizeAttributes", function(node) {
              if (node.tagName === "A" && node.hasAttribute(TEMP_TARGET_ATTRIBUTE)) {
                node.setAttribute("target", node.getAttribute(TEMP_TARGET_ATTRIBUTE));
                node.removeAttribute(TEMP_TARGET_ATTRIBUTE);
                if (node.getAttribute("target") === "_blank") {
                  node.setAttribute("rel", "noopener");
                }
              }
            });
          }
          function removeAttributeHooks() {
            browser_default().removeAllHooks();
          }
          function sanitize(str) {
            return browser_default().sanitize(str);
          }
          function Template(_ref) {
            var _htmlOrVnode$props$cl;
            var template = _ref.template, param = _ref.param, _ref$as = _ref.as, tagName = _ref$as === void 0 ? "div" : _ref$as;
            var templates2 = useStore(templateSelector);
            var templateFunc = templates2[template];
            if (type_isNil(templateFunc)) {
              return null;
            }
            var htmlOrVnode = templateFunc(param);
            return isString_default()(htmlOrVnode) ? _(tagName, {
              className: cls("template-".concat(template)),
              dangerouslySetInnerHTML: {
                __html: sanitize(htmlOrVnode)
              }
            }) : E(htmlOrVnode, {
              className: "".concat((_htmlOrVnode$props$cl = htmlOrVnode.props.className) !== null && _htmlOrVnode$props$cl !== void 0 ? _htmlOrVnode$props$cl : "", " ").concat(cls("template-".concat(template)))
            });
          }
          var EventBusContext = G(null);
          var EventBusProvider = EventBusContext.Provider;
          var useEventBus = function useEventBus2() {
            var eventBus = hooks_module_x(EventBusContext);
            if (!eventBus) {
              throw new Error("useEventBus must be used within a EventBusProvider");
            }
            return eventBus;
          };
          var primaryTimezoneSelector = function primaryTimezoneSelector2(state) {
            var _state$options$timezo, _state$options;
            return (_state$options$timezo = (_state$options = state.options) === null || _state$options === void 0 || (_state$options = _state$options.timezone) === null || _state$options === void 0 || (_state$options = _state$options.zones) === null || _state$options === void 0 || (_state$options = _state$options[0]) === null || _state$options === void 0 ? void 0 : _state$options.timezoneName) !== null && _state$options$timezo !== void 0 ? _state$options$timezo : "Local";
          };
          var customOffsetCalculatorSelector = function customOffsetCalculatorSelector2(state) {
            var _state$options2;
            return (_state$options2 = state.options) === null || _state$options2 === void 0 || (_state$options2 = _state$options2.timezone) === null || _state$options2 === void 0 ? void 0 : _state$options2.customOffsetCalculator;
          };
          var timezonesSelector = function timezonesSelector2(state) {
            var _state$options$timezo2;
            return (_state$options$timezo2 = state.options.timezone.zones) !== null && _state$options$timezo2 !== void 0 ? _state$options$timezo2 : [];
          };
          function useTZConverter() {
            var customOffsetCalculator = useStore(customOffsetCalculatorSelector);
            var hasCustomOffsetCalculator = isPresent(customOffsetCalculator);
            return hooks_module_q(function(timezoneName) {
              var tzDate = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : new date_TZDate();
              return tzDate.tz(hasCustomOffsetCalculator ? customOffsetCalculator(timezoneName, tzDate.getTime()) : timezoneName);
            }, [customOffsetCalculator, hasCustomOffsetCalculator]);
          }
          function usePrimaryTimezone() {
            var primaryTimezoneName = useStore(primaryTimezoneSelector);
            var tzConverter = useTZConverter();
            var getNow = hooks_module_q(function() {
              return tzConverter(primaryTimezoneName);
            }, [primaryTimezoneName, tzConverter]);
            return [primaryTimezoneName, getNow];
          }
          var workingDaysList = ["27.4.2024", "2.15.2024", "28.12.2024"];
          var constants_workingDaysList = workingDaysList;
          function dayName_typeof(o2) {
            "@babel/helpers - typeof";
            return dayName_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, dayName_typeof(o2);
          }
          function dayName_defineProperty(e2, r2, t) {
            return (r2 = dayName_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function dayName_toPropertyKey(t) {
            var i2 = dayName_toPrimitive(t, "string");
            return "symbol" == dayName_typeof(i2) ? i2 : i2 + "";
          }
          function dayName_toPrimitive(t, r2) {
            if ("object" != dayName_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != dayName_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function dayName_slicedToArray(r2, e2) {
            return dayName_arrayWithHoles(r2) || dayName_iterableToArrayLimit(r2, e2) || dayName_unsupportedIterableToArray(r2, e2) || dayName_nonIterableRest();
          }
          function dayName_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function dayName_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return dayName_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? dayName_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function dayName_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function dayName_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function dayName_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function isWeekDayName(type, dayName) {
            return type === "week";
          }
          function getWeekDayNameColor(_ref) {
            var dayName = _ref.dayName, theme = _ref.theme, today = _ref.today;
            var day = dayName.day, dateInstance = dayName.dateInstance;
            var isToday = isSameDate(today, dateInstance);
            var isPastDay = !isToday && dateInstance < today;
            var isWeekday = isNotHolyday(dateInstance, constants_workingDaysList);
            if (isWeekday) {
              return theme.common.dayName.color;
            }
            if (isSunday(day)) {
              return theme.common.holiday.color;
            }
            if (isPastDay) {
              var _theme$week;
              return (_theme$week = theme.week) === null || _theme$week === void 0 ? void 0 : _theme$week.pastDay.color;
            }
            if (isSaturday(day)) {
              return theme.common.saturday.color;
            }
            if (isToday) {
              var _theme$week2;
              return (_theme$week2 = theme.week) === null || _theme$week2 === void 0 ? void 0 : _theme$week2.today.color;
            }
            return theme.common.dayName.color;
          }
          function getMonthDayNameColor(_ref2) {
            var dayName = _ref2.dayName, theme = _ref2.theme;
            var day = dayName.day;
            if (isSunday(day)) {
              return theme.common.holiday.color;
            }
            if (isSaturday(day)) {
              return theme.common.saturday.color;
            }
            return theme.common.dayName.color;
          }
          function DayName(_ref3) {
            var dayName = _ref3.dayName, style = _ref3.style, type = _ref3.type, theme = _ref3.theme;
            var eventBus = useEventBus();
            var _usePrimaryTimezone = usePrimaryTimezone(), _usePrimaryTimezone2 = dayName_slicedToArray(_usePrimaryTimezone, 2), getNow = _usePrimaryTimezone2[1];
            var today = getNow();
            var day = dayName.day;
            var color = type === "week" ? getWeekDayNameColor({
              dayName,
              theme,
              today
            }) : getMonthDayNameColor({
              dayName,
              theme
            });
            var templateType = "".concat(type, "DayName");
            var handleClick = function handleClick2() {
              if (isWeekDayName(type)) {
                eventBus.fire("clickDayName", {
                  date: datetime_toFormat(dayName.dateInstance, "YYYY-MM-DD")
                });
              }
            };
            return _("div", {
              className: cls("day-name-item", type),
              style
            }, _("span", {
              className: cls(dayName_defineProperty({}, "holiday-".concat(getDayName(day)), isWeekend(day))),
              style: {
                color
              },
              onClick: handleClick,
              "data-testid": "dayName-".concat(type, "-").concat(getDayName(day))
            }, dayName, _(Template, {
              template: templateType,
              param: dayName
            })));
          }
          var commonThemeSelector = topLevelStateSelector("common");
          var monthThemeSelector = topLevelStateSelector("month");
          var weekDayGridLeftSelector = function weekDayGridLeftSelector2(theme) {
            return theme.week.dayGridLeft;
          };
          var weekTimeGridLeftSelector = function weekTimeGridLeftSelector2(theme) {
            return theme.week.timeGridLeft;
          };
          var monthMoreViewSelector = function monthMoreViewSelector2(theme) {
            return theme.month.moreView;
          };
          var monthGridCellSelector = function monthGridCellSelector2(theme) {
            return theme.month.gridCell;
          };
          var DEFAULT_COMMON_THEME = {
            border: "1px solid #e5e5e5",
            backgroundColor: "white",
            holiday: {
              color: "#ff4040"
            },
            saturday: {
              color: "#ff4040"
            },
            dayName: {
              color: "#333"
            },
            today: {
              color: "#fff"
            },
            gridSelection: {
              backgroundColor: "rgba(81, 92, 230, 0.05)",
              border: "1px solid #515ce6"
            }
          };
          var DEFAULT_WEEK_THEME = {
            dayName: {
              borderLeft: "none",
              borderTop: "1px solid #e5e5e5",
              borderBottom: "1px solid #e5e5e5",
              backgroundColor: "inherit"
            },
            weekend: {
              backgroundColor: "inherit"
            },
            today: {
              color: "inherit",
              backgroundColor: "rgba(81, 92, 230, 0.05)"
            },
            pastDay: {
              color: "#bbb"
            },
            panelResizer: {
              border: "1px solid #e5e5e5"
            },
            dayGrid: {
              borderRight: "1px solid #e5e5e5",
              backgroundColor: "inherit"
            },
            dayGridLeft: {
              borderRight: "1px solid #e5e5e5",
              backgroundColor: "inherit",
              width: "72px"
            },
            timeGrid: {
              borderRight: "1px solid #e5e5e5"
            },
            timeGridLeft: {
              backgroundColor: "inherit",
              borderRight: "1px solid #e5e5e5",
              width: "72px"
            },
            timeGridLeftAdditionalTimezone: {
              backgroundColor: "white"
            },
            timeGridHalfHourLine: {
              borderBottom: "none"
            },
            timeGridHourLine: {
              borderBottom: "1px solid #e5e5e5"
            },
            nowIndicatorLabel: {
              color: "#515ce6"
            },
            nowIndicatorPast: {
              border: "1px dashed #515ce6"
            },
            nowIndicatorBullet: {
              backgroundColor: "#515ce6"
            },
            nowIndicatorToday: {
              border: "1px solid #515ce6"
            },
            nowIndicatorFuture: {
              border: "none"
            },
            pastTime: {
              color: "#bbb"
            },
            futureTime: {
              color: "#333"
            },
            gridSelection: {
              color: "#515ce6"
            }
          };
          var DEFAULT_MONTH_THEME = {
            dayName: {
              borderLeft: "none",
              backgroundColor: "inherit"
            },
            holidayExceptThisMonth: {
              color: "rgba(255, 64, 64, 0.4)"
            },
            dayExceptThisMonth: {
              color: "rgba(51, 51, 51, 0.4)"
            },
            weekend: {
              backgroundColor: "inherit"
            },
            moreView: {
              border: "1px solid #d5d5d5",
              boxShadow: "0 2px 6px 0 rgba(0, 0, 0, 0.1)",
              backgroundColor: "white",
              width: null,
              height: null
            },
            gridCell: {
              headerHeight: 31,
              footerHeight: null
            },
            moreViewTitle: {
              backgroundColor: "inherit"
            }
          };
          function createCommonTheme() {
            var commonTheme = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
            return {
              common: mergeObject(DEFAULT_COMMON_THEME, commonTheme)
            };
          }
          function createThemeDispatch(set) {
            return {
              setTheme: function setTheme(theme) {
                set((0, immer_esm.Ay)(function(state) {
                  state.common = mergeObject(state.common, theme.common);
                  state.week = mergeObject(state.week, theme.week);
                  state.month = mergeObject(state.month, theme.month);
                }));
              },
              setCommonTheme: function setCommonTheme(commonTheme) {
                set((0, immer_esm.Ay)(function(state) {
                  state.common = mergeObject(state.common, commonTheme);
                }));
              },
              setWeekTheme: function setWeekTheme(weekTheme) {
                set((0, immer_esm.Ay)(function(state) {
                  state.week = mergeObject(state.week, weekTheme);
                }));
              },
              setMonthTheme: function setMonthTheme(monthTheme) {
                set((0, immer_esm.Ay)(function(state) {
                  state.month = mergeObject(state.month, monthTheme);
                }));
              }
            };
          }
          function createMonthTheme() {
            var monthTheme = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
            return {
              month: mergeObject(DEFAULT_MONTH_THEME, monthTheme)
            };
          }
          function createWeekTheme() {
            var weekTheme = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
            return {
              week: mergeObject(DEFAULT_WEEK_THEME, weekTheme)
            };
          }
          function themeStore_typeof(o2) {
            "@babel/helpers - typeof";
            return themeStore_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, themeStore_typeof(o2);
          }
          function themeStore_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function themeStore_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? themeStore_ownKeys(Object(t), true).forEach(function(r3) {
                themeStore_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : themeStore_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function themeStore_defineProperty(e2, r2, t) {
            return (r2 = themeStore_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function themeStore_toPropertyKey(t) {
            var i2 = themeStore_toPrimitive(t, "string");
            return "symbol" == themeStore_typeof(i2) ? i2 : i2 + "";
          }
          function themeStore_toPrimitive(t, r2) {
            if ("object" != themeStore_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != themeStore_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          var themeStoreCreator = function themeStoreCreator2() {
            var themeOptions = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
            return function(set) {
              return themeStore_objectSpread(themeStore_objectSpread(themeStore_objectSpread(themeStore_objectSpread({}, createCommonTheme(themeOptions === null || themeOptions === void 0 ? void 0 : themeOptions.common)), createWeekTheme(themeOptions === null || themeOptions === void 0 ? void 0 : themeOptions.week)), createMonthTheme(themeOptions === null || themeOptions === void 0 ? void 0 : themeOptions.month)), {}, {
                dispatch: themeStore_objectSpread({}, createThemeDispatch(set))
              });
            };
          };
          var initThemeStore = function initThemeStore2() {
            var themeOptions = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
            return createStore(themeStoreCreator(themeOptions));
          };
          var themeStore_createStoreContext = createStoreContext(), ThemeProvider = themeStore_createStoreContext.StoreProvider, useTheme = themeStore_createStoreContext.useStore;
          function useCommonTheme() {
            return useTheme(commonThemeSelector);
          }
          function useMonthTheme() {
            return useTheme(monthThemeSelector);
          }
          var _excluded = ["backgroundColor", "borderLeft"];
          function _objectWithoutProperties(e2, t) {
            if (null == e2)
              return {};
            var o2, r2, i2 = _objectWithoutPropertiesLoose(e2, t);
            if (Object.getOwnPropertySymbols) {
              var s2 = Object.getOwnPropertySymbols(e2);
              for (r2 = 0; r2 < s2.length; r2++)
                o2 = s2[r2], t.includes(o2) || {}.propertyIsEnumerable.call(e2, o2) && (i2[o2] = e2[o2]);
            }
            return i2;
          }
          function _objectWithoutPropertiesLoose(r2, e2) {
            if (null == r2)
              return {};
            var t = {};
            for (var n2 in r2)
              if ({}.hasOwnProperty.call(r2, n2)) {
                if (e2.includes(n2))
                  continue;
                t[n2] = r2[n2];
              }
            return t;
          }
          function weekDayNameSelector(theme) {
            return {
              common: {
                saturday: theme.common.saturday,
                holiday: theme.common.holiday,
                today: theme.common.today,
                dayName: theme.common.dayName
              },
              week: {
                pastDay: theme.week.pastDay,
                today: theme.week.today,
                dayName: theme.week.dayName
              }
            };
          }
          function monthDayNameSelector(theme) {
            return {
              common: {
                saturday: theme.common.saturday,
                holiday: theme.common.holiday,
                today: theme.common.today,
                dayName: theme.common.dayName
              },
              month: {
                dayName: theme.month.dayName
              }
            };
          }
          function GridHeader(_ref) {
            var _theme$type$dayName, _theme$type;
            var dayNames = _ref.dayNames, _ref$marginLeft = _ref.marginLeft, marginLeft = _ref$marginLeft === void 0 ? DEFAULT_DAY_NAME_MARGIN_LEFT : _ref$marginLeft, rowStyleInfo = _ref.rowStyleInfo, _ref$type = _ref.type, type = _ref$type === void 0 ? "month" : _ref$type;
            var theme = useTheme(type === "month" ? monthDayNameSelector : weekDayNameSelector);
            var _ref2 = (_theme$type$dayName = (_theme$type = theme[type]) === null || _theme$type === void 0 ? void 0 : _theme$type.dayName) !== null && _theme$type$dayName !== void 0 ? _theme$type$dayName : {}, _ref2$backgroundColor = _ref2.backgroundColor, backgroundColor = _ref2$backgroundColor === void 0 ? "white" : _ref2$backgroundColor, _ref2$borderLeft = _ref2.borderLeft, borderLeft = _ref2$borderLeft === void 0 ? null : _ref2$borderLeft, rest = _objectWithoutProperties(_ref2, _excluded);
            var _ref3 = rest, _ref3$borderTop = _ref3.borderTop, borderTop = _ref3$borderTop === void 0 ? null : _ref3$borderTop, _ref3$borderBottom = _ref3.borderBottom, borderBottom = _ref3$borderBottom === void 0 ? null : _ref3$borderBottom;
            return _("div", {
              "data-testid": "grid-header-".concat(type),
              className: cls("day-names", type),
              style: {
                backgroundColor,
                borderTop,
                borderBottom
              }
            }, _("div", {
              className: cls("day-name-container"),
              style: {
                marginLeft
              }
            }, dayNames.map(function(dayName, index) {
              return _(DayName, {
                type,
                key: "dayNames-".concat(dayName.day),
                dayName,
                style: {
                  width: toPercent(rowStyleInfo[index].width),
                  left: toPercent(rowStyleInfo[index].left),
                  borderLeft
                },
                theme
              });
            })));
          }
          __webpack_require__(6501);
          __webpack_require__(7011);
          __webpack_require__(8752);
          __webpack_require__(3249);
          var DEFAULT_VISIBLE_WEEKS = 6;
          var CellBarType = /* @__PURE__ */ function(CellBarType2) {
            CellBarType2["header"] = "header";
            CellBarType2["footer"] = "footer";
            return CellBarType2;
          }({});
          function getCollisionGroup(events) {
            var usingTravelTime = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
            var collisionGroups = [];
            var previousEventList;
            if (!events.length) {
              return collisionGroups;
            }
            collisionGroups[0] = [events[0].cid()];
            events.slice(1).forEach(function(event, index) {
              previousEventList = events.slice(0, index + 1).reverse();
              var found = previousEventList.find(function(previous) {
                return event.collidesWith(previous, usingTravelTime);
              });
              if (!found) {
                collisionGroups.push([event.cid()]);
              } else {
                collisionGroups.slice().reverse().some(function(group) {
                  if (~group.indexOf(found.cid())) {
                    group.push(event.cid());
                    return true;
                  }
                  return false;
                });
              }
            });
            return collisionGroups;
          }
          function getLastRowInColumn(matrix, col) {
            var row = matrix.length;
            while (row > 0) {
              row -= 1;
              if (!isUndefined_default()(matrix[row][col])) {
                return row;
              }
            }
            return -1;
          }
          function getMatrices(collection, collisionGroups) {
            var usingTravelTime = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true;
            var result = [];
            collisionGroups.forEach(function(group) {
              var matrix = [[]];
              group.forEach(function(eventID) {
                var event = collection.get(eventID);
                var col = 0;
                var found = false;
                var nextRow;
                var lastRowInColumn;
                while (!found) {
                  lastRowInColumn = getLastRowInColumn(matrix, col);
                  if (lastRowInColumn === -1) {
                    matrix[0].push(event);
                    found = true;
                  } else if (!event.collidesWith(matrix[lastRowInColumn][col], usingTravelTime)) {
                    nextRow = lastRowInColumn + 1;
                    if (isUndefined_default()(matrix[nextRow])) {
                      matrix[nextRow] = [];
                    }
                    matrix[nextRow][col] = event;
                    found = true;
                  }
                  col += 1;
                }
              });
              result.push(matrix);
            });
            return result;
          }
          function getEventInDateRangeFilter(start, end) {
            return function(model) {
              var ownStarts = model.getStarts();
              var ownEnds = model.getEnds();
              return !(ownEnds < start || ownStarts > end);
            };
          }
          function positionUIModels(start, end, matrices, iteratee) {
            var ymdListToRender = makeDateRange(start, end, MS_PER_DAY).map(function(date2) {
              return datetime_toFormat(date2, "YYYYMMDD");
            });
            matrices.forEach(function(matrix) {
              matrix.forEach(function(column) {
                column.forEach(function(uiModel, index) {
                  if (!uiModel) {
                    return;
                  }
                  var ymd = datetime_toFormat(uiModel.getStarts(), "YYYYMMDD");
                  var dateLength = makeDateRange(toStartOfDay(uiModel.getStarts()), toEndOfDay(uiModel.getEnds()), MS_PER_DAY).length;
                  uiModel.top = index;
                  uiModel.left = ymdListToRender.indexOf(ymd);
                  uiModel.width = dateLength;
                  iteratee === null || iteratee === void 0 || iteratee(uiModel);
                });
              });
            });
          }
          function limit(start, end, uiModel) {
            if (uiModel.getStarts() < start) {
              uiModel.exceedLeft = true;
              uiModel.renderStarts = new date_TZDate(start);
            }
            if (uiModel.getEnds() > end) {
              uiModel.exceedRight = true;
              uiModel.renderEnds = new date_TZDate(end);
            }
            return uiModel;
          }
          function limitRenderRange(start, end, uiModelColl) {
            if (uiModelColl instanceof Collection) {
              uiModelColl.each(function(uiModel) {
                limit(start, end, uiModel);
                return true;
              });
              return null;
            }
            return limit(start, end, uiModelColl);
          }
          function convertToUIModel(eventCollection) {
            var uiModelColl = new Collection(function(uiModel) {
              return uiModel.cid();
            });
            eventCollection.each(function(event) {
              uiModelColl.add(new EventUIModel(event));
            });
            return uiModelColl;
          }
          function month_toConsumableArray(r2) {
            return month_arrayWithoutHoles(r2) || month_iterableToArray(r2) || month_unsupportedIterableToArray(r2) || month_nonIterableSpread();
          }
          function month_nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function month_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return month_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? month_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function month_iterableToArray(r2) {
            if ("undefined" != typeof Symbol && null != r2[Symbol.iterator] || null != r2["@@iterator"])
              return Array.from(r2);
          }
          function month_arrayWithoutHoles(r2) {
            if (Array.isArray(r2))
              return month_arrayLikeToArray(r2);
          }
          function month_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function _isAllday(_ref) {
            var model = _ref.model;
            return model.isAllday || model.hasMultiDates;
          }
          function _isNotAllday(uiModel) {
            return !_isAllday(uiModel);
          }
          function _weightTopValue(uiModel) {
            uiModel.top = uiModel.top || 0;
            uiModel.top += 1;
          }
          function _adjustRenderRange(start, end, uiModelColl) {
            uiModelColl.each(function(uiModel) {
              if (uiModel.model.isAllday || uiModel.model.hasMultiDates) {
                limitRenderRange(toStartOfDay(start), toEndOfDay(end), uiModel);
              }
            });
          }
          function _getAlldayMaxTopIndexAtYMD(idsOfDay, ymd, uiModelAlldayColl) {
            var topIndexesInDate = [];
            idsOfDay[ymd].forEach(function(cid) {
              uiModelAlldayColl.doWhenHas(cid, function(uiModel) {
                topIndexesInDate.push(uiModel.top);
              });
            });
            if (topIndexesInDate.length > 0) {
              return Math.max.apply(Math, topIndexesInDate);
            }
            return 0;
          }
          function _adjustTimeTopIndex(idsOfDay, uiModelColl) {
            var vAlldayColl = uiModelColl.filter(_isAllday);
            var sortedTimeEvents = uiModelColl.filter(_isNotAllday).sort(array.compare.event.asc);
            var maxIndexInYMD = {};
            sortedTimeEvents.forEach(function(timeUIModel) {
              var eventYMD = datetime_toFormat(timeUIModel.getStarts(), "YYYYMMDD");
              var alldayMaxTopInYMD = maxIndexInYMD[eventYMD];
              if (isUndefined_default()(alldayMaxTopInYMD)) {
                alldayMaxTopInYMD = maxIndexInYMD[eventYMD] = _getAlldayMaxTopIndexAtYMD(idsOfDay, eventYMD, vAlldayColl);
              }
              maxIndexInYMD[eventYMD] = timeUIModel.top = alldayMaxTopInYMD + 1;
            });
          }
          function _stackTimeFromTop(idsOfDay, uiModelColl) {
            var uiModelAlldayColl = uiModelColl.filter(_isAllday);
            var sortedTimeEvents = uiModelColl.filter(_isNotAllday).sort(array.compare.event.asc);
            var indiceInYMD = {};
            sortedTimeEvents.forEach(function(timeUIModel) {
              var eventYMD = datetime_toFormat(timeUIModel.getStarts(), "YYYYMMDD");
              var topArrayInYMD = indiceInYMD[eventYMD];
              if (isUndefined_default()(topArrayInYMD)) {
                topArrayInYMD = indiceInYMD[eventYMD] = [];
                idsOfDay[eventYMD].forEach(function(cid) {
                  uiModelAlldayColl.doWhenHas(cid, function(uiModel) {
                    topArrayInYMD.push(uiModel.top);
                  });
                });
              }
              if (topArrayInYMD.indexOf(timeUIModel.top) >= 0) {
                var maxTopInYMD = Math.max.apply(Math, month_toConsumableArray(topArrayInYMD)) + 1;
                for (var i2 = 1; i2 <= maxTopInYMD; i2 += 1) {
                  timeUIModel.top = i2;
                  if (topArrayInYMD.indexOf(timeUIModel.top) < 0) {
                    break;
                  }
                }
              }
              topArrayInYMD.push(timeUIModel.top);
            });
          }
          function _addMultiDatesInfo(uiModelColl) {
            uiModelColl.each(function(uiModel) {
              var model = uiModel.model;
              var start = model.getStarts();
              var end = model.getEnds();
              model.hasMultiDates = !isSameDate(start, end);
              if (!model.isAllday && model.hasMultiDates) {
                uiModel.renderStarts = toStartOfDay(start);
                uiModel.renderEnds = toEndOfDay(end);
              }
            });
          }
          function month_findByDateRange(calendarData, condition) {
            var start = condition.start, end = condition.end, _condition$andFilters = condition.andFilters, andFilters = _condition$andFilters === void 0 ? [] : _condition$andFilters, _condition$alldayFirs = condition.alldayFirstMode, alldayFirstMode = _condition$alldayFirs === void 0 ? false : _condition$alldayFirs;
            var events = calendarData.events, idsOfDay = calendarData.idsOfDay;
            var filterFn = Collection.and.apply(Collection, month_toConsumableArray([getEventInDateRangeFilter(start, end)].concat(andFilters)));
            var coll = events.filter(filterFn);
            var uiModelColl = convertToUIModel(coll);
            _addMultiDatesInfo(uiModelColl);
            _adjustRenderRange(start, end, uiModelColl);
            var vList = uiModelColl.sort(array.compare.event.asc);
            var usingTravelTime = false;
            var collisionGroup = getCollisionGroup(vList, usingTravelTime);
            var matrices = getMatrices(uiModelColl, collisionGroup, usingTravelTime);
            positionUIModels(start, end, matrices, _weightTopValue);
            if (alldayFirstMode) {
              _adjustTimeTopIndex(idsOfDay, uiModelColl);
            } else {
              _stackTimeFromTop(idsOfDay, uiModelColl);
            }
            return matrices;
          }
          function week_typeof(o2) {
            "@babel/helpers - typeof";
            return week_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, week_typeof(o2);
          }
          function week_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function week_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? week_ownKeys(Object(t), true).forEach(function(r3) {
                week_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : week_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function week_defineProperty(e2, r2, t) {
            return (r2 = week_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function week_toPropertyKey(t) {
            var i2 = week_toPrimitive(t, "string");
            return "symbol" == week_typeof(i2) ? i2 : i2 + "";
          }
          function week_toPrimitive(t, r2) {
            if ("object" != week_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != week_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function week_toConsumableArray(r2) {
            return week_arrayWithoutHoles(r2) || week_iterableToArray(r2) || week_unsupportedIterableToArray(r2) || week_nonIterableSpread();
          }
          function week_nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function week_iterableToArray(r2) {
            if ("undefined" != typeof Symbol && null != r2[Symbol.iterator] || null != r2["@@iterator"])
              return Array.from(r2);
          }
          function week_arrayWithoutHoles(r2) {
            if (Array.isArray(r2))
              return week_arrayLikeToArray(r2);
          }
          function week_slicedToArray(r2, e2) {
            return week_arrayWithHoles(r2) || week_iterableToArrayLimit(r2, e2) || week_unsupportedIterableToArray(r2, e2) || week_nonIterableRest();
          }
          function week_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function week_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return week_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? week_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function week_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function week_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function week_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function _makeHourRangeFilter(hStart, hEnd) {
            return function(uiModel) {
              var ownHourStart = uiModel.getStarts();
              var ownHourEnd = uiModel.getEnds();
              var ownHourStartTime = ownHourStart.getTime();
              var ownHourEndTime = ownHourEnd.getTime();
              var yyyy = ownHourStart.getFullYear();
              var mm = ownHourStart.getMonth();
              var dd = ownHourStart.getDate();
              var hourStart = new date_TZDate(yyyy, mm, dd).setHours(hStart);
              var hourEnd = new date_TZDate(yyyy, mm, dd).setHours(hEnd);
              return ownHourStartTime >= hourStart && ownHourStartTime < hourEnd || ownHourEndTime > hourStart && ownHourEndTime <= hourEnd || ownHourStartTime < hourStart && ownHourEndTime > hourStart || ownHourEndTime > hourEnd && ownHourStartTime < hourEnd;
            };
          }
          function _makeGetUIModelFuncForTimeView(hourStart, hourEnd) {
            if (hourStart === 0 && hourEnd === 24) {
              return function(uiModelColl) {
                return uiModelColl.sort(array.compare.event.asc);
              };
            }
            return function(uiModelColl) {
              return uiModelColl.filter(_makeHourRangeFilter(hourStart, hourEnd)).sort(array.compare.event.asc);
            };
          }
          function splitEventByDateRange(idsOfDay, start, end, uiModelColl) {
            var result = {};
            var range2 = getDateRange(start, end);
            range2.forEach(function(date2) {
              var ymd = datetime_toFormat(date2, "YYYYMMDD");
              var ids = idsOfDay[ymd];
              var collection = result[ymd] = new Collection(function(event) {
                return event.cid();
              });
              if (ids && ids.length) {
                ids.forEach(function(id) {
                  uiModelColl.doWhenHas(id, function(event) {
                    collection.add(event);
                  });
                });
              }
            }, {});
            return result;
          }
          function getUIModelForTimeView(idsOfDay, condition) {
            var start = condition.start, end = condition.end, uiModelTimeColl = condition.uiModelTimeColl, hourStart = condition.hourStart, hourEnd = condition.hourEnd;
            var ymdSplitted = splitEventByDateRange(idsOfDay, start, end, uiModelTimeColl);
            var result = {};
            var _getUIModel = _makeGetUIModelFuncForTimeView(hourStart, hourEnd);
            var usingTravelTime = true;
            Object.entries(ymdSplitted).forEach(function(_ref) {
              var _ref2 = week_slicedToArray(_ref, 2), ymd = _ref2[0], uiModelColl = _ref2[1];
              var uiModels = _getUIModel(uiModelColl);
              var collisionGroups = getCollisionGroup(uiModels, usingTravelTime);
              var matrices = getMatrices(uiModelColl, collisionGroups, usingTravelTime);
              result[ymd] = matrices;
            });
            return result;
          }
          function week_addMultiDatesInfo(uiModelColl) {
            uiModelColl.each(function(uiModel) {
              var model = uiModel.model;
              model.hasMultiDates = true;
              uiModel.renderStarts = toStartOfDay(model.getStarts());
              uiModel.renderEnds = toEndOfDay(model.getEnds());
            });
          }
          function getUIModelForAlldayView(start, end, uiModelColl) {
            if (!uiModelColl || !uiModelColl.size) {
              return [];
            }
            week_addMultiDatesInfo(uiModelColl);
            limitRenderRange(start, end, uiModelColl);
            var uiModels = uiModelColl.sort(array.compare.event.asc);
            var usingTravelTime = true;
            var collisionGroups = getCollisionGroup(uiModels, usingTravelTime);
            var matrices = getMatrices(uiModelColl, collisionGroups, usingTravelTime);
            positionUIModels(start, end, matrices);
            return matrices;
          }
          function week_findByDateRange(calendarData, condition) {
            var _options$hourStart, _options$hourEnd;
            var start = condition.start, end = condition.end, panels = condition.panels, _condition$andFilters = condition.andFilters, andFilters = _condition$andFilters === void 0 ? [] : _condition$andFilters, options = condition.options;
            var events = calendarData.events, idsOfDay = calendarData.idsOfDay;
            var hourStart = (_options$hourStart = options === null || options === void 0 ? void 0 : options.hourStart) !== null && _options$hourStart !== void 0 ? _options$hourStart : 0;
            var hourEnd = (_options$hourEnd = options === null || options === void 0 ? void 0 : options.hourEnd) !== null && _options$hourEnd !== void 0 ? _options$hourEnd : 24;
            var filterFn = Collection.and.apply(Collection, week_toConsumableArray([getEventInDateRangeFilter(start, end)].concat(andFilters)));
            var uiModelColl = convertToUIModel(events.filter(filterFn));
            var group = uiModelColl.groupBy(filterByCategory);
            return panels.reduce(function(acc, cur) {
              var name = cur.name, type = cur.type;
              if (type_isNil(group[name])) {
                return acc;
              }
              return week_objectSpread(week_objectSpread({}, acc), {}, week_defineProperty({}, name, type === "daygrid" ? getUIModelForAlldayView(start, end, group[name]) : getUIModelForTimeView(idsOfDay, {
                start,
                end,
                uiModelTimeColl: group[name],
                hourStart,
                hourEnd
              })));
            }, {
              milestone: [],
              task: [],
              allday: [],
              time: {}
            });
          }
          function math_toConsumableArray(r2) {
            return math_arrayWithoutHoles(r2) || math_iterableToArray(r2) || math_unsupportedIterableToArray(r2) || math_nonIterableSpread();
          }
          function math_nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function math_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return math_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? math_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function math_iterableToArray(r2) {
            if ("undefined" != typeof Symbol && null != r2[Symbol.iterator] || null != r2["@@iterator"])
              return Array.from(r2);
          }
          function math_arrayWithoutHoles(r2) {
            if (Array.isArray(r2))
              return math_arrayLikeToArray(r2);
          }
          function math_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function math_limit(value, minArr, maxArr) {
            var v2 = Math.max.apply(Math, [value].concat(math_toConsumableArray(minArr)));
            return Math.min.apply(Math, [v2].concat(math_toConsumableArray(maxArr)));
          }
          function ratio(a2, b2, y2) {
            return b2 * y2 / a2;
          }
          function isBetween(value, min2, max2) {
            return min2 <= value && value <= max2;
          }
          function grid_typeof(o2) {
            "@babel/helpers - typeof";
            return grid_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, grid_typeof(o2);
          }
          function grid_slicedToArray(r2, e2) {
            return grid_arrayWithHoles(r2) || grid_iterableToArrayLimit(r2, e2) || grid_unsupportedIterableToArray(r2, e2) || grid_nonIterableRest();
          }
          function grid_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function grid_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function grid_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function grid_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function grid_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? grid_ownKeys(Object(t), true).forEach(function(r3) {
                grid_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : grid_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function grid_defineProperty(e2, r2, t) {
            return (r2 = grid_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function grid_toPropertyKey(t) {
            var i2 = grid_toPrimitive(t, "string");
            return "symbol" == grid_typeof(i2) ? i2 : i2 + "";
          }
          function grid_toPrimitive(t, r2) {
            if ("object" != grid_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != grid_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function grid_toConsumableArray(r2) {
            return grid_arrayWithoutHoles(r2) || grid_iterableToArray(r2) || grid_unsupportedIterableToArray(r2) || grid_nonIterableSpread();
          }
          function grid_nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function grid_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return grid_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? grid_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function grid_iterableToArray(r2) {
            if ("undefined" != typeof Symbol && null != r2[Symbol.iterator] || null != r2["@@iterator"])
              return Array.from(r2);
          }
          function grid_arrayWithoutHoles(r2) {
            if (Array.isArray(r2))
              return grid_arrayLikeToArray(r2);
          }
          function grid_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          var EVENT_HEIGHT = 22;
          var TOTAL_WIDTH = 100;
          function forEachMatrix3d(matrices, iteratee) {
            matrices.forEach(function(matrix) {
              matrix.forEach(function(row) {
                row.forEach(function(value, index) {
                  iteratee(value, index);
                });
              });
            });
          }
          function isWithinHeight(containerHeight, eventHeight) {
            return function(_ref) {
              var top = _ref.top;
              return containerHeight >= top * eventHeight;
            };
          }
          function isExceededHeight(containerHeight, eventHeight) {
            return function(_ref2) {
              var top = _ref2.top;
              return containerHeight < top * eventHeight;
            };
          }
          function getExceedCount(uiModel, containerHeight, eventHeight) {
            return uiModel.filter(isExceededHeight(containerHeight, eventHeight)).length;
          }
          var getWeekendCount = function getWeekendCount2(row) {
            return row.filter(function(cell) {
              return isWeekend(cell.getDay());
            }).length;
          };
          function getGridWidthAndLeftPercentValues(row, narrowWeekend, totalWidth) {
            var weekendCount = getWeekendCount(row);
            var gridCellCount = row.length;
            var isAllWeekend = weekendCount === gridCellCount;
            var widthPerDay = totalWidth / (narrowWeekend && !isAllWeekend ? gridCellCount * 2 - weekendCount : gridCellCount);
            var widthList = row.map(function(cell) {
              var day = cell.getDay();
              if (!narrowWeekend || isAllWeekend) {
                return widthPerDay;
              }
              return isWeekend(day) ? widthPerDay : widthPerDay * 2;
            });
            var leftList = widthList.reduce(function(acc, _2, index) {
              return index ? [].concat(grid_toConsumableArray(acc), [acc[index - 1] + widthList[index - 1]]) : [0];
            }, []);
            return {
              widthList,
              leftList
            };
          }
          function getWidth(widthList, start, end) {
            return widthList.reduce(function(acc, width, index) {
              if (start <= index && index <= end) {
                return acc + width;
              }
              return acc;
            }, 0);
          }
          var isInGrid = function isInGrid2(gridDate) {
            return function(uiModel) {
              var eventStart = toStartOfDay(uiModel.getStarts());
              var eventEnd = toStartOfDay(uiModel.getEnds());
              return eventStart <= gridDate && gridDate <= eventEnd;
            };
          };
          function getGridDateIndex(date2, row) {
            return row.findIndex(function(cell) {
              return date2 >= toStartOfDay(cell) && date2 <= toEndOfDay(cell);
            });
          }
          var getLeftAndWidth = function getLeftAndWidth2(startIndex, endIndex, row, narrowWeekend) {
            var _getGridWidthAndLeftP = getGridWidthAndLeftPercentValues(row, narrowWeekend, TOTAL_WIDTH), widthList = _getGridWidthAndLeftP.widthList;
            return {
              left: !startIndex ? 0 : getWidth(widthList, 0, startIndex - 1),
              width: getWidth(widthList, startIndex !== null && startIndex !== void 0 ? startIndex : 0, endIndex < 0 ? row.length - 1 : endIndex)
            };
          };
          var getEventLeftAndWidth = function getEventLeftAndWidth2(start, end, row, narrowWeekend) {
            var _getGridWidthAndLeftP2 = getGridWidthAndLeftPercentValues(row, narrowWeekend, TOTAL_WIDTH), widthList = _getGridWidthAndLeftP2.widthList;
            var gridStartIndex = 0;
            var gridEndIndex = row.length - 1;
            row.forEach(function(cell, index) {
              if (cell <= start) {
                gridStartIndex = index;
              }
              if (cell <= end) {
                gridEndIndex = index;
              }
            });
            return {
              width: getWidth(widthList, gridStartIndex, gridEndIndex),
              left: !gridStartIndex ? 0 : getWidth(widthList, 0, gridStartIndex - 1)
            };
          };
          function getEventUIModelWithPosition(uiModel, row) {
            var narrowWeekend = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
            var modelStart = uiModel.getStarts();
            var modelEnd = uiModel.getEnds();
            var _getEventLeftAndWidth = getEventLeftAndWidth(modelStart, modelEnd, row, narrowWeekend), width = _getEventLeftAndWidth.width, left = _getEventLeftAndWidth.left;
            uiModel.width = width;
            uiModel.left = left;
            return uiModel;
          }
          function getRenderedEventUIModels(row, calendarData, narrowWeekend) {
            var idsOfDay = calendarData.idsOfDay;
            var eventUIModels = month_findByDateRange(calendarData, {
              start: row[0],
              end: toEndOfDay(row[row.length - 1])
            });
            var idEventModelMap = [];
            forEachMatrix3d(eventUIModels, function(uiModel) {
              var cid = uiModel.model.cid();
              idEventModelMap[cid] = getEventUIModelWithPosition(uiModel, row, narrowWeekend);
            });
            var gridDateEventModelMap = Object.keys(idsOfDay).reduce(function(acc, ymd) {
              var ids = idsOfDay[ymd];
              acc[ymd] = ids.map(function(cid) {
                return idEventModelMap[cid];
              }).filter(function(vm) {
                return !!vm;
              });
              return acc;
            }, {});
            return {
              uiModels: Object.values(idEventModelMap),
              gridDateEventModelMap
            };
          }
          var getDayGridEventModels = function getDayGridEventModels2(eventModels2, row) {
            var narrowWeekend = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
            forEachMatrix3d(eventModels2, function(uiModel) {
              var modelStart = uiModel.getStarts();
              var modelEnd = uiModel.getEnds();
              var _getEventLeftAndWidth2 = getEventLeftAndWidth(modelStart, modelEnd, row, narrowWeekend), width = _getEventLeftAndWidth2.width, left = _getEventLeftAndWidth2.left;
              uiModel.width = width;
              uiModel.left = left;
              uiModel.top += 1;
            });
            return flattenMatrix3d(eventModels2);
          };
          var getModels = function getModels2(models) {
            return models.filter(function(model) {
              return !!model;
            });
          };
          function flattenMatrix3d(matrices) {
            return matrices.flatMap(function(matrix) {
              return matrix.flatMap(function(models) {
                return getModels(models);
              });
            });
          }
          var getTimeGridEventModels = function getTimeGridEventModels2(eventMatrix) {
            return Array.from(new Set(Object.values(eventMatrix).reduce(function(result, matrix3d) {
              return result.concat.apply(result, grid_toConsumableArray(flattenMatrix3d(matrix3d)));
            }, [])));
          };
          var getWeekViewEvents = function getWeekViewEvents2(row, calendarData, _ref3) {
            var narrowWeekend = _ref3.narrowWeekend, hourStart = _ref3.hourStart, hourEnd = _ref3.hourEnd, weekStartDate = _ref3.weekStartDate, weekEndDate = _ref3.weekEndDate;
            var panels = [{
              name: "milestone",
              type: "daygrid",
              show: true
            }, {
              name: "task",
              type: "daygrid",
              show: true
            }, {
              name: "allday",
              type: "daygrid",
              show: true
            }, {
              name: "time",
              type: "timegrid",
              show: true
            }];
            var eventModels2 = week_findByDateRange(calendarData, {
              start: weekStartDate,
              end: weekEndDate,
              panels,
              andFilters: [],
              options: {
                hourStart,
                hourEnd
              }
            });
            return Object.keys(eventModels2).reduce(function(acc, cur) {
              var events = eventModels2[cur];
              return grid_objectSpread(grid_objectSpread({}, acc), {}, grid_defineProperty({}, cur, Array.isArray(events) ? getDayGridEventModels(events, row, narrowWeekend) : getTimeGridEventModels(events)));
            }, {
              milestone: [],
              allday: [],
              task: [],
              time: []
            });
          };
          function createDateMatrixOfMonth(renderTargetDate, _ref4) {
            var _ref4$workweek = _ref4.workweek, workweek = _ref4$workweek === void 0 ? false : _ref4$workweek, _ref4$visibleWeeksCou = _ref4.visibleWeeksCount, visibleWeeksCount = _ref4$visibleWeeksCou === void 0 ? 0 : _ref4$visibleWeeksCou, _ref4$startDayOfWeek = _ref4.startDayOfWeek, startDayOfWeek = _ref4$startDayOfWeek === void 0 ? 0 : _ref4$startDayOfWeek, _ref4$isAlways6Weeks = _ref4.isAlways6Weeks, isAlways6Weeks = _ref4$isAlways6Weeks === void 0 ? true : _ref4$isAlways6Weeks;
            var targetDate = new date_TZDate(renderTargetDate);
            var shouldApplyVisibleWeeksCount = visibleWeeksCount > 0;
            var baseDate = shouldApplyVisibleWeeksCount ? targetDate : toStartOfMonth(targetDate);
            var firstDateOfMatrix = subtractDate(baseDate, baseDate.getDay() - startDayOfWeek + (baseDate.getDay() < startDayOfWeek ? WEEK_DAYS : 0));
            var dayOfFirstDateOfMatrix = firstDateOfMatrix.getDay();
            var totalDatesCountOfMonth = toEndOfMonth(targetDate).getDate();
            var initialDifference = getDateDifference(firstDateOfMatrix, baseDate);
            var totalDatesOfMatrix = totalDatesCountOfMonth + Math.abs(initialDifference);
            var totalWeeksOfMatrix = DEFAULT_VISIBLE_WEEKS;
            if (shouldApplyVisibleWeeksCount) {
              totalWeeksOfMatrix = visibleWeeksCount;
            } else if (isAlways6Weeks === false) {
              totalWeeksOfMatrix = Math.ceil(totalDatesOfMatrix / WEEK_DAYS);
            }
            return range_default()(0, totalWeeksOfMatrix).map(function(weekIndex) {
              return range_default()(0, WEEK_DAYS).reduce(function(weekRow, dayOfWeek) {
                var steps = weekIndex * WEEK_DAYS + dayOfWeek;
                var currentDay = (steps + dayOfFirstDateOfMatrix) % WEEK_DAYS;
                if (!workweek || workweek && !isWeekend(currentDay)) {
                  var date2 = addDate(firstDateOfMatrix, steps);
                  weekRow.push(date2);
                }
                return weekRow;
              }, []);
            });
          }
          function getWeekDates(renderDate, _ref5) {
            var _ref5$startDayOfWeek = _ref5.startDayOfWeek, startDayOfWeek = _ref5$startDayOfWeek === void 0 ? Day.SUN : _ref5$startDayOfWeek, workweek = _ref5.workweek;
            var now = toStartOfDay(renderDate);
            var nowDay = now.getDay();
            var prevDateCount = nowDay - startDayOfWeek;
            var weekDayList = prevDateCount >= 0 ? range_default()(-prevDateCount, WEEK_DAYS - prevDateCount) : range_default()(-WEEK_DAYS - prevDateCount, -prevDateCount);
            return weekDayList.reduce(function(acc, day) {
              var date2 = addDate(now, day);
              if (workweek && isWeekend(date2.getDay())) {
                return acc;
              }
              acc.push(date2);
              return acc;
            }, []);
          }
          function getColumnsData(datesOfWeek) {
            var narrowWeekend = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
            var datesCount = datesOfWeek.length;
            var shouldApplyNarrowWeekend = datesCount > 5 && narrowWeekend;
            var defaultWidthByColumns = shouldApplyNarrowWeekend ? 100 / (datesCount - 1) : 100 / datesCount;
            return datesOfWeek.map(function(date2) {
              var width = shouldApplyNarrowWeekend && isWeekend(date2.getDay()) ? defaultWidthByColumns / 2 : defaultWidthByColumns;
              return {
                date: date2,
                width
              };
            }).reduce(function(result, currentDateAndWidth, index) {
              var prev = result[index - 1];
              result.push(grid_objectSpread(grid_objectSpread({}, currentDateAndWidth), {}, {
                left: index === 0 ? 0 : prev.left + prev.width
              }));
              return result;
            }, []);
          }
          function createTimeGridData(datesOfWeek, options) {
            var _options$narrowWeeken;
            var columns = getColumnsData(datesOfWeek, (_options$narrowWeeken = options.narrowWeekend) !== null && _options$narrowWeeken !== void 0 ? _options$narrowWeeken : false);
            var steps = (options.hourEnd - options.hourStart) * 2;
            var baseHeight = 100 / steps;
            var rows = range_default()(steps).map(function(step, index) {
              var isOdd = index % 2 === 1;
              var hour = options.hourStart + Math.floor(step / 2);
              var startTime = "".concat(hour, ":").concat(isOdd ? "30" : "00").padStart(5, "0");
              var endTime = (isOdd ? "".concat(hour + 1, ":00") : "".concat(hour, ":30")).padStart(5, "0");
              return {
                top: baseHeight * index,
                height: baseHeight,
                startTime,
                endTime
              };
            });
            return {
              columns,
              rows
            };
          }
          function getRelativeMousePosition(_ref6, _ref7) {
            var clientX = _ref6.clientX, clientY = _ref6.clientY;
            var left = _ref7.left, top = _ref7.top, clientLeft = _ref7.clientLeft, clientTop = _ref7.clientTop;
            return [clientX - left - clientLeft, clientY - top - clientTop];
          }
          function getIndexFromPosition(arrayLength, maxRange, currentPosition) {
            var calculatedIndex = Math.floor(ratio(maxRange, arrayLength, currentPosition));
            return math_limit(calculatedIndex, [0], [arrayLength - 1]);
          }
          function createGridPositionFinder(_ref8) {
            var rowsCount = _ref8.rowsCount, columnsCount = _ref8.columnsCount, container = _ref8.container, _ref8$narrowWeekend = _ref8.narrowWeekend, narrowWeekend = _ref8$narrowWeekend === void 0 ? false : _ref8$narrowWeekend, _ref8$startDayOfWeek = _ref8.startDayOfWeek, startDayOfWeek = _ref8$startDayOfWeek === void 0 ? Day.SUN : _ref8$startDayOfWeek;
            if (type_isNil(container)) {
              return function() {
                return null;
              };
            }
            var dayRange = range_default()(startDayOfWeek, startDayOfWeek + columnsCount).map(function(day) {
              return day % WEEK_DAYS;
            });
            var narrowColumnCount = narrowWeekend ? dayRange.filter(function(day) {
              return isWeekend(day);
            }).length : 0;
            return function gridPositionFinder(mousePosition) {
              var _container$getBoundin = container.getBoundingClientRect(), containerLeft = _container$getBoundin.left, containerTop = _container$getBoundin.top, containerWidth = _container$getBoundin.width, containerHeight = _container$getBoundin.height;
              var _getRelativeMousePosi = getRelativeMousePosition(mousePosition, {
                left: containerLeft,
                top: containerTop,
                clientLeft: container.clientLeft,
                clientTop: container.clientTop
              }), _getRelativeMousePosi2 = grid_slicedToArray(_getRelativeMousePosi, 2), left = _getRelativeMousePosi2[0], top = _getRelativeMousePosi2[1];
              if (left < 0 || top < 0 || left > containerWidth || top > containerHeight) {
                return null;
              }
              var unitWidth = narrowWeekend ? containerWidth / (columnsCount - narrowColumnCount + 1) : containerWidth / columnsCount;
              var columnWidthList = dayRange.map(function(dayOfWeek) {
                return narrowWeekend && isWeekend(dayOfWeek) ? unitWidth / 2 : unitWidth;
              });
              var columnLeftList = [];
              columnWidthList.forEach(function(width, index) {
                if (index === 0) {
                  columnLeftList.push(0);
                } else {
                  columnLeftList.push(columnLeftList[index - 1] + columnWidthList[index - 1]);
                }
              });
              var columnIndex = findLastIndex(columnLeftList, function(columnLeft) {
                return left >= columnLeft;
              });
              return {
                columnIndex,
                rowIndex: getIndexFromPosition(rowsCount, containerHeight, top)
              };
            };
          }
          function commonGridSelectionSelector(theme) {
            return theme.common.gridSelection;
          }
          function GridSelection(_ref) {
            var type = _ref.type, gridSelectionData = _ref.gridSelectionData, weekDates = _ref.weekDates, narrowWeekend = _ref.narrowWeekend;
            var _useTheme = useTheme(commonGridSelectionSelector), backgroundColor = _useTheme.backgroundColor, border = _useTheme.border;
            var startCellIndex = gridSelectionData.startCellIndex, endCellIndex = gridSelectionData.endCellIndex;
            var _getLeftAndWidth = getLeftAndWidth(Math.min(startCellIndex, endCellIndex), Math.max(startCellIndex, endCellIndex), weekDates, narrowWeekend), left = _getLeftAndWidth.left, width = _getLeftAndWidth.width;
            var style = {
              left: toPercent(left),
              width: toPercent(width),
              height: toPercent(100),
              backgroundColor,
              border
            };
            return width > 0 ? _("div", {
              className: cls(type, "grid-selection"),
              style
            }) : null;
          }
          function createSortedGridSelection(initPos, currentPos, isReversed) {
            return {
              startColumnIndex: isReversed ? currentPos.columnIndex : initPos.columnIndex,
              startRowIndex: isReversed ? currentPos.rowIndex : initPos.rowIndex,
              endColumnIndex: isReversed ? initPos.columnIndex : currentPos.columnIndex,
              endRowIndex: isReversed ? initPos.rowIndex : currentPos.rowIndex
            };
          }
          function calculateTimeGridSelectionByCurrentIndex(timeGridSelection, columnIndex, maxRowIndex) {
            if (type_isNil(timeGridSelection)) {
              return null;
            }
            var startColumnIndex = timeGridSelection.startColumnIndex, endColumnIndex = timeGridSelection.endColumnIndex, endRowIndex = timeGridSelection.endRowIndex, startRowIndex = timeGridSelection.startRowIndex;
            if (!isBetween(columnIndex, startColumnIndex, endColumnIndex)) {
              return null;
            }
            var hasMultipleColumns = startColumnIndex !== endColumnIndex;
            var isStartingColumn = columnIndex === startColumnIndex;
            var resultGridSelection = {
              startRowIndex,
              endRowIndex,
              isSelectingMultipleColumns: hasMultipleColumns,
              isStartingColumn
            };
            if (startColumnIndex < columnIndex && columnIndex < endColumnIndex) {
              resultGridSelection.startRowIndex = 0;
              resultGridSelection.endRowIndex = maxRowIndex;
            } else if (startColumnIndex !== endColumnIndex) {
              if (startColumnIndex === columnIndex) {
                resultGridSelection.endRowIndex = maxRowIndex;
              } else if (endColumnIndex === columnIndex) {
                resultGridSelection.startRowIndex = 0;
              }
            }
            return resultGridSelection;
          }
          var timeGridSelectionHelper = {
            sortSelection: function sortSelection(initPos, currentPos) {
              var isReversed = initPos.columnIndex > currentPos.columnIndex || initPos.columnIndex === currentPos.columnIndex && initPos.rowIndex > currentPos.rowIndex;
              return createSortedGridSelection(initPos, currentPos, isReversed);
            },
            getDateFromCollection: function getDateFromCollection(dateCollection, gridSelection) {
              var timeGridData = dateCollection;
              var startDate = setTimeStrToDate(timeGridData.columns[gridSelection.startColumnIndex].date, timeGridData.rows[gridSelection.startRowIndex].startTime);
              var endDate = setTimeStrToDate(timeGridData.columns[gridSelection.endColumnIndex].date, timeGridData.rows[gridSelection.endRowIndex].endTime);
              return [startDate, endDate];
            },
            calculateSelection: calculateTimeGridSelectionByCurrentIndex
          };
          function calculateDayGridMonthSelectionByCurrentIndex(gridSelection, currentIndex, weekLength) {
            if (!(isPresent(gridSelection) && isPresent(currentIndex) && isPresent(weekLength))) {
              return null;
            }
            var startRowIndex = gridSelection.startRowIndex, startColumnIndex = gridSelection.startColumnIndex, endRowIndex = gridSelection.endRowIndex, endColumnIndex = gridSelection.endColumnIndex;
            if (!isBetween(currentIndex, Math.min(startRowIndex, endRowIndex), Math.max(startRowIndex, endRowIndex))) {
              return null;
            }
            var startCellIndex = startColumnIndex;
            var endCellIndex = endColumnIndex;
            if (startRowIndex < currentIndex) {
              startCellIndex = 0;
            }
            if (endRowIndex > currentIndex) {
              endCellIndex = weekLength - 1;
            }
            return {
              startCellIndex,
              endCellIndex
            };
          }
          var dayGridMonthSelectionHelper = {
            sortSelection: function sortSelection(initPos, currentPos) {
              var isReversed = initPos.rowIndex > currentPos.rowIndex || initPos.rowIndex === currentPos.rowIndex && initPos.columnIndex > currentPos.columnIndex;
              return createSortedGridSelection(initPos, currentPos, isReversed);
            },
            getDateFromCollection: function getDateFromCollection(dateCollection, gridSelection) {
              var dateMatrix = dateCollection;
              return [dateMatrix[gridSelection.startRowIndex][gridSelection.startColumnIndex], dateMatrix[gridSelection.endRowIndex][gridSelection.endColumnIndex]];
            },
            calculateSelection: calculateDayGridMonthSelectionByCurrentIndex
          };
          function calculateAlldayGridRowSelectionByCurrentIndex(gridSelection) {
            return isPresent(gridSelection) ? {
              startCellIndex: gridSelection.startColumnIndex,
              endCellIndex: gridSelection.endColumnIndex
            } : null;
          }
          var alldayGridRowSelectionHelper = {
            sortSelection: function sortSelection(initPos, currentPos) {
              var isReversed = initPos.columnIndex > currentPos.columnIndex;
              return createSortedGridSelection(initPos, currentPos, isReversed);
            },
            getDateFromCollection: function getDateFromCollection(dateCollection, gridSelection) {
              var weekDates = dateCollection;
              return [weekDates[gridSelection.startColumnIndex], weekDates[gridSelection.endColumnIndex]];
            },
            calculateSelection: calculateAlldayGridRowSelectionByCurrentIndex
          };
          function dayGridWeekSelectionSelector(state) {
            return alldayGridRowSelectionHelper.calculateSelection(state.gridSelection.dayGridWeek);
          }
          function AlldayGridSelection(_ref) {
            var weekDates = _ref.weekDates, narrowWeekend = _ref.narrowWeekend;
            var calculatedGridSelection = useStore(dayGridWeekSelectionSelector);
            if (type_isNil(calculatedGridSelection)) {
              return null;
            }
            return _(GridSelection, {
              type: "allday",
              gridSelectionData: calculatedGridSelection,
              weekDates,
              narrowWeekend
            });
          }
          function compat_module_g(n2, t) {
            for (var e2 in t)
              n2[e2] = t[e2];
            return n2;
          }
          function compat_module_E(n2, t) {
            for (var e2 in n2)
              if ("__source" !== e2 && !(e2 in t))
                return true;
            for (var r2 in t)
              if ("__source" !== r2 && n2[r2] !== t[r2])
                return true;
            return false;
          }
          function compat_module_C(n2, t) {
            this.props = n2, this.context = t;
          }
          function compat_module_x(n2, e2) {
            function r2(n3) {
              var t = this.props.ref, r3 = t == n3.ref;
              return !r3 && t && (t.call ? t(null) : t.current = null), e2 ? !e2(this.props, n3) || !r3 : compat_module_E(this.props, n3);
            }
            function u2(e3) {
              return this.shouldComponentUpdate = r2, _(n2, e3);
            }
            return u2.displayName = "Memo(" + (n2.displayName || n2.name) + ")", u2.prototype.isReactComponent = true, u2.__f = true, u2;
          }
          (compat_module_C.prototype = new b()).isPureReactComponent = true, compat_module_C.prototype.shouldComponentUpdate = function(n2, t) {
            return compat_module_E(this.props, n2) || compat_module_E(this.state, t);
          };
          var R = preact_module_l.__b;
          preact_module_l.__b = function(n2) {
            n2.type && n2.type.__f && n2.ref && (n2.props.ref = n2.ref, n2.ref = null), R && R(n2);
          };
          var compat_module_w = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.forward_ref") || 3911;
          function compat_module_k(n2) {
            function t(t2) {
              var e2 = compat_module_g({}, t2);
              return delete e2.ref, n2(e2, t2.ref || null);
            }
            return t.$$typeof = compat_module_w, t.render = t, t.prototype.isReactComponent = t.__f = true, t.displayName = "ForwardRef(" + (n2.displayName || n2.name) + ")", t;
          }
          var compat_module_M = preact_module_l.__e;
          preact_module_l.__e = function(n2, t, e2, r2) {
            if (n2.then) {
              for (var u2, o2 = t; o2 = o2.__; )
                if ((u2 = o2.__c) && u2.__c)
                  return null == t.__e && (t.__e = e2.__e, t.__k = e2.__k), u2.__c(n2, t);
            }
            compat_module_M(n2, t, e2, r2);
          };
          var compat_module_T = preact_module_l.unmount;
          function compat_module_A(n2, t, e2) {
            return n2 && (n2.__c && n2.__c.__H && (n2.__c.__H.__.forEach(function(n3) {
              "function" == typeof n3.__c && n3.__c();
            }), n2.__c.__H = null), null != (n2 = compat_module_g({}, n2)).__c && (n2.__c.__P === e2 && (n2.__c.__P = t), n2.__c = null), n2.__k = n2.__k && n2.__k.map(function(n3) {
              return compat_module_A(n3, t, e2);
            })), n2;
          }
          function compat_module_D(n2, t, e2) {
            return n2 && e2 && (n2.__v = null, n2.__k = n2.__k && n2.__k.map(function(n3) {
              return compat_module_D(n3, t, e2);
            }), n2.__c && n2.__c.__P === t && (n2.__e && e2.appendChild(n2.__e), n2.__c.__e = true, n2.__c.__P = e2)), n2;
          }
          function compat_module_L() {
            this.__u = 0, this.t = null, this.__b = null;
          }
          function compat_module_O(n2) {
            var t = n2.__.__c;
            return t && t.__a && t.__a(n2);
          }
          function U() {
            this.u = null, this.o = null;
          }
          preact_module_l.unmount = function(n2) {
            var t = n2.__c;
            t && t.__R && t.__R(), t && 32 & n2.__u && (n2.type = null), compat_module_T && compat_module_T(n2);
          }, (compat_module_L.prototype = new b()).__c = function(n2, t) {
            var e2 = t.__c, r2 = this;
            null == r2.t && (r2.t = []), r2.t.push(e2);
            var u2 = compat_module_O(r2.__v), o2 = false, i2 = function() {
              o2 || (o2 = true, e2.__R = null, u2 ? u2(c2) : c2());
            };
            e2.__R = i2;
            var c2 = function() {
              if (!--r2.__u) {
                if (r2.state.__a) {
                  var n3 = r2.state.__a;
                  r2.__v.__k[0] = compat_module_D(n3, n3.__c.__P, n3.__c.__O);
                }
                var t2;
                for (r2.setState({ __a: r2.__b = null }); t2 = r2.t.pop(); )
                  t2.forceUpdate();
              }
            };
            r2.__u++ || 32 & t.__u || r2.setState({ __a: r2.__b = r2.__v.__k[0] }), n2.then(i2, i2);
          }, compat_module_L.prototype.componentWillUnmount = function() {
            this.t = [];
          }, compat_module_L.prototype.render = function(n2, e2) {
            if (this.__b) {
              if (this.__v.__k) {
                var r2 = document.createElement("div"), o2 = this.__v.__k[0].__c;
                this.__v.__k[0] = compat_module_A(this.__b, r2, o2.__O = o2.__P);
              }
              this.__b = null;
            }
            var i2 = e2.__a && _(preact_module_k, null, n2.fallback);
            return i2 && (i2.__u &= -33), [_(preact_module_k, null, e2.__a ? null : n2.children), i2];
          };
          var compat_module_V = function(n2, t, e2) {
            if (++e2[1] === e2[0] && n2.o.delete(t), n2.props.revealOrder && ("t" !== n2.props.revealOrder[0] || !n2.o.size))
              for (e2 = n2.u; e2; ) {
                for (; e2.length > 3; )
                  e2.pop()();
                if (e2[1] < e2[0])
                  break;
                n2.u = e2 = e2[2];
              }
          };
          function W(n2) {
            return this.getChildContext = function() {
              return n2.context;
            }, n2.children;
          }
          function compat_module_P(n2) {
            var e2 = this, r2 = n2.i;
            e2.componentWillUnmount = function() {
              B(null, e2.l), e2.l = null, e2.i = null;
            }, e2.i && e2.i !== r2 && e2.componentWillUnmount(), e2.l || (e2.i = r2, e2.l = { nodeType: 1, parentNode: r2, childNodes: [], contains: function() {
              return true;
            }, appendChild: function(n3) {
              this.childNodes.push(n3), e2.i.appendChild(n3);
            }, insertBefore: function(n3, t) {
              this.childNodes.push(n3), e2.i.appendChild(n3);
            }, removeChild: function(n3) {
              this.childNodes.splice(this.childNodes.indexOf(n3) >>> 1, 1), e2.i.removeChild(n3);
            } }), B(_(W, { context: e2.context }, n2.__v), e2.l);
          }
          function compat_module_j(n2, e2) {
            var r2 = _(compat_module_P, { __v: n2, i: e2 });
            return r2.containerInfo = e2, r2;
          }
          (U.prototype = new b()).__a = function(n2) {
            var t = this, e2 = compat_module_O(t.__v), r2 = t.o.get(n2);
            return r2[0]++, function(u2) {
              var o2 = function() {
                t.props.revealOrder ? (r2.push(u2), compat_module_V(t, n2, r2)) : u2();
              };
              e2 ? e2(o2) : o2();
            };
          }, U.prototype.render = function(n2) {
            this.u = null, this.o = /* @__PURE__ */ new Map();
            var t = H(n2.children);
            n2.revealOrder && "b" === n2.revealOrder[0] && t.reverse();
            for (var e2 = t.length; e2--; )
              this.o.set(t[e2], this.u = [1, 0, this.u]);
            return n2.children;
          }, U.prototype.componentDidUpdate = U.prototype.componentDidMount = function() {
            var n2 = this;
            this.o.forEach(function(t, e2) {
              compat_module_V(n2, e2, t);
            });
          };
          var compat_module_z = "undefined" != typeof Symbol && Symbol.for && Symbol.for("react.element") || 60103, compat_module_B = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image(!S)|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/, compat_module_H = /^on(Ani|Tra|Tou|BeforeInp|Compo)/, Z = /[A-Z0-9]/g, Y = "undefined" != typeof document, compat_module_$ = function(n2) {
            return ("undefined" != typeof Symbol && "symbol" == typeof Symbol() ? /fil|che|rad/ : /fil|che|ra/).test(n2);
          };
          b.prototype.isReactComponent = {}, ["componentWillMount", "componentWillReceiveProps", "componentWillUpdate"].forEach(function(t) {
            Object.defineProperty(b.prototype, t, { configurable: true, get: function() {
              return this["UNSAFE_" + t];
            }, set: function(n2) {
              Object.defineProperty(this, t, { configurable: true, writable: true, value: n2 });
            } });
          });
          var J = preact_module_l.event;
          function K() {
          }
          function Q() {
            return this.cancelBubble;
          }
          function X() {
            return this.defaultPrevented;
          }
          preact_module_l.event = function(n2) {
            return J && (n2 = J(n2)), n2.persist = K, n2.isPropagationStopped = Q, n2.isDefaultPrevented = X, n2.nativeEvent = n2;
          };
          var tn = { enumerable: false, configurable: true, get: function() {
            return this.class;
          } }, en = preact_module_l.vnode;
          preact_module_l.vnode = function(n2) {
            "string" == typeof n2.type && function(n3) {
              var t = n3.props, e2 = n3.type, u2 = {}, o2 = -1 === e2.indexOf("-");
              for (var i2 in t) {
                var c2 = t[i2];
                if (!("value" === i2 && "defaultValue" in t && null == c2 || Y && "children" === i2 && "noscript" === e2 || "class" === i2 || "className" === i2)) {
                  var l2 = i2.toLowerCase();
                  "defaultValue" === i2 && "value" in t && null == t.value ? i2 = "value" : "download" === i2 && true === c2 ? c2 = "" : "translate" === l2 && "no" === c2 ? c2 = false : "o" === l2[0] && "n" === l2[1] ? "ondoubleclick" === l2 ? i2 = "ondblclick" : "onchange" !== l2 || "input" !== e2 && "textarea" !== e2 || compat_module_$(t.type) ? "onfocus" === l2 ? i2 = "onfocusin" : "onblur" === l2 ? i2 = "onfocusout" : compat_module_H.test(i2) && (i2 = l2) : l2 = i2 = "oninput" : o2 && compat_module_B.test(i2) ? i2 = i2.replace(Z, "-$&").toLowerCase() : null === c2 && (c2 = void 0), "oninput" === l2 && u2[i2 = l2] && (i2 = "oninputCapture"), u2[i2] = c2;
                }
              }
              "select" == e2 && u2.multiple && Array.isArray(u2.value) && (u2.value = H(t.children).forEach(function(n4) {
                n4.props.selected = -1 != u2.value.indexOf(n4.props.value);
              })), "select" == e2 && null != u2.defaultValue && (u2.value = H(t.children).forEach(function(n4) {
                n4.props.selected = u2.multiple ? -1 != u2.defaultValue.indexOf(n4.props.value) : u2.defaultValue == n4.props.value;
              })), t.class && !t.className ? (u2.class = t.class, Object.defineProperty(u2, "className", tn)) : (t.className && !t.class || t.class && t.className) && (u2.class = u2.className = t.className), n3.props = u2;
            }(n2), n2.$$typeof = compat_module_z, en && en(n2);
          };
          var rn = preact_module_l.__r;
          preact_module_l.__r = function(n2) {
            rn && rn(n2), n2.__c;
          };
          var un = preact_module_l.diffed;
          preact_module_l.diffed = function(n2) {
            un && un(n2);
            var t = n2.props, e2 = n2.__e;
            null != e2 && "textarea" === n2.type && "value" in t && t.value !== e2.value && (e2.value = null == t.value ? "" : t.value);
          };
          function vn(n2) {
            return !!n2.__k && (B(null, n2), true);
          }
          function ExceedCount(_ref) {
            var index = _ref.index, exceedCount = _ref.exceedCount, isClicked = _ref.isClicked, onClickExceedCount = _ref.onClickExceedCount;
            var clickExceedCount = function clickExceedCount2() {
              return onClickExceedCount(index);
            };
            var style = {
              display: isClicked ? "none" : ""
            };
            return exceedCount && !isClicked ? _("span", {
              className: cls("weekday-exceed-in-week"),
              onClick: clickExceedCount,
              style
            }, _(Template, {
              template: "weekGridFooterExceed",
              param: exceedCount
            })) : null;
          }
          function CollapseButton(_ref2) {
            var isClicked = _ref2.isClicked, isClickedIndex = _ref2.isClickedIndex, onClickCollapseButton = _ref2.onClickCollapseButton;
            return isClicked && isClickedIndex ? _("span", {
              className: cls("weekday-exceed-in-week"),
              onClick: onClickCollapseButton
            }, _(Template, {
              template: "collapseBtnTitle"
            })) : null;
          }
          function GridCell(_ref3) {
            var width = _ref3.width, left = _ref3.left, index = _ref3.index, exceedCount = _ref3.exceedCount, isClicked = _ref3.isClicked, onClickExceedCount = _ref3.onClickExceedCount, isClickedIndex = _ref3.isClickedIndex, onClickCollapseButton = _ref3.onClickCollapseButton, isLastCell = _ref3.isLastCell;
            var _useTheme = useTheme(hooks_module_q(function(theme) {
              return theme.week.dayGrid;
            }, [])), borderRight = _useTheme.borderRight, backgroundColor = _useTheme.backgroundColor;
            var style = {
              width,
              left,
              borderRight: isLastCell ? "none" : borderRight,
              backgroundColor
            };
            return _("div", {
              className: cls("panel-grid"),
              style
            }, _(ExceedCount, {
              index,
              exceedCount,
              isClicked,
              onClickExceedCount
            }), _(CollapseButton, {
              isClickedIndex,
              isClicked,
              onClickCollapseButton
            }));
          }
          var GridCells = compat_module_x(function GridCells2(_ref) {
            var uiModels = _ref.uiModels, weekDates = _ref.weekDates, narrowWeekend = _ref.narrowWeekend, height = _ref.height, clickedIndex = _ref.clickedIndex, isClickedCount = _ref.isClickedCount, onClickExceedCount = _ref.onClickExceedCount, onClickCollapseButton = _ref.onClickCollapseButton;
            var eventTopMargin = 2;
            var _getGridWidthAndLeftP = getGridWidthAndLeftPercentValues(weekDates, narrowWeekend, TOTAL_WIDTH), widthList = _getGridWidthAndLeftP.widthList, leftList = _getGridWidthAndLeftP.leftList;
            var lastCellIndex = weekDates.length - 1;
            return _(preact_module_k, null, weekDates.map(function(cell, index) {
              var width = toPercent(widthList[index]);
              var left = toPercent(leftList[index]);
              var uiModelsInCell = uiModels.filter(isInGrid(cell));
              var exceedCount = getExceedCount(uiModelsInCell, height, EVENT_HEIGHT + eventTopMargin);
              var isClickedIndex = index === clickedIndex;
              var isLastCell = index === lastCellIndex;
              return _(GridCell, {
                key: "panel-grid-".concat(cell.getDate()),
                width,
                left,
                index,
                exceedCount,
                isClicked: isClickedCount,
                onClickExceedCount,
                isClickedIndex,
                onClickCollapseButton,
                isLastCell
              });
            }));
          });
          __webpack_require__(1264);
          __webpack_require__(5483);
          function HorizontalEventResizeIcon(_ref) {
            var onMouseDown = _ref.onMouseDown;
            return _("span", {
              className: "".concat(cls("weekday-resize-handle"), " ").concat(cls("handle-y")),
              onMouseDown,
              "data-testid": "horizontal-event-resize-icon"
            }, _("i", {
              className: "".concat(cls("icon"), " ").concat(cls("ic-handle-y"))
            }));
          }
          var LayoutContainerContext = G(null);
          var LayoutContainerProvider = LayoutContainerContext.Provider;
          var useLayoutContainer = function useLayoutContainer2() {
            var ref = hooks_module_x(LayoutContainerContext);
            if (isUndefined_default()(ref)) {
              throw new Error("LayoutContainerProvider is not found");
            }
            return ref;
          };
          var DRAGGING_TYPE_CONSTANTS = {
            panelResizer: "panelResizer"
          };
          var DRAGGING_TYPE_CREATORS = {
            resizeEvent: function resizeEvent(area, id) {
              return "event/".concat(area, "/resize/").concat(id);
            },
            moveEvent: function moveEvent(area, id) {
              return "event/".concat(area, "/move/").concat(id);
            },
            gridSelection: function gridSelection(type) {
              return "gridSelection/".concat(type);
            }
          };
          function useCalendarById(calendarId2) {
            return useStore(hooks_module_q(function(state) {
              return state.calendar.calendars.find(function(cal) {
                return cal.id === calendarId2;
              });
            }, [calendarId2]));
          }
          function useCalendarColor(model) {
            var _model$calendarId;
            var calendar = useCalendarById((_model$calendarId = model === null || model === void 0 ? void 0 : model.calendarId) !== null && _model$calendarId !== void 0 ? _model$calendarId : null);
            return hooks_module_T(function() {
              return {
                color: calendar === null || calendar === void 0 ? void 0 : calendar.color,
                borderColor: calendar === null || calendar === void 0 ? void 0 : calendar.borderColor,
                backgroundColor: calendar === null || calendar === void 0 ? void 0 : calendar.backgroundColor,
                dragBackgroundColor: calendar === null || calendar === void 0 ? void 0 : calendar.dragBackgroundColor
              };
            }, [calendar]);
          }
          function keyboard_typeof(o2) {
            "@babel/helpers - typeof";
            return keyboard_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, keyboard_typeof(o2);
          }
          function keyboard_defineProperty(e2, r2, t) {
            return (r2 = keyboard_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function keyboard_toPropertyKey(t) {
            var i2 = keyboard_toPrimitive(t, "string");
            return "symbol" == keyboard_typeof(i2) ? i2 : i2 + "";
          }
          function keyboard_toPrimitive(t, r2) {
            if ("object" != keyboard_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != keyboard_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          var KEY = /* @__PURE__ */ function(KEY2) {
            KEY2["ESCAPE"] = "Escape";
            return KEY2;
          }({});
          var KEYCODE = keyboard_defineProperty({}, KEY.ESCAPE, 27);
          var MINIMUM_DRAG_MOUSE_DISTANCE = 3;
          function useTransientUpdate(selector, subscriber) {
            var store = useInternalStore();
            var selectorRef = hooks_module_A(selector);
            var subscriberRef = hooks_module_A(subscriber);
            hooks_module_y(function() {
              selectorRef.current = selector;
              subscriberRef.current = subscriber;
            }, [selector, subscriber]);
            hooks_module_y(function() {
              return store.subscribe(function(slice) {
                return subscriberRef.current(slice);
              }, function(state) {
                return selectorRef.current(state);
              });
            }, [selector, store]);
          }
          function isKeyPressed(e2, key) {
            return e2.key ? e2.key === key : e2.keyCode === KEYCODE[key];
          }
          function useDrag_slicedToArray(r2, e2) {
            return useDrag_arrayWithHoles(r2) || useDrag_iterableToArrayLimit(r2, e2) || useDrag_unsupportedIterableToArray(r2, e2) || useDrag_nonIterableRest();
          }
          function useDrag_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function useDrag_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return useDrag_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? useDrag_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function useDrag_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function useDrag_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function useDrag_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function isLeftClick(buttonNum) {
            return buttonNum === 0;
          }
          function isMouseMoved(initX, initY, x2, y2) {
            return Math.abs(initX - x2) >= MINIMUM_DRAG_MOUSE_DISTANCE || Math.abs(initY - y2) >= MINIMUM_DRAG_MOUSE_DISTANCE;
          }
          function useDrag(draggingItemType) {
            var _ref = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, onInit = _ref.onInit, onDragStart = _ref.onDragStart, onDrag = _ref.onDrag, onMouseUp = _ref.onMouseUp, onPressESCKey = _ref.onPressESCKey;
            var _useDispatch = useDispatch("dnd"), initDrag = _useDispatch.initDrag, setDragging = _useDispatch.setDragging, cancelDrag = _useDispatch.cancelDrag, reset = _useDispatch.reset;
            var store = useInternalStore();
            var dndSliceRef = hooks_module_A(store.getState().dnd);
            useTransientUpdate(dndSelector, function(dndState) {
              dndSliceRef.current = dndState;
            });
            var _useState = hooks_module_h(false), _useState2 = useDrag_slicedToArray(_useState, 2), isStarted = _useState2[0], setStarted = _useState2[1];
            var handleMouseMoveRef = hooks_module_A(null);
            var handleMouseUpRef = hooks_module_A(null);
            var handleKeyDownRef = hooks_module_A(null);
            var handleMouseDown = hooks_module_q(function(e2) {
              if (!isLeftClick(e2.button)) {
                return;
              }
              if (e2.currentTarget) {
                e2.currentTarget.ondragstart = function() {
                  return false;
                };
              }
              e2.preventDefault();
              setStarted(true);
              initDrag({
                draggingItemType,
                initX: e2.clientX,
                initY: e2.clientY
              });
              onInit === null || onInit === void 0 || onInit(e2, dndSliceRef.current);
            }, [onInit, draggingItemType, initDrag]);
            var handleMouseMove = hooks_module_q(function(e2) {
              var _dndSliceRef$current = dndSliceRef.current, initX = _dndSliceRef$current.initX, initY = _dndSliceRef$current.initY, draggingState = _dndSliceRef$current.draggingState, currentDraggingItemType = _dndSliceRef$current.draggingItemType;
              if (currentDraggingItemType !== draggingItemType) {
                setStarted(false);
                reset();
                return;
              }
              if (isPresent(initX) && isPresent(initY) && !isMouseMoved(initX, initY, e2.clientX, e2.clientY)) {
                return;
              }
              if (draggingState <= DraggingState.INIT) {
                setDragging({
                  x: e2.clientX,
                  y: e2.clientY
                });
                onDragStart === null || onDragStart === void 0 || onDragStart(e2, dndSliceRef.current);
                return;
              }
              setDragging({
                x: e2.clientX,
                y: e2.clientY
              });
              onDrag === null || onDrag === void 0 || onDrag(e2, dndSliceRef.current);
            }, [draggingItemType, onDrag, onDragStart, setDragging, reset]);
            var handleMouseUp = hooks_module_q(function(e2) {
              e2.stopPropagation();
              if (isStarted) {
                onMouseUp === null || onMouseUp === void 0 || onMouseUp(e2, dndSliceRef.current);
                setStarted(false);
                reset();
              }
            }, [isStarted, onMouseUp, reset]);
            var handleKeyDown = hooks_module_q(function(e2) {
              if (isKeyPressed(e2, KEY.ESCAPE)) {
                setStarted(false);
                cancelDrag();
                onPressESCKey === null || onPressESCKey === void 0 || onPressESCKey(e2, dndSliceRef.current);
              }
            }, [onPressESCKey, cancelDrag]);
            hooks_module_y(function() {
              handleMouseMoveRef.current = handleMouseMove;
              handleMouseUpRef.current = handleMouseUp;
              handleKeyDownRef.current = handleKeyDown;
            }, [handleKeyDown, handleMouseMove, handleMouseUp]);
            hooks_module_y(function() {
              var wrappedHandleMouseMove = function wrappedHandleMouseMove2(e2) {
                var _handleMouseMoveRef$c;
                return (_handleMouseMoveRef$c = handleMouseMoveRef.current) === null || _handleMouseMoveRef$c === void 0 ? void 0 : _handleMouseMoveRef$c.call(handleMouseMoveRef, e2);
              };
              var wrappedHandleMouseUp = function wrappedHandleMouseUp2(e2) {
                var _handleMouseUpRef$cur;
                return (_handleMouseUpRef$cur = handleMouseUpRef.current) === null || _handleMouseUpRef$cur === void 0 ? void 0 : _handleMouseUpRef$cur.call(handleMouseUpRef, e2);
              };
              var wrappedHandleKeyDown = function wrappedHandleKeyDown2(e2) {
                var _handleKeyDownRef$cur;
                return (_handleKeyDownRef$cur = handleKeyDownRef.current) === null || _handleKeyDownRef$cur === void 0 ? void 0 : _handleKeyDownRef$cur.call(handleKeyDownRef, e2);
              };
              if (isStarted) {
                document.addEventListener("mousemove", wrappedHandleMouseMove);
                document.addEventListener("mouseup", wrappedHandleMouseUp);
                document.addEventListener("keydown", wrappedHandleKeyDown);
                return function() {
                  document.removeEventListener("mousemove", wrappedHandleMouseMove);
                  document.removeEventListener("mouseup", wrappedHandleMouseUp);
                  document.removeEventListener("keydown", wrappedHandleKeyDown);
                };
              }
              return noop;
            }, [isStarted, reset]);
            return handleMouseDown;
          }
          function passConditionalProp(condition, prop) {
            return condition ? prop : void 0;
          }
          function horizontalEvent_typeof(o2) {
            "@babel/helpers - typeof";
            return horizontalEvent_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, horizontalEvent_typeof(o2);
          }
          function horizontalEvent_slicedToArray(r2, e2) {
            return horizontalEvent_arrayWithHoles(r2) || horizontalEvent_iterableToArrayLimit(r2, e2) || horizontalEvent_unsupportedIterableToArray(r2, e2) || horizontalEvent_nonIterableRest();
          }
          function horizontalEvent_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function horizontalEvent_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return horizontalEvent_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? horizontalEvent_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function horizontalEvent_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function horizontalEvent_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function horizontalEvent_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function horizontalEvent_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function horizontalEvent_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? horizontalEvent_ownKeys(Object(t), true).forEach(function(r3) {
                horizontalEvent_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : horizontalEvent_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function horizontalEvent_defineProperty(e2, r2, t) {
            return (r2 = horizontalEvent_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function horizontalEvent_toPropertyKey(t) {
            var i2 = horizontalEvent_toPrimitive(t, "string");
            return "symbol" == horizontalEvent_typeof(i2) ? i2 : i2 + "";
          }
          function horizontalEvent_toPrimitive(t, r2) {
            if ("object" != horizontalEvent_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != horizontalEvent_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function getMargins(flat) {
            return {
              vertical: flat ? 5 : 2,
              horizontal: 8
            };
          }
          function getBorderRadius(exceedLeft, exceedRight) {
            var leftBorderRadius = exceedLeft ? 0 : "2px";
            var rightBorderRadius = exceedRight ? 0 : "2px";
            return "".concat(leftBorderRadius, " ").concat(rightBorderRadius, " ").concat(rightBorderRadius, " ").concat(leftBorderRadius);
          }
          function getEventItemStyle(_ref) {
            var uiModel = _ref.uiModel, flat = _ref.flat, eventHeight = _ref.eventHeight, isDraggingTarget = _ref.isDraggingTarget, calendarColor = _ref.calendarColor;
            var exceedLeft = uiModel.exceedLeft, exceedRight = uiModel.exceedRight;
            var _getEventColors = getEventColors(uiModel, calendarColor), color = _getEventColors.color, backgroundColor = _getEventColors.backgroundColor, dragBackgroundColor = _getEventColors.dragBackgroundColor, borderColor = _getEventColors.borderColor;
            var defaultItemStyle = {
              color,
              backgroundColor: isDraggingTarget ? dragBackgroundColor : backgroundColor,
              borderLeft: exceedLeft ? "none" : "3px solid ".concat(borderColor),
              borderRadius: getBorderRadius(exceedLeft, exceedRight),
              overflow: "hidden",
              height: eventHeight,
              lineHeight: toPx(eventHeight),
              opacity: isDraggingTarget ? 0.5 : 1
            };
            var margins = getMargins(flat);
            return flat ? horizontalEvent_objectSpread({
              marginTop: margins.vertical
            }, defaultItemStyle) : horizontalEvent_objectSpread({
              marginLeft: exceedLeft ? 0 : margins.horizontal,
              marginRight: exceedRight ? 0 : margins.horizontal
            }, defaultItemStyle);
          }
          function getContainerStyle(_ref2) {
            var flat = _ref2.flat, uiModel = _ref2.uiModel, resizingWidth = _ref2.resizingWidth, movingLeft = _ref2.movingLeft, eventHeight = _ref2.eventHeight, headerHeight = _ref2.headerHeight;
            var top = uiModel.top, left = uiModel.left, width = uiModel.width, model = uiModel.model;
            var margins = getMargins(flat);
            var baseStyle = flat ? {} : {
              width: resizingWidth || toPercent(width),
              left: toPercent(movingLeft !== null && movingLeft !== void 0 ? movingLeft : left),
              top: (top - 1) * (eventHeight + margins.vertical) + headerHeight,
              position: "absolute"
            };
            return Object.assign(baseStyle, model.customStyle);
          }
          function getTestId(_ref3) {
            var model = _ref3.model;
            var calendarId2 = model.calendarId ? "".concat(model.calendarId, "-") : "";
            var id = model.id ? "".concat(model.id, "-") : "";
            return "".concat(calendarId2).concat(id).concat(model.title);
          }
          var classNames = {
            eventBody: cls("weekday-event"),
            eventTitle: cls("weekday-event-title"),
            eventDot: cls("weekday-event-dot"),
            moveEvent: cls("dragging--move-event"),
            resizeEvent: cls("dragging--resize-horizontal-event")
          };
          function HorizontalEvent(_ref4) {
            var _ref4$flat = _ref4.flat, flat = _ref4$flat === void 0 ? false : _ref4$flat, uiModel = _ref4.uiModel, eventHeight = _ref4.eventHeight, headerHeight = _ref4.headerHeight, _ref4$resizingWidth = _ref4.resizingWidth, resizingWidth = _ref4$resizingWidth === void 0 ? null : _ref4$resizingWidth, _ref4$movingLeft = _ref4.movingLeft, movingLeft = _ref4$movingLeft === void 0 ? null : _ref4$movingLeft;
            var _useStore = useStore(viewSelector), currentView = _useStore.currentView;
            var _useStore2 = useStore(optionsSelector), useDetailPopup = _useStore2.useDetailPopup, isReadOnlyCalendar = _useStore2.isReadOnly;
            var _useDispatch = useDispatch("dnd"), setDraggingEventUIModel = _useDispatch.setDraggingEventUIModel;
            var _useDispatch2 = useDispatch("popup"), showDetailPopup = _useDispatch2.showDetailPopup;
            var layoutContainer = useLayoutContainer();
            var eventBus = useEventBus();
            var calendarColor = useCalendarColor(uiModel.model);
            var _useState = hooks_module_h(false), _useState2 = horizontalEvent_slicedToArray(_useState, 2), isDraggingTarget = _useState2[0], setIsDraggingTarget = _useState2[1];
            var eventContainerRef = hooks_module_A(null);
            var _uiModel$model = uiModel.model, isReadOnly = _uiModel$model.isReadOnly, id = _uiModel$model.id, calendarId2 = _uiModel$model.calendarId;
            var isDraggingGuideEvent = isPresent(resizingWidth) || isPresent(movingLeft);
            var isDraggableEvent2 = !isReadOnlyCalendar && !isReadOnly && !isDraggingGuideEvent;
            var startDragEvent = function startDragEvent2(className2) {
              setDraggingEventUIModel(uiModel);
              layoutContainer === null || layoutContainer === void 0 || layoutContainer.classList.add(className2);
            };
            var endDragEvent = function endDragEvent2(className2) {
              setIsDraggingTarget(false);
              layoutContainer === null || layoutContainer === void 0 || layoutContainer.classList.remove(className2);
            };
            useTransientUpdate(dndSelector, function(_ref5) {
              var draggingEventUIModel = _ref5.draggingEventUIModel, draggingState = _ref5.draggingState;
              if (draggingState === DraggingState.DRAGGING && (draggingEventUIModel === null || draggingEventUIModel === void 0 ? void 0 : draggingEventUIModel.cid()) === uiModel.cid() && !isDraggingGuideEvent) {
                setIsDraggingTarget(true);
              } else {
                setIsDraggingTarget(false);
              }
            });
            hooks_module_y(function() {
              if (!isDraggingGuideEvent) {
                eventBus.fire("afterRenderEvent", uiModel.model.toEventObject());
              }
            }, []);
            var onResizeStart = useDrag(DRAGGING_TYPE_CREATORS.resizeEvent("dayGrid", "".concat(uiModel.cid())), {
              onDragStart: function onDragStart() {
                return startDragEvent(classNames.resizeEvent);
              },
              onMouseUp: function onMouseUp() {
                return endDragEvent(classNames.resizeEvent);
              },
              onPressESCKey: function onPressESCKey() {
                return endDragEvent(classNames.resizeEvent);
              }
            });
            var onMoveStart = useDrag(DRAGGING_TYPE_CREATORS.moveEvent("dayGrid", "".concat(uiModel.cid())), {
              onDragStart: function onDragStart() {
                if (isDraggableEvent2) {
                  startDragEvent(classNames.moveEvent);
                }
              },
              onMouseUp: function onMouseUp(e2, _ref6) {
                var draggingState = _ref6.draggingState;
                endDragEvent(classNames.moveEvent);
                var isClick = draggingState <= DraggingState.INIT;
                if (isClick && useDetailPopup && eventContainerRef.current) {
                  showDetailPopup({
                    event: uiModel.model,
                    eventRect: eventContainerRef.current.getBoundingClientRect()
                  }, flat);
                }
                if (isClick) {
                  eventBus.fire("clickEvent", {
                    event: uiModel.model.toEventObject(),
                    nativeEvent: e2
                  });
                }
              },
              onPressESCKey: function onPressESCKey() {
                return endDragEvent(classNames.moveEvent);
              }
            });
            var handleResizeStart = function handleResizeStart2(e2) {
              e2.stopPropagation();
              if (isDraggableEvent2) {
                onResizeStart(e2);
              }
            };
            var handleMoveStart = function handleMoveStart2(e2) {
              e2.stopPropagation();
              onMoveStart(e2);
            };
            var isDotEvent = !isDraggingTarget && currentView === "month" && uiModel.model.category === "time" && isSameDate(uiModel.model.start, uiModel.model.end);
            var shouldHideResizeHandler = !isDraggableEvent2 || flat || isDraggingTarget || uiModel.exceedRight;
            var containerStyle = getContainerStyle({
              uiModel,
              eventHeight,
              headerHeight,
              flat,
              movingLeft,
              resizingWidth
            });
            var eventItemStyle = getEventItemStyle({
              uiModel,
              flat,
              eventHeight,
              isDraggingTarget,
              calendarColor
            });
            return _("div", {
              className: cls("weekday-event-block", {
                "weekday-exceed-left": uiModel.exceedLeft,
                "weekday-exceed-right": uiModel.exceedRight
              }),
              style: containerStyle,
              "data-testid": passConditionalProp(isDraggableEvent2, getTestId(uiModel)),
              "data-calendar-id": calendarId2,
              "data-event-id": id,
              ref: eventContainerRef
            }, _("div", {
              className: classNames.eventBody,
              style: horizontalEvent_objectSpread(horizontalEvent_objectSpread({}, eventItemStyle), {}, {
                backgroundColor: isDotEvent ? null : eventItemStyle.backgroundColor,
                borderLeft: isDotEvent ? null : eventItemStyle.borderLeft
              }),
              onMouseDown: handleMoveStart
            }, isDotEvent ? _("span", {
              className: classNames.eventDot,
              style: {
                backgroundColor: eventItemStyle.backgroundColor
              }
            }) : null, _("span", {
              className: classNames.eventTitle
            }, _(Template, {
              template: uiModel.model.category,
              param: uiModel.model
            })), !shouldHideResizeHandler ? _(HorizontalEventResizeIcon, {
              onMouseDown: handleResizeStart
            }) : null));
          }
          function useWhen(callback, condition) {
            var callbackRef = hooks_module_A(callback);
            hooks_module_y(function() {
              callbackRef.current = callback;
            }, [callback]);
            hooks_module_y(function() {
              var invoke = function invoke2() {
                return callbackRef.current();
              };
              if (condition) {
                invoke();
              }
            }, [condition]);
          }
          function useCurrentPointerPositionInGrid_slicedToArray(r2, e2) {
            return useCurrentPointerPositionInGrid_arrayWithHoles(r2) || useCurrentPointerPositionInGrid_iterableToArrayLimit(r2, e2) || useCurrentPointerPositionInGrid_unsupportedIterableToArray(r2, e2) || useCurrentPointerPositionInGrid_nonIterableRest();
          }
          function useCurrentPointerPositionInGrid_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function useCurrentPointerPositionInGrid_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return useCurrentPointerPositionInGrid_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? useCurrentPointerPositionInGrid_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function useCurrentPointerPositionInGrid_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function useCurrentPointerPositionInGrid_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function useCurrentPointerPositionInGrid_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function useCurrentPointerPositionInGrid(gridPositionFinder) {
            var _useState = hooks_module_h(null), _useState2 = useCurrentPointerPositionInGrid_slicedToArray(_useState, 2), currentGridPos = _useState2[0], setCurrentGridPos = _useState2[1];
            useTransientUpdate(dndSelector, function(dndState) {
              if (isPresent(dndState.x) && isPresent(dndState.y)) {
                var gridPosition = gridPositionFinder({
                  clientX: dndState.x,
                  clientY: dndState.y
                });
                if (gridPosition) {
                  setCurrentGridPos(gridPosition);
                }
              }
            });
            var clearCurrentGridPos = hooks_module_q(function() {
              return setCurrentGridPos(null);
            }, []);
            return [currentGridPos, clearCurrentGridPos];
          }
          __webpack_require__(8697);
          __webpack_require__(8096);
          __webpack_require__(206);
          function useDraggingEvent_slicedToArray(r2, e2) {
            return useDraggingEvent_arrayWithHoles(r2) || useDraggingEvent_iterableToArrayLimit(r2, e2) || useDraggingEvent_unsupportedIterableToArray(r2, e2) || useDraggingEvent_nonIterableRest();
          }
          function useDraggingEvent_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function useDraggingEvent_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return useDraggingEvent_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? useDraggingEvent_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function useDraggingEvent_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function useDraggingEvent_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function useDraggingEvent_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          var getTargetEventId = function getTargetEventId2(itemType, area, behavior) {
            function isEventDraggingType(_itemType) {
              return new RegExp("^event/".concat(area, "/").concat(behavior, "/\\d+$")).test(_itemType);
            }
            if (type_isNil(itemType)) {
              return null;
            }
            return isEventDraggingType(itemType) ? last(itemType.split("/")) : null;
          };
          function useDraggingEvent(area, behavior) {
            var _useState = hooks_module_h(false), _useState2 = useDraggingEvent_slicedToArray(_useState, 2), isDraggingEnd = _useState2[0], setIsDraggingEnd = _useState2[1];
            var _useState3 = hooks_module_h(false), _useState4 = useDraggingEvent_slicedToArray(_useState3, 2), isDraggingCanceled = _useState4[0], setIsDraggingCanceled = _useState4[1];
            var _useState5 = hooks_module_h(null), _useState6 = useDraggingEvent_slicedToArray(_useState5, 2), draggingEvent = _useState6[0], setDraggingEvent = _useState6[1];
            useTransientUpdate(dndSelector, function(_ref) {
              var draggingItemType = _ref.draggingItemType, draggingEventUIModel = _ref.draggingEventUIModel, draggingState = _ref.draggingState;
              var targetEventId = getTargetEventId(draggingItemType, area, behavior);
              var hasMatchingTargetEvent = Number(targetEventId) === (draggingEventUIModel === null || draggingEventUIModel === void 0 ? void 0 : draggingEventUIModel.cid());
              var isIdle = draggingState === DraggingState.IDLE;
              var isCanceled = draggingState === DraggingState.CANCELED;
              if (type_isNil(draggingEvent) && hasMatchingTargetEvent) {
                setDraggingEvent(draggingEventUIModel);
              }
              if (isPresent(draggingEvent) && (isIdle || isCanceled)) {
                setIsDraggingEnd(true);
                setIsDraggingCanceled(isCanceled);
              }
            });
            var clearDraggingEvent = function clearDraggingEvent2() {
              setDraggingEvent(null);
              setIsDraggingEnd(false);
              setIsDraggingCanceled(false);
            };
            return {
              isDraggingEnd,
              isDraggingCanceled,
              draggingEvent,
              clearDraggingEvent
            };
          }
          function useAlldayGridRowEventMove_slicedToArray(r2, e2) {
            return useAlldayGridRowEventMove_arrayWithHoles(r2) || useAlldayGridRowEventMove_iterableToArrayLimit(r2, e2) || useAlldayGridRowEventMove_unsupportedIterableToArray(r2, e2) || useAlldayGridRowEventMove_nonIterableRest();
          }
          function useAlldayGridRowEventMove_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function useAlldayGridRowEventMove_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return useAlldayGridRowEventMove_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? useAlldayGridRowEventMove_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function useAlldayGridRowEventMove_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function useAlldayGridRowEventMove_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function useAlldayGridRowEventMove_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function useAlldayGridRowEventMove(_ref) {
            var rowStyleInfo = _ref.rowStyleInfo, gridPositionFinder = _ref.gridPositionFinder;
            var eventBus = useEventBus();
            var _useDraggingEvent = useDraggingEvent("dayGrid", "move"), isDraggingEnd = _useDraggingEvent.isDraggingEnd, isDraggingCanceled = _useDraggingEvent.isDraggingCanceled, movingEvent = _useDraggingEvent.draggingEvent, clearDraggingEvent = _useDraggingEvent.clearDraggingEvent;
            var startGridXRef = hooks_module_A(null);
            var _useCurrentPointerPos = useCurrentPointerPositionInGrid(gridPositionFinder), _useCurrentPointerPos2 = useAlldayGridRowEventMove_slicedToArray(_useCurrentPointerPos, 2), currentGridPos = _useCurrentPointerPos2[0], clearCurrentGridPos = _useCurrentPointerPos2[1];
            var _ref2 = currentGridPos !== null && currentGridPos !== void 0 ? currentGridPos : {}, columnIndex = _ref2.columnIndex;
            var targetEventStartGridX = hooks_module_T(function() {
              return type_isNil(movingEvent) ? null : rowStyleInfo.findIndex(function(_ref3) {
                var left = _ref3.left;
                return left === movingEvent.left;
              });
            }, [rowStyleInfo, movingEvent]);
            var currentMovingLeft = hooks_module_T(function() {
              if (type_isNil(columnIndex) || type_isNil(startGridXRef.current) || type_isNil(targetEventStartGridX)) {
                return null;
              }
              var newColumnIndex = targetEventStartGridX + columnIndex - startGridXRef.current;
              return newColumnIndex < 0 ? -rowStyleInfo[-newColumnIndex].left : rowStyleInfo[newColumnIndex].left;
            }, [columnIndex, rowStyleInfo, targetEventStartGridX]);
            hooks_module_y(function() {
              if (type_isNil(startGridXRef.current) && isPresent(columnIndex)) {
                startGridXRef.current = columnIndex;
              }
            }, [columnIndex]);
            useWhen(function() {
              var shouldUpdate = !isDraggingCanceled && isPresent(movingEvent) && isPresent(columnIndex) && isPresent(currentMovingLeft) && columnIndex !== startGridXRef.current;
              if (shouldUpdate && isPresent(startGridXRef.current)) {
                var dateOffset = columnIndex - startGridXRef.current;
                var newStartDate = new date_TZDate(movingEvent.model.getStarts());
                var newEndDate = new date_TZDate(movingEvent.model.getEnds());
                newStartDate.addDate(dateOffset);
                newEndDate.addDate(dateOffset);
                eventBus.fire("beforeUpdateEvent", {
                  event: movingEvent.model.toEventObject(),
                  changes: {
                    start: newStartDate,
                    end: newEndDate
                  }
                });
              }
              clearDraggingEvent();
              clearCurrentGridPos();
              startGridXRef.current = null;
            }, isDraggingEnd);
            return hooks_module_T(function() {
              return {
                movingEvent,
                movingLeft: currentMovingLeft
              };
            }, [currentMovingLeft, movingEvent]);
          }
          function MovingEventShadow(_ref) {
            var rowStyleInfo = _ref.rowStyleInfo, gridPositionFinder = _ref.gridPositionFinder;
            var _useAlldayGridRowEven = useAlldayGridRowEventMove({
              rowStyleInfo,
              gridPositionFinder
            }), movingEvent = _useAlldayGridRowEven.movingEvent, movingLeft = _useAlldayGridRowEven.movingLeft;
            if (type_isNil(movingEvent)) {
              return null;
            }
            return _(HorizontalEvent, {
              uiModel: movingEvent,
              eventHeight: EVENT_HEIGHT,
              headerHeight: 0,
              movingLeft
            });
          }
          function useAlldayGridRowEventResize_slicedToArray(r2, e2) {
            return useAlldayGridRowEventResize_arrayWithHoles(r2) || useAlldayGridRowEventResize_iterableToArrayLimit(r2, e2) || useAlldayGridRowEventResize_unsupportedIterableToArray(r2, e2) || useAlldayGridRowEventResize_nonIterableRest();
          }
          function useAlldayGridRowEventResize_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function useAlldayGridRowEventResize_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return useAlldayGridRowEventResize_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? useAlldayGridRowEventResize_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function useAlldayGridRowEventResize_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function useAlldayGridRowEventResize_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function useAlldayGridRowEventResize_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function getEventColIndex(uiModel, row) {
            var start = getGridDateIndex(uiModel.getStarts(), row);
            var end = getGridDateIndex(uiModel.getEnds(), row);
            return {
              start,
              end
            };
          }
          function useAlldayGridRowEventResize(_ref) {
            var weekDates = _ref.weekDates, gridColWidthMap = _ref.gridColWidthMap, gridPositionFinder = _ref.gridPositionFinder;
            var eventBus = useEventBus();
            var _useDraggingEvent = useDraggingEvent("dayGrid", "resize"), isDraggingEnd = _useDraggingEvent.isDraggingEnd, isDraggingCanceled = _useDraggingEvent.isDraggingCanceled, resizingEvent = _useDraggingEvent.draggingEvent, clearDraggingEvent = _useDraggingEvent.clearDraggingEvent;
            var _useCurrentPointerPos = useCurrentPointerPositionInGrid(gridPositionFinder), _useCurrentPointerPos2 = useAlldayGridRowEventResize_slicedToArray(_useCurrentPointerPos, 2), currentGridPos = _useCurrentPointerPos2[0], clearCurrentGridPos = _useCurrentPointerPos2[1];
            var _ref2 = currentGridPos !== null && currentGridPos !== void 0 ? currentGridPos : {}, columnIndex = _ref2.columnIndex;
            var targetEventGridIndices = hooks_module_T(function() {
              if (resizingEvent) {
                return getEventColIndex(resizingEvent, weekDates);
              }
              return {
                start: -1,
                end: -1
              };
            }, [weekDates, resizingEvent]);
            var resizingWidth = hooks_module_T(function() {
              if (targetEventGridIndices.start > -1 && isPresent(columnIndex)) {
                return gridColWidthMap[targetEventGridIndices.start][columnIndex];
              }
              return null;
            }, [columnIndex, gridColWidthMap, targetEventGridIndices.start]);
            useWhen(function() {
              var shouldUpdateEvent = !isDraggingCanceled && isPresent(resizingEvent) && isPresent(columnIndex) && targetEventGridIndices.start <= columnIndex && targetEventGridIndices.end !== columnIndex;
              if (shouldUpdateEvent) {
                var targetDate = weekDates[columnIndex];
                eventBus.fire("beforeUpdateEvent", {
                  event: resizingEvent.model.toEventObject(),
                  changes: {
                    end: targetDate
                  }
                });
              }
              clearCurrentGridPos();
              clearDraggingEvent();
            }, isDraggingEnd);
            return hooks_module_T(function() {
              return {
                resizingEvent,
                resizingWidth
              };
            }, [resizingWidth, resizingEvent]);
          }
          function ResizingEventShadow(_ref) {
            var weekDates = _ref.weekDates, gridColWidthMap = _ref.gridColWidthMap, gridPositionFinder = _ref.gridPositionFinder;
            var _useAlldayGridRowEven = useAlldayGridRowEventResize({
              weekDates,
              gridColWidthMap,
              gridPositionFinder
            }), resizingEvent = _useAlldayGridRowEven.resizingEvent, resizingWidth = _useAlldayGridRowEven.resizingWidth;
            if (type_isNil(resizingEvent)) {
              return null;
            }
            return _(HorizontalEvent, {
              uiModel: resizingEvent,
              eventHeight: EVENT_HEIGHT,
              headerHeight: 0,
              resizingWidth
            });
          }
          function useDOMNode_slicedToArray(r2, e2) {
            return useDOMNode_arrayWithHoles(r2) || useDOMNode_iterableToArrayLimit(r2, e2) || useDOMNode_unsupportedIterableToArray(r2, e2) || useDOMNode_nonIterableRest();
          }
          function useDOMNode_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function useDOMNode_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return useDOMNode_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? useDOMNode_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function useDOMNode_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function useDOMNode_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function useDOMNode_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function useDOMNode() {
            var _useState = hooks_module_h(null), _useState2 = useDOMNode_slicedToArray(_useState, 2), node = _useState2[0], setNode = _useState2[1];
            var setNodeRef = hooks_module_q(function(ref) {
              if (ref) {
                setNode(ref);
              }
            }, []);
            return [node, setNodeRef];
          }
          function useGridRowHeightController_slicedToArray(r2, e2) {
            return useGridRowHeightController_arrayWithHoles(r2) || useGridRowHeightController_iterableToArrayLimit(r2, e2) || useGridRowHeightController_unsupportedIterableToArray(r2, e2) || useGridRowHeightController_nonIterableRest();
          }
          function useGridRowHeightController_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function useGridRowHeightController_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return useGridRowHeightController_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? useGridRowHeightController_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function useGridRowHeightController_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function useGridRowHeightController_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function useGridRowHeightController_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function useGridRowHeightController(maxTop, category) {
            var _useState = hooks_module_h(0), _useState2 = useGridRowHeightController_slicedToArray(_useState, 2), clickedIndex = _useState2[0], setClickedIndex = _useState2[1];
            var _useState3 = hooks_module_h(false), _useState4 = useGridRowHeightController_slicedToArray(_useState3, 2), isClickedCount = _useState4[0], setClickedCount = _useState4[1];
            var _useDispatch = useDispatch("weekViewLayout"), updateDayGridRowHeight = _useDispatch.updateDayGridRowHeight;
            var onClickExceedCount = hooks_module_q(function(index) {
              setClickedCount(true);
              setClickedIndex(index);
              updateDayGridRowHeight({
                rowName: category,
                height: (maxTop + 1) * EVENT_HEIGHT
              });
            }, [category, maxTop, updateDayGridRowHeight]);
            var onClickCollapseButton = hooks_module_q(function() {
              setClickedCount(false);
              updateDayGridRowHeight({
                rowName: category,
                height: DEFAULT_PANEL_HEIGHT
              });
            }, [category, updateDayGridRowHeight]);
            return {
              clickedIndex,
              isClickedCount,
              onClickExceedCount,
              onClickCollapseButton
            };
          }
          function requestTimeout(fn, delay, registerCancel) {
            var start;
            var _loop = function loop(timestamp) {
              if (!start) {
                start = timestamp;
              }
              var elapsed = timestamp - start;
              if (elapsed >= delay) {
                fn();
                registerCancel(noop);
                return;
              }
              var raf2 = requestAnimationFrame(_loop);
              registerCancel(function() {
                return cancelAnimationFrame(raf2);
              });
            };
            var raf = requestAnimationFrame(_loop);
            registerCancel(function() {
              return cancelAnimationFrame(raf);
            });
          }
          function useClickPrevention(_ref) {
            var onClick = _ref.onClick, onDblClick = _ref.onDblClick, _ref$delay = _ref.delay, delay = _ref$delay === void 0 ? 300 : _ref$delay;
            var cancelCallback = hooks_module_A(noop);
            var registerCancel = function registerCancel2(fn) {
              cancelCallback.current = fn;
            };
            var cancelScheduledWork = function cancelScheduledWork2() {
              cancelCallback.current();
            };
            hooks_module_y(function() {
              return cancelScheduledWork;
            }, []);
            var handleClick = function handleClick2(e2) {
              cancelScheduledWork();
              requestTimeout(onClick.bind(null, e2), delay, registerCancel);
            };
            var handleDblClick = function handleDblClick2(e2) {
              cancelScheduledWork();
              onDblClick(e2);
            };
            return [handleClick, handleDblClick];
          }
          function useGridSelection_toConsumableArray(r2) {
            return useGridSelection_arrayWithoutHoles(r2) || useGridSelection_iterableToArray(r2) || useGridSelection_unsupportedIterableToArray(r2) || useGridSelection_nonIterableSpread();
          }
          function useGridSelection_nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function useGridSelection_iterableToArray(r2) {
            if ("undefined" != typeof Symbol && null != r2[Symbol.iterator] || null != r2["@@iterator"])
              return Array.from(r2);
          }
          function useGridSelection_arrayWithoutHoles(r2) {
            if (Array.isArray(r2))
              return useGridSelection_arrayLikeToArray(r2);
          }
          function useGridSelection_slicedToArray(r2, e2) {
            return useGridSelection_arrayWithHoles(r2) || useGridSelection_iterableToArrayLimit(r2, e2) || useGridSelection_unsupportedIterableToArray(r2, e2) || useGridSelection_nonIterableRest();
          }
          function useGridSelection_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function useGridSelection_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return useGridSelection_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? useGridSelection_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function useGridSelection_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function useGridSelection_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function useGridSelection_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          var GRID_SELECTION_TYPE_MAP = {
            dayGridMonth: "month",
            dayGridWeek: "allday",
            timeGrid: "time"
          };
          function sortDates(a2, b2) {
            var isIncreased = a2 < b2;
            return isIncreased ? [a2, b2] : [b2, a2];
          }
          function useGridSelection(_ref) {
            var type = _ref.type, selectionSorter = _ref.selectionSorter, dateGetter = _ref.dateGetter, dateCollection = _ref.dateCollection, gridPositionFinder = _ref.gridPositionFinder;
            var _useStore = useStore(optionsSelector), useFormPopup = _useStore.useFormPopup, gridSelectionOptions = _useStore.gridSelection;
            var enableDblClick = gridSelectionOptions.enableDblClick, enableClick = gridSelectionOptions.enableClick;
            var _useDispatch = useDispatch("gridSelection"), setGridSelection = _useDispatch.setGridSelection, addGridSelection = _useDispatch.addGridSelection, clearAll = _useDispatch.clearAll;
            var _useDispatch2 = useDispatch("popup"), hideAllPopup = _useDispatch2.hideAllPopup, showFormPopup = _useDispatch2.showFormPopup;
            var eventBus = useEventBus();
            var layoutContainer = useLayoutContainer();
            var _useState = hooks_module_h(null), _useState2 = useGridSelection_slicedToArray(_useState, 2), initMousePosition = _useState2[0], setInitMousePosition = _useState2[1];
            var _useState3 = hooks_module_h(null), _useState4 = useGridSelection_slicedToArray(_useState3, 2), initGridPosition = _useState4[0], setInitGridPosition = _useState4[1];
            var isSelectingGridRef = hooks_module_A(false);
            var gridSelectionRef = hooks_module_A(null);
            useTransientUpdate(hooks_module_q(function(state) {
              return state.gridSelection[type];
            }, [type]), function(gridSelection) {
              gridSelectionRef.current = gridSelection;
            });
            useTransientUpdate(dndSelector, function(_ref2) {
              var draggingState = _ref2.draggingState, draggingItemType = _ref2.draggingItemType;
              isSelectingGridRef.current = draggingItemType === currentGridSelectionType && draggingState >= DraggingState.INIT;
            });
            var currentGridSelectionType = DRAGGING_TYPE_CREATORS.gridSelection(type);
            var setGridSelectionByPosition = function setGridSelectionByPosition2(e2) {
              var gridPosition = gridPositionFinder(e2);
              if (isPresent(initGridPosition) && isPresent(gridPosition)) {
                setGridSelection(type, selectionSorter(initGridPosition, gridPosition));
              }
            };
            var _useClickPrevention = useClickPrevention({
              onClick: function onClick(e2) {
                if (enableClick) {
                  onMouseUp(e2, true);
                }
              },
              onDblClick: function onDblClick(e2) {
                if (enableDblClick) {
                  onMouseUp(e2, true);
                }
              },
              delay: 250
            }), _useClickPrevention2 = useGridSelection_slicedToArray(_useClickPrevention, 2), handleClickWithDebounce = _useClickPrevention2[0], handleDblClickPreventingClick = _useClickPrevention2[1];
            var onMouseUpWithClick = function onMouseUpWithClick2(e2) {
              var isClick = e2.detail <= 1;
              if (!enableClick && (!enableDblClick || isClick)) {
                return;
              }
              if (enableClick) {
                if (isClick) {
                  handleClickWithDebounce(e2);
                } else {
                  handleDblClickPreventingClick(e2);
                }
                return;
              }
              onMouseUp(e2, true);
            };
            var onMouseUp = function onMouseUp2(e2, isClickEvent) {
              if (isClickEvent) {
                setGridSelectionByPosition(e2);
              }
              if (isPresent(gridSelectionRef.current)) {
                var _layoutContainer$quer;
                var _sortDates = sortDates.apply(void 0, useGridSelection_toConsumableArray(dateGetter(dateCollection, gridSelectionRef.current))), _sortDates2 = useGridSelection_slicedToArray(_sortDates, 2), startDate = _sortDates2[0], endDate = _sortDates2[1];
                if (useFormPopup && isPresent(initMousePosition)) {
                  var popupArrowPointPosition = {
                    top: (e2.clientY + initMousePosition.y) / 2,
                    left: (e2.clientX + initMousePosition.x) / 2
                  };
                  showFormPopup({
                    isCreationPopup: true,
                    title: "",
                    location: "",
                    start: startDate,
                    end: endDate,
                    isAllday: type !== "timeGrid",
                    isPrivate: false,
                    popupArrowPointPosition,
                    close: clearAll
                  });
                }
                var gridSelectionSelector = ".".concat(cls(GRID_SELECTION_TYPE_MAP[type]), ".").concat(cls("grid-selection"));
                var gridSelectionElements = Array.from((_layoutContainer$quer = layoutContainer === null || layoutContainer === void 0 ? void 0 : layoutContainer.querySelectorAll(gridSelectionSelector)) !== null && _layoutContainer$quer !== void 0 ? _layoutContainer$quer : []);
                eventBus.fire("selectDateTime", {
                  start: startDate.toDate(),
                  end: endDate.toDate(),
                  isAllday: type !== "timeGrid",
                  nativeEvent: e2,
                  gridSelectionElements
                });
              }
            };
            var clearGridSelection = hooks_module_q(function() {
              setInitMousePosition(null);
              setInitGridPosition(null);
              setGridSelection(type, null);
            }, [setGridSelection, type]);
            var onMouseDown = useDrag(currentGridSelectionType, {
              onInit: function onInit(e2) {
                if (useFormPopup) {
                  setInitMousePosition({
                    x: e2.clientX,
                    y: e2.clientY
                  });
                  hideAllPopup();
                }
                var gridPosition = gridPositionFinder(e2);
                if (isPresent(gridPosition)) {
                  setInitGridPosition(gridPosition);
                }
                if (!useFormPopup) {
                  addGridSelection(type, gridSelectionRef.current);
                }
              },
              onDragStart: function onDragStart(e2) {
                setGridSelectionByPosition(e2);
              },
              onDrag: function onDrag(e2) {
                if (isSelectingGridRef.current) {
                  setGridSelectionByPosition(e2);
                }
              },
              onMouseUp: function(_onMouseUp) {
                function onMouseUp2(_x, _x2) {
                  return _onMouseUp.apply(this, arguments);
                }
                onMouseUp2.toString = function() {
                  return _onMouseUp.toString();
                };
                return onMouseUp2;
              }(function(e2, _ref3) {
                var draggingState = _ref3.draggingState;
                e2.stopPropagation();
                var isClickEvent = draggingState <= DraggingState.INIT;
                if (isClickEvent) {
                  onMouseUpWithClick(e2);
                } else {
                  onMouseUp(e2, isClickEvent);
                }
              }),
              onPressESCKey: clearGridSelection
            });
            hooks_module_y(function() {
              return clearGridSelection;
            }, [clearGridSelection]);
            return onMouseDown;
          }
          function alldayGridRow_toConsumableArray(r2) {
            return alldayGridRow_arrayWithoutHoles(r2) || alldayGridRow_iterableToArray(r2) || alldayGridRow_unsupportedIterableToArray(r2) || alldayGridRow_nonIterableSpread();
          }
          function alldayGridRow_nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function alldayGridRow_iterableToArray(r2) {
            if ("undefined" != typeof Symbol && null != r2[Symbol.iterator] || null != r2["@@iterator"])
              return Array.from(r2);
          }
          function alldayGridRow_arrayWithoutHoles(r2) {
            if (Array.isArray(r2))
              return alldayGridRow_arrayLikeToArray(r2);
          }
          function alldayGridRow_slicedToArray(r2, e2) {
            return alldayGridRow_arrayWithHoles(r2) || alldayGridRow_iterableToArrayLimit(r2, e2) || alldayGridRow_unsupportedIterableToArray(r2, e2) || alldayGridRow_nonIterableRest();
          }
          function alldayGridRow_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function alldayGridRow_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return alldayGridRow_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? alldayGridRow_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function alldayGridRow_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function alldayGridRow_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function alldayGridRow_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          var rowTitleTemplate = "alldayTitle";
          function AlldayGridRow(_ref) {
            var events = _ref.events, weekDates = _ref.weekDates, _ref$height = _ref.height, height = _ref$height === void 0 ? DEFAULT_PANEL_HEIGHT : _ref$height, _ref$options = _ref.options, options = _ref$options === void 0 ? {} : _ref$options, rowStyleInfo = _ref.rowStyleInfo, gridColWidthMap = _ref.gridColWidthMap;
            var _useStore = useStore(optionsSelector), isReadOnly = _useStore.isReadOnly;
            var dayGridLeftTheme = useTheme(weekDayGridLeftSelector);
            var _useDOMNode = useDOMNode(), _useDOMNode2 = alldayGridRow_slicedToArray(_useDOMNode, 2), panelContainer = _useDOMNode2[0], setPanelContainerRef = _useDOMNode2[1];
            var _options$narrowWeeken = options.narrowWeekend, narrowWeekend = _options$narrowWeeken === void 0 ? false : _options$narrowWeeken, _options$startDayOfWe = options.startDayOfWeek, startDayOfWeek = _options$startDayOfWe === void 0 ? Day.SUN : _options$startDayOfWe;
            var maxTop = hooks_module_T(function() {
              return Math.max.apply(Math, [0].concat(alldayGridRow_toConsumableArray(events.map(function(_ref2) {
                var top = _ref2.top;
                return top;
              }))));
            }, [events]);
            var gridPositionFinder = hooks_module_T(function() {
              return createGridPositionFinder({
                container: panelContainer,
                rowsCount: 1,
                columnsCount: weekDates.length,
                narrowWeekend,
                startDayOfWeek
              });
            }, [panelContainer, weekDates.length, narrowWeekend, startDayOfWeek]);
            var _useGridRowHeightCont = useGridRowHeightController(maxTop, "allday"), clickedIndex = _useGridRowHeightCont.clickedIndex, isClickedCount = _useGridRowHeightCont.isClickedCount, onClickExceedCount = _useGridRowHeightCont.onClickExceedCount, onClickCollapseButton = _useGridRowHeightCont.onClickCollapseButton;
            var horizontalEvents = hooks_module_T(function() {
              return events.filter(isWithinHeight(height, EVENT_HEIGHT + WEEK_EVENT_MARGIN_TOP)).map(function(uiModel) {
                return _(HorizontalEvent, {
                  key: "allday-DayEvent-".concat(uiModel.cid()),
                  uiModel,
                  eventHeight: EVENT_HEIGHT,
                  headerHeight: 0
                });
              });
            }, [events, height]);
            var startGridSelection = useGridSelection({
              type: "dayGridWeek",
              gridPositionFinder,
              dateCollection: weekDates,
              selectionSorter: alldayGridRowSelectionHelper.sortSelection,
              dateGetter: alldayGridRowSelectionHelper.getDateFromCollection
            });
            var onMouseDown = function onMouseDown2(e2) {
              var target = e2.target;
              if (isReadOnly || !target.classList.contains(cls("panel-grid"))) {
                return;
              }
              startGridSelection(e2);
            };
            return _(preact_module_k, null, _("div", {
              className: cls("panel-title"),
              style: dayGridLeftTheme
            }, _(Template, {
              template: rowTitleTemplate,
              param: "alldayTitle"
            })), _("div", {
              className: cls("allday-panel"),
              ref: setPanelContainerRef,
              onMouseDown
            }, _("div", {
              className: cls("panel-grid-wrapper")
            }, _(GridCells, {
              uiModels: events,
              weekDates,
              narrowWeekend,
              height,
              clickedIndex,
              isClickedCount,
              onClickExceedCount,
              onClickCollapseButton
            })), _("div", {
              className: cls("panel-allday-events")
            }, horizontalEvents), _(ResizingEventShadow, {
              weekDates,
              gridPositionFinder,
              gridColWidthMap
            }), _(MovingEventShadow, {
              rowStyleInfo,
              gridPositionFinder
            }), _(AlldayGridSelection, {
              weekDates,
              narrowWeekend
            })));
          }
          function otherGridRow_toConsumableArray(r2) {
            return otherGridRow_arrayWithoutHoles(r2) || otherGridRow_iterableToArray(r2) || otherGridRow_unsupportedIterableToArray(r2) || otherGridRow_nonIterableSpread();
          }
          function otherGridRow_nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function otherGridRow_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return otherGridRow_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? otherGridRow_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function otherGridRow_iterableToArray(r2) {
            if ("undefined" != typeof Symbol && null != r2[Symbol.iterator] || null != r2["@@iterator"])
              return Array.from(r2);
          }
          function otherGridRow_arrayWithoutHoles(r2) {
            if (Array.isArray(r2))
              return otherGridRow_arrayLikeToArray(r2);
          }
          function otherGridRow_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function OtherGridRow(_ref) {
            var events = _ref.events, weekDates = _ref.weekDates, category = _ref.category, _ref$height = _ref.height, height = _ref$height === void 0 ? DEFAULT_PANEL_HEIGHT : _ref$height, _ref$options = _ref.options, options = _ref$options === void 0 ? {} : _ref$options;
            var dayGridLeftTheme = useTheme(weekDayGridLeftSelector);
            var maxTop = hooks_module_T(function() {
              return Math.max.apply(Math, [0].concat(otherGridRow_toConsumableArray(events.map(function(_ref2) {
                var top = _ref2.top;
                return top;
              }))));
            }, [events]);
            var _options$narrowWeeken = options.narrowWeekend, narrowWeekend = _options$narrowWeeken === void 0 ? false : _options$narrowWeeken;
            var rowTitleTemplate2 = "".concat(category, "Title");
            var _useGridRowHeightCont = useGridRowHeightController(maxTop, category), clickedIndex = _useGridRowHeightCont.clickedIndex, isClickedCount = _useGridRowHeightCont.isClickedCount, onClickExceedCount = _useGridRowHeightCont.onClickExceedCount, onClickCollapseButton = _useGridRowHeightCont.onClickCollapseButton;
            var horizontalEvents = hooks_module_T(function() {
              return events.filter(isWithinHeight(height, EVENT_HEIGHT + WEEK_EVENT_MARGIN_TOP)).map(function(uiModel) {
                return _(HorizontalEvent, {
                  key: "".concat(category, "-DayEvent-").concat(uiModel.cid()),
                  uiModel,
                  eventHeight: EVENT_HEIGHT,
                  headerHeight: 0
                });
              });
            }, [category, events, height]);
            return _(preact_module_k, null, _("div", {
              className: cls("panel-title"),
              style: dayGridLeftTheme
            }, _(Template, {
              template: rowTitleTemplate2,
              param: category
            })), _("div", {
              className: cls("allday-panel")
            }, _("div", {
              className: cls("panel-grid-wrapper")
            }, _(GridCells, {
              uiModels: events,
              weekDates,
              narrowWeekend,
              height,
              clickedIndex,
              isClickedCount,
              onClickExceedCount,
              onClickCollapseButton
            })), _("div", {
              className: cls("panel-".concat(category, "-events"))
            }, horizontalEvents)));
          }
          __webpack_require__(3294);
          var eventDetailSectionDetail_classNames = {
            detailItem: cls("detail-item"),
            detailItemIndent: cls("detail-item", "detail-item-indent"),
            detailItemSeparate: cls("detail-item", "detail-item-separate"),
            sectionDetail: cls("popup-section", "section-detail"),
            content: cls("content"),
            locationIcon: cls("icon", "ic-location-b"),
            repeatIcon: cls("icon", "ic-repeat-b"),
            userIcon: cls("icon", "ic-user-b"),
            stateIcon: cls("icon", "ic-state-b"),
            calendarDotIcon: cls("icon", "calendar-dot")
          };
          function EventDetailSectionDetail(_ref) {
            var _calendar$backgroundC, _calendar$name;
            var event = _ref.event;
            var location2 = event.location, recurrenceRule = event.recurrenceRule, attendees = event.attendees, state = event.state, calendarId2 = event.calendarId, body = event.body;
            var calendar = useCalendarById(calendarId2);
            return _("div", {
              className: eventDetailSectionDetail_classNames.sectionDetail
            }, location2 && _("div", {
              className: eventDetailSectionDetail_classNames.detailItem
            }, _("span", {
              className: eventDetailSectionDetail_classNames.locationIcon
            }), _("span", {
              className: eventDetailSectionDetail_classNames.content
            }, _(Template, {
              template: "popupDetailLocation",
              param: event,
              as: "span"
            }))), recurrenceRule && _("div", {
              className: eventDetailSectionDetail_classNames.detailItem
            }, _("span", {
              className: eventDetailSectionDetail_classNames.repeatIcon
            }), _("span", {
              className: eventDetailSectionDetail_classNames.content
            }, _(Template, {
              template: "popupDetailRecurrenceRule",
              param: event,
              as: "span"
            }))), attendees && _("div", {
              className: eventDetailSectionDetail_classNames.detailItemIndent
            }, _("span", {
              className: eventDetailSectionDetail_classNames.userIcon
            }), _("span", {
              className: eventDetailSectionDetail_classNames.content
            }, _(Template, {
              template: "popupDetailAttendees",
              param: event,
              as: "span"
            }))), state && _("div", {
              className: eventDetailSectionDetail_classNames.detailItem
            }, _("span", {
              className: eventDetailSectionDetail_classNames.stateIcon
            }), _("span", {
              className: eventDetailSectionDetail_classNames.content
            }, _(Template, {
              template: "popupDetailState",
              param: event,
              as: "span"
            }))), calendar && _("div", {
              className: eventDetailSectionDetail_classNames.detailItem
            }, _("span", {
              className: eventDetailSectionDetail_classNames.calendarDotIcon,
              style: {
                backgroundColor: (_calendar$backgroundC = calendar === null || calendar === void 0 ? void 0 : calendar.backgroundColor) !== null && _calendar$backgroundC !== void 0 ? _calendar$backgroundC : ""
              }
            }), _("span", {
              className: eventDetailSectionDetail_classNames.content
            }, (_calendar$name = calendar === null || calendar === void 0 ? void 0 : calendar.name) !== null && _calendar$name !== void 0 ? _calendar$name : "")), body && _("div", {
              className: eventDetailSectionDetail_classNames.detailItemSeparate
            }, _("span", {
              className: eventDetailSectionDetail_classNames.content
            }, _(Template, {
              template: "popupDetailBody",
              param: event,
              as: "span"
            }))));
          }
          var eventDetailSectionHeader_classNames = {
            sectionHeader: cls("popup-section", "section-header"),
            content: cls("content"),
            eventTitle: cls("event-title")
          };
          function EventDetailSectionHeader(_ref) {
            var event = _ref.event;
            return _("div", {
              className: eventDetailSectionHeader_classNames.sectionHeader
            }, _("div", {
              className: eventDetailSectionHeader_classNames.eventTitle
            }, _(Template, {
              template: "popupDetailTitle",
              param: event,
              as: "span"
            })), _("div", {
              className: eventDetailSectionHeader_classNames.content
            }, _(Template, {
              template: "popupDetailDate",
              param: event,
              as: "span"
            })));
          }
          var SEE_MORE_POPUP_SLOT_CLASS_NAME = cls("see-more-popup-slot");
          var EVENT_FORM_POPUP_SLOT_CLASS_NAME = cls("event-form-popup-slot");
          var EVENT_DETAIL_POPUP_SLOT_CLASS_NAME = cls("event-detail-popup-slot");
          var HALF_OF_POPUP_ARROW_HEIGHT = 8;
          var BOOLEAN_KEYS_OF_EVENT_MODEL_DATA = ["isPrivate", "isAllday", "isPending", "isFocused", "isVisible", "isReadOnly"];
          var DetailPopupArrowDirection = /* @__PURE__ */ function(DetailPopupArrowDirection2) {
            DetailPopupArrowDirection2["right"] = "right";
            DetailPopupArrowDirection2["left"] = "left";
            return DetailPopupArrowDirection2;
          }({});
          var FormPopupArrowDirection = /* @__PURE__ */ function(FormPopupArrowDirection2) {
            FormPopupArrowDirection2["top"] = "top";
            FormPopupArrowDirection2["bottom"] = "bottom";
            return FormPopupArrowDirection2;
          }({});
          function floatingLayer_slicedToArray(r2, e2) {
            return floatingLayer_arrayWithHoles(r2) || floatingLayer_iterableToArrayLimit(r2, e2) || floatingLayer_unsupportedIterableToArray(r2, e2) || floatingLayer_nonIterableRest();
          }
          function floatingLayer_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function floatingLayer_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return floatingLayer_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? floatingLayer_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function floatingLayer_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function floatingLayer_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function floatingLayer_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          var FloatingLayerContext = G(null);
          function FloatingLayerProvider(_ref) {
            var children = _ref.children;
            var _useDOMNode = useDOMNode(), _useDOMNode2 = floatingLayer_slicedToArray(_useDOMNode, 2), containerRef = _useDOMNode2[0], containerRefCallback = _useDOMNode2[1];
            var _useDOMNode3 = useDOMNode(), _useDOMNode4 = floatingLayer_slicedToArray(_useDOMNode3, 2), seeMorePopupSlotRef = _useDOMNode4[0], seeMorePopupSlotRefCallback = _useDOMNode4[1];
            var _useDOMNode5 = useDOMNode(), _useDOMNode6 = floatingLayer_slicedToArray(_useDOMNode5, 2), formPopupSlotRef = _useDOMNode6[0], formPopupSlotRefCallback = _useDOMNode6[1];
            var _useDOMNode7 = useDOMNode(), _useDOMNode8 = floatingLayer_slicedToArray(_useDOMNode7, 2), detailPopupSlotRef = _useDOMNode8[0], detailPopupSlotRefCallback = _useDOMNode8[1];
            var floatingLayer = {
              container: containerRef,
              seeMorePopupSlot: seeMorePopupSlotRef,
              formPopupSlot: formPopupSlotRef,
              detailPopupSlot: detailPopupSlotRef
            };
            return _(FloatingLayerContext.Provider, {
              value: floatingLayer
            }, children, _("div", {
              ref: containerRefCallback,
              className: cls("floating-layer")
            }, _("div", {
              ref: seeMorePopupSlotRefCallback,
              className: SEE_MORE_POPUP_SLOT_CLASS_NAME
            }), _("div", {
              ref: formPopupSlotRefCallback,
              className: EVENT_FORM_POPUP_SLOT_CLASS_NAME
            }), _("div", {
              ref: detailPopupSlotRefCallback,
              className: EVENT_DETAIL_POPUP_SLOT_CLASS_NAME
            })));
          }
          var useFloatingLayer = function useFloatingLayer2(floatingLayerType) {
            var _floatingLayers$float;
            var floatingLayers = hooks_module_x(FloatingLayerContext);
            if (isUndefined_default()(floatingLayers)) {
              throw new Error("FloatingLayerProvider is not found");
            }
            return (_floatingLayers$float = floatingLayers === null || floatingLayers === void 0 ? void 0 : floatingLayers[floatingLayerType]) !== null && _floatingLayers$float !== void 0 ? _floatingLayers$float : null;
          };
          function isTopOutOfLayout(top, layoutRect, popupRect) {
            return top + popupRect.height > layoutRect.top + layoutRect.height;
          }
          function isLeftOutOfLayout(left, layoutRect, popupRect) {
            return left + popupRect.width > layoutRect.left + layoutRect.width;
          }
          var eventFormPopupParamSelector = function eventFormPopupParamSelector2(state) {
            return state.popup[PopupType.Form];
          };
          var eventDetailPopupParamSelector = function eventDetailPopupParamSelector2(state) {
            return state.popup[PopupType.Detail];
          };
          var seeMorePopupParamSelector = function seeMorePopupParamSelector2(state) {
            return state.popup[PopupType.SeeMore];
          };
          function eventDetailPopup_slicedToArray(r2, e2) {
            return eventDetailPopup_arrayWithHoles(r2) || eventDetailPopup_iterableToArrayLimit(r2, e2) || eventDetailPopup_unsupportedIterableToArray(r2, e2) || eventDetailPopup_nonIterableRest();
          }
          function eventDetailPopup_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function eventDetailPopup_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return eventDetailPopup_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? eventDetailPopup_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function eventDetailPopup_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function eventDetailPopup_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function eventDetailPopup_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          var eventDetailPopup_classNames = {
            popupContainer: cls("popup-container"),
            detailContainer: cls("detail-container"),
            topLine: cls("popup-top-line"),
            border: cls("popup-arrow-border"),
            fill: cls("popup-arrow-fill"),
            sectionButton: cls("popup-section", "section-button"),
            content: cls("content"),
            editIcon: cls("icon", "ic-edit"),
            deleteIcon: cls("icon", "ic-delete"),
            editButton: cls("edit-button"),
            deleteButton: cls("delete-button"),
            verticalLine: cls("vertical-line")
          };
          function calculatePopupPosition(eventRect, layoutRect, popupRect) {
            var top = eventRect.top + eventRect.height / 2 - popupRect.height / 2;
            var left = eventRect.left + eventRect.width;
            if (isTopOutOfLayout(top, layoutRect, popupRect)) {
              top = layoutRect.top + layoutRect.height - popupRect.height;
            }
            if (isLeftOutOfLayout(left, layoutRect, popupRect)) {
              left = eventRect.left - popupRect.width;
            }
            return [Math.max(top, layoutRect.top) + window.scrollY, Math.max(left, layoutRect.left) + window.scrollX];
          }
          function calculatePopupArrowPosition(eventRect, layoutRect, popupRect) {
            var top = eventRect.top + eventRect.height / 2 + window.scrollY;
            var popupLeft = eventRect.left + eventRect.width;
            var isOutOfLayout = popupLeft + popupRect.width > layoutRect.left + layoutRect.width;
            var direction = isOutOfLayout ? DetailPopupArrowDirection.right : DetailPopupArrowDirection.left;
            return {
              top,
              direction
            };
          }
          function EventDetailPopup() {
            var _useStore = useStore(optionsSelector), useFormPopup = _useStore.useFormPopup;
            var popupParams = useStore(eventDetailPopupParamSelector);
            var _ref = popupParams !== null && popupParams !== void 0 ? popupParams : {}, event = _ref.event, eventRect = _ref.eventRect;
            var _useDispatch = useDispatch("popup"), showFormPopup = _useDispatch.showFormPopup, hideDetailPopup = _useDispatch.hideDetailPopup;
            var calendarColor = useCalendarColor(event);
            var layoutContainer = useLayoutContainer();
            var detailPopupSlot = useFloatingLayer("detailPopupSlot");
            var eventBus = useEventBus();
            var popupContainerRef = hooks_module_A(null);
            var _useState = hooks_module_h({}), _useState2 = eventDetailPopup_slicedToArray(_useState, 2), style = _useState2[0], setStyle = _useState2[1];
            var _useState3 = hooks_module_h(0), _useState4 = eventDetailPopup_slicedToArray(_useState3, 2), arrowTop = _useState4[0], setArrowTop = _useState4[1];
            var _useState5 = hooks_module_h(DetailPopupArrowDirection.left), _useState6 = eventDetailPopup_slicedToArray(_useState5, 2), arrowDirection = _useState6[0], setArrowDirection = _useState6[1];
            var popupArrowClassName = hooks_module_T(function() {
              var right = arrowDirection === DetailPopupArrowDirection.right;
              var left = arrowDirection === DetailPopupArrowDirection.left;
              return cls("popup-arrow", {
                right,
                left
              });
            }, [arrowDirection]);
            hooks_module_(function() {
              if (popupContainerRef.current && eventRect && layoutContainer) {
                var layoutRect = layoutContainer.getBoundingClientRect();
                var popupRect = popupContainerRef.current.getBoundingClientRect();
                var _calculatePopupPositi = calculatePopupPosition(eventRect, layoutRect, popupRect), _calculatePopupPositi2 = eventDetailPopup_slicedToArray(_calculatePopupPositi, 2), top = _calculatePopupPositi2[0], left = _calculatePopupPositi2[1];
                var _calculatePopupArrowP = calculatePopupArrowPosition(eventRect, layoutRect, popupRect), arrowTopPosition = _calculatePopupArrowP.top, direction = _calculatePopupArrowP.direction;
                setStyle({
                  top,
                  left
                });
                setArrowTop(arrowTopPosition - top - HALF_OF_POPUP_ARROW_HEIGHT);
                setArrowDirection(direction);
              }
            }, [eventRect, layoutContainer]);
            if (type_isNil(event) || type_isNil(eventRect) || type_isNil(detailPopupSlot)) {
              return null;
            }
            var _event$title = event.title, title = _event$title === void 0 ? "" : _event$title, _event$isAllday = event.isAllday, isAllday2 = _event$isAllday === void 0 ? false : _event$isAllday, _event$start = event.start, start = _event$start === void 0 ? new date_TZDate() : _event$start, _event$end = event.end, end = _event$end === void 0 ? new date_TZDate() : _event$end, location2 = event.location, state = event.state, isReadOnly = event.isReadOnly, isPrivate = event.isPrivate;
            var popupArrowPointPosition = {
              top: eventRect.top + eventRect.height / 2,
              left: eventRect.left + eventRect.width / 2
            };
            var onClickEditButton = function onClickEditButton2() {
              if (useFormPopup) {
                showFormPopup({
                  isCreationPopup: false,
                  event,
                  title,
                  location: location2,
                  start,
                  end,
                  isAllday: isAllday2,
                  isPrivate,
                  eventState: state,
                  popupArrowPointPosition
                });
              } else {
                eventBus.fire("beforeUpdateEvent", {
                  event: event.toEventObject(),
                  changes: {}
                });
              }
            };
            var onClickDeleteButton = function onClickDeleteButton2() {
              eventBus.fire("beforeDeleteEvent", event.toEventObject());
              hideDetailPopup();
            };
            return compat_module_j(_("div", {
              role: "dialog",
              className: eventDetailPopup_classNames.popupContainer,
              ref: popupContainerRef,
              style
            }, _("div", {
              className: eventDetailPopup_classNames.detailContainer
            }, _(EventDetailSectionHeader, {
              event
            }), _(EventDetailSectionDetail, {
              event
            }), !isReadOnly && _("div", {
              className: eventDetailPopup_classNames.sectionButton
            }, _("button", {
              type: "button",
              className: eventDetailPopup_classNames.editButton,
              onClick: onClickEditButton
            }, _("span", {
              className: eventDetailPopup_classNames.editIcon
            }), _("span", {
              className: eventDetailPopup_classNames.content
            }, _(Template, {
              template: "popupEdit",
              as: "span"
            }))), _("div", {
              className: eventDetailPopup_classNames.verticalLine
            }), _("button", {
              type: "button",
              className: eventDetailPopup_classNames.deleteButton,
              onClick: onClickDeleteButton
            }, _("span", {
              className: eventDetailPopup_classNames.deleteIcon
            }), _("span", {
              className: eventDetailPopup_classNames.content
            }, _(Template, {
              template: "popupDelete",
              as: "span"
            }))))), _("div", {
              className: eventDetailPopup_classNames.topLine,
              style: {
                backgroundColor: calendarColor.backgroundColor
              }
            }), _("div", {
              className: popupArrowClassName
            }, _("div", {
              className: eventDetailPopup_classNames.border,
              style: {
                top: arrowTop
              }
            }, _("div", {
              className: eventDetailPopup_classNames.fill
            })))), detailPopupSlot);
          }
          var calendarDropdownMenu_classNames = {
            dropdownMenu: cls("dropdown-menu"),
            dropdownMenuItem: cls("dropdown-menu-item"),
            dotIcon: cls("icon", "dot"),
            content: cls("content")
          };
          function DropdownMenuItem(_ref) {
            var index = _ref.index, name = _ref.name, backgroundColor = _ref.backgroundColor, _onClick = _ref.onClick;
            return _("li", {
              className: calendarDropdownMenu_classNames.dropdownMenuItem,
              onClick: function onClick(e2) {
                return _onClick(e2, index);
              }
            }, _("span", {
              className: calendarDropdownMenu_classNames.dotIcon,
              style: {
                backgroundColor
              }
            }), _("span", {
              className: calendarDropdownMenu_classNames.content
            }, name));
          }
          function CalendarDropdownMenu(_ref2) {
            var calendars = _ref2.calendars, setOpened = _ref2.setOpened, onChangeIndex = _ref2.onChangeIndex;
            var handleDropdownMenuItemClick = function handleDropdownMenuItemClick2(e2, index) {
              e2.stopPropagation();
              setOpened(false);
              onChangeIndex(index);
            };
            return _("ul", {
              className: calendarDropdownMenu_classNames.dropdownMenu
            }, calendars.map(function(_ref3, index) {
              var name = _ref3.name, _ref3$backgroundColor = _ref3.backgroundColor, backgroundColor = _ref3$backgroundColor === void 0 ? "000" : _ref3$backgroundColor;
              return _(DropdownMenuItem, {
                key: "dropdown-".concat(name, "-").concat(index),
                index,
                name,
                backgroundColor,
                onClick: handleDropdownMenuItemClick
              });
            }));
          }
          function popupSection_toConsumableArray(r2) {
            return popupSection_arrayWithoutHoles(r2) || popupSection_iterableToArray(r2) || popupSection_unsupportedIterableToArray(r2) || popupSection_nonIterableSpread();
          }
          function popupSection_nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function popupSection_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return popupSection_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? popupSection_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function popupSection_iterableToArray(r2) {
            if ("undefined" != typeof Symbol && null != r2[Symbol.iterator] || null != r2["@@iterator"])
              return Array.from(r2);
          }
          function popupSection_arrayWithoutHoles(r2) {
            if (Array.isArray(r2))
              return popupSection_arrayLikeToArray(r2);
          }
          function popupSection_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function PopupSection(_ref) {
            var children = _ref.children, _ref$classNames = _ref.classNames, classNames2 = _ref$classNames === void 0 ? [] : _ref$classNames, _ref$onClick = _ref.onClick, onClick = _ref$onClick === void 0 ? noop : _ref$onClick;
            return _("div", {
              className: cls.apply(void 0, ["popup-section"].concat(popupSection_toConsumableArray(classNames2))),
              onClick
            }, children);
          }
          function useDropdownState_slicedToArray(r2, e2) {
            return useDropdownState_arrayWithHoles(r2) || useDropdownState_iterableToArrayLimit(r2, e2) || useDropdownState_unsupportedIterableToArray(r2, e2) || useDropdownState_nonIterableRest();
          }
          function useDropdownState_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function useDropdownState_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return useDropdownState_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? useDropdownState_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function useDropdownState_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function useDropdownState_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function useDropdownState_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function useDropdownState() {
            var _useState = hooks_module_h(false), _useState2 = useDropdownState_slicedToArray(_useState, 2), isOpened = _useState2[0], setOpened = _useState2[1];
            var toggleDropdown = function toggleDropdown2() {
              return setOpened(function(prev) {
                return !prev;
              });
            };
            return {
              isOpened,
              setOpened,
              toggleDropdown
            };
          }
          function useFormState_typeof(o2) {
            "@babel/helpers - typeof";
            return useFormState_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, useFormState_typeof(o2);
          }
          function useFormState_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function useFormState_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? useFormState_ownKeys(Object(t), true).forEach(function(r3) {
                useFormState_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : useFormState_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function useFormState_defineProperty(e2, r2, t) {
            return (r2 = useFormState_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function useFormState_toPropertyKey(t) {
            var i2 = useFormState_toPrimitive(t, "string");
            return "symbol" == useFormState_typeof(i2) ? i2 : i2 + "";
          }
          function useFormState_toPrimitive(t, r2) {
            if ("object" != useFormState_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != useFormState_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          var FormStateActionType = /* @__PURE__ */ function(FormStateActionType2) {
            FormStateActionType2["init"] = "init";
            FormStateActionType2["setCalendarId"] = "setCalendarId";
            FormStateActionType2["setTitle"] = "setTitle";
            FormStateActionType2["setLocation"] = "setLocation";
            FormStateActionType2["setPrivate"] = "setPrivate";
            FormStateActionType2["setAllday"] = "setAllday";
            FormStateActionType2["setState"] = "setState";
            FormStateActionType2["reset"] = "reset";
            return FormStateActionType2;
          }({});
          var defaultFormState = {
            title: "",
            location: "",
            isAllday: false,
            isPrivate: false,
            state: "Busy"
          };
          function formStateReducer(state, action) {
            switch (action.type) {
              case FormStateActionType.init:
                return useFormState_objectSpread(useFormState_objectSpread({}, defaultFormState), action.event);
              case FormStateActionType.setCalendarId:
                return useFormState_objectSpread(useFormState_objectSpread({}, state), {}, {
                  calendarId: action.calendarId
                });
              case FormStateActionType.setTitle:
                return useFormState_objectSpread(useFormState_objectSpread({}, state), {}, {
                  title: action.title
                });
              case FormStateActionType.setLocation:
                return useFormState_objectSpread(useFormState_objectSpread({}, state), {}, {
                  location: action.location
                });
              case FormStateActionType.setPrivate:
                return useFormState_objectSpread(useFormState_objectSpread({}, state), {}, {
                  isPrivate: action.isPrivate
                });
              case FormStateActionType.setAllday:
                return useFormState_objectSpread(useFormState_objectSpread({}, state), {}, {
                  isAllday: action.isAllday
                });
              case FormStateActionType.setState:
                return useFormState_objectSpread(useFormState_objectSpread({}, state), {}, {
                  state: action.state
                });
              case FormStateActionType.reset:
                return useFormState_objectSpread(useFormState_objectSpread({}, state), defaultFormState);
              default:
                return state;
            }
          }
          function useFormState(initCalendarId) {
            return hooks_module_p(formStateReducer, useFormState_objectSpread({
              calendarId: initCalendarId
            }, defaultFormState));
          }
          var calendarSelector_classNames = {
            popupSection: ["dropdown-section", "calendar-section"],
            popupSectionItem: cls("popup-section-item", "popup-button"),
            dotIcon: cls("icon", "dot"),
            content: cls("content", "event-calendar")
          };
          function CalendarSelector(_ref) {
            var calendars = _ref.calendars, selectedCalendarId = _ref.selectedCalendarId, formStateDispatch = _ref.formStateDispatch;
            var _useDropdownState = useDropdownState(), isOpened = _useDropdownState.isOpened, setOpened = _useDropdownState.setOpened, toggleDropdown = _useDropdownState.toggleDropdown;
            var selectedCalendar = calendars.find(function(calendar) {
              return calendar.id === selectedCalendarId;
            });
            var _ref2 = selectedCalendar !== null && selectedCalendar !== void 0 ? selectedCalendar : {}, _ref2$backgroundColor = _ref2.backgroundColor, backgroundColor = _ref2$backgroundColor === void 0 ? "" : _ref2$backgroundColor, _ref2$name = _ref2.name, name = _ref2$name === void 0 ? "" : _ref2$name;
            var changeIndex = function changeIndex2(index) {
              return formStateDispatch({
                type: FormStateActionType.setCalendarId,
                calendarId: calendars[index].id
              });
            };
            return _(PopupSection, {
              onClick: toggleDropdown,
              classNames: calendarSelector_classNames.popupSection
            }, _("button", {
              type: "button",
              className: calendarSelector_classNames.popupSectionItem
            }, _("span", {
              className: calendarSelector_classNames.dotIcon,
              style: {
                backgroundColor
              }
            }), _("span", {
              className: calendarSelector_classNames.content
            }, name), _("span", {
              className: cls("icon", "ic-dropdown-arrow", {
                open: isOpened
              })
            })), isOpened && _(CalendarDropdownMenu, {
              calendars,
              setOpened,
              onChangeIndex: changeIndex
            }));
          }
          var closePopupButton_classNames = {
            closeButton: cls("popup-button", "popup-close"),
            closeIcon: cls("icon", "ic-close")
          };
          function ClosePopupButton(_ref) {
            var type = _ref.type, close = _ref.close;
            var _useDispatch = useDispatch("popup"), hideAllPopup = _useDispatch.hideAllPopup;
            var onClickHandler = function onClickHandler2() {
              hideAllPopup();
              if (isFunction(close)) {
                close();
              }
            };
            return _("button", {
              type: "button",
              className: closePopupButton_classNames.closeButton,
              onClick: onClickHandler
            }, type === "moreEvents" ? _(Template, {
              template: "monthMoreClose"
            }) : _("i", {
              className: closePopupButton_classNames.closeIcon
            }));
          }
          var confirmPopupButton_classNames = {
            confirmButton: cls("popup-button", "popup-confirm")
          };
          function ConfirmPopupButton(_ref) {
            var children = _ref.children;
            return _("button", {
              type: "submit",
              className: confirmPopupButton_classNames.confirmButton
            }, _("span", null, children));
          }
          var external_commonjs_tui_date_picker_commonjs2_tui_date_picker_import_tui_date_picker_amd_tui_date_picker_root_tui_DatePicker_ = __webpack_require__(411);
          var external_commonjs_tui_date_picker_commonjs2_tui_date_picker_import_tui_date_picker_amd_tui_date_picker_root_tui_DatePicker_default = /* @__PURE__ */ __webpack_require__.n(external_commonjs_tui_date_picker_commonjs2_tui_date_picker_import_tui_date_picker_amd_tui_date_picker_root_tui_DatePicker_);
          function useStringOnlyTemplate(_ref) {
            var template = _ref.template, model = _ref.model, _ref$defaultValue = _ref.defaultValue, defaultValue = _ref$defaultValue === void 0 ? "" : _ref$defaultValue;
            var templates2 = useStore(templateSelector);
            var templateFunc = templates2[template];
            if (type_isNil(templateFunc)) {
              return defaultValue;
            }
            var result = templateFunc(model);
            if (!isString_default()(result)) {
              result = defaultValue;
            }
            return result;
          }
          var dateSelector_classNames = {
            datePickerContainer: cls("datepicker-container"),
            datePicker: cls("popup-section-item", "popup-date-picker"),
            allday: cls("popup-section-item", "popup-section-allday"),
            dateIcon: cls("icon", "ic-date"),
            dateDash: cls("popup-date-dash"),
            content: cls("content")
          };
          var DateSelector = compat_module_k(function DateSelector2(_ref, ref) {
            var start = _ref.start, end = _ref.end, _ref$isAllday = _ref.isAllday, isAllday2 = _ref$isAllday === void 0 ? false : _ref$isAllday, formStateDispatch = _ref.formStateDispatch;
            var _useStore = useStore(optionsSelector), usageStatistics = _useStore.usageStatistics;
            var startPickerContainerRef = hooks_module_A(null);
            var startPickerInputRef = hooks_module_A(null);
            var endPickerContainerRef = hooks_module_A(null);
            var endPickerInputRef = hooks_module_A(null);
            var startDatePlaceholder = useStringOnlyTemplate({
              template: "startDatePlaceholder",
              defaultValue: "Start Date"
            });
            var endDatePlaceholder = useStringOnlyTemplate({
              template: "endDatePlaceholder",
              defaultValue: "End Date"
            });
            var toggleAllday = function toggleAllday2() {
              return formStateDispatch({
                type: FormStateActionType.setAllday,
                isAllday: !isAllday2
              });
            };
            hooks_module_y(function() {
              if (startPickerContainerRef.current && startPickerInputRef.current && endPickerContainerRef.current && endPickerInputRef.current) {
                var startDate = new date_TZDate(start);
                var endDate = new date_TZDate(end);
                if (isAllday2) {
                  startDate.setHours(12, 0, 0);
                  endDate.setHours(13, 0, 0);
                }
                ref.current = external_commonjs_tui_date_picker_commonjs2_tui_date_picker_import_tui_date_picker_amd_tui_date_picker_root_tui_DatePicker_default().createRangePicker({
                  startpicker: {
                    date: startDate.toDate(),
                    input: startPickerInputRef.current,
                    container: startPickerContainerRef.current
                  },
                  endpicker: {
                    date: endDate.toDate(),
                    input: endPickerInputRef.current,
                    container: endPickerContainerRef.current
                  },
                  format: isAllday2 ? "yyyy-MM-dd" : "yyyy-MM-dd HH:mm",
                  timePicker: isAllday2 ? false : {
                    showMeridiem: false,
                    usageStatistics
                  },
                  usageStatistics
                });
              }
            }, [start, end, isAllday2, usageStatistics, ref]);
            return _(PopupSection, null, _("div", {
              className: dateSelector_classNames.datePicker
            }, _("span", {
              className: dateSelector_classNames.dateIcon
            }), _("input", {
              name: "start",
              className: dateSelector_classNames.content,
              placeholder: startDatePlaceholder,
              ref: startPickerInputRef
            }), _("div", {
              className: dateSelector_classNames.datePickerContainer,
              ref: startPickerContainerRef
            })), _("span", {
              className: dateSelector_classNames.dateDash
            }, "-"), _("div", {
              className: dateSelector_classNames.datePicker
            }, _("span", {
              className: dateSelector_classNames.dateIcon
            }), _("input", {
              name: "end",
              className: dateSelector_classNames.content,
              placeholder: endDatePlaceholder,
              ref: endPickerInputRef
            }), _("div", {
              className: dateSelector_classNames.datePickerContainer,
              ref: endPickerContainerRef
            })), _("div", {
              className: dateSelector_classNames.allday,
              onClick: toggleAllday
            }, _("span", {
              className: cls("icon", {
                "ic-checkbox-normal": !isAllday2,
                "ic-checkbox-checked": isAllday2
              })
            }), _("span", {
              className: dateSelector_classNames.content
            }, _(Template, {
              template: "popupIsAllday"
            })), _("input", {
              name: "isAllday",
              type: "checkbox",
              className: cls("hidden-input"),
              value: isAllday2 ? "true" : "false",
              checked: isAllday2
            })));
          });
          var EVENT_STATES = ["Busy", "Free"];
          var stateDropdownMenu_classNames = {
            popupSectionItem: cls("popup-section-item", "dropdown-menu-item"),
            dropdownMenu: cls("dropdown-menu"),
            icon: cls("icon"),
            content: cls("content")
          };
          function StateDropdownMenu(_ref) {
            var setOpened = _ref.setOpened, setEventState = _ref.setEventState;
            var onClickDropdown = function onClickDropdown2(e2, state) {
              e2.stopPropagation();
              setOpened(false);
              setEventState(state);
            };
            return _("ul", {
              className: stateDropdownMenu_classNames.dropdownMenu
            }, EVENT_STATES.map(function(state) {
              return _("li", {
                key: state,
                className: stateDropdownMenu_classNames.popupSectionItem,
                onClick: function onClick(e2) {
                  return onClickDropdown(e2, state);
                }
              }, _("span", {
                className: stateDropdownMenu_classNames.icon
              }), _("span", {
                className: stateDropdownMenu_classNames.content
              }, state === "Busy" ? _(Template, {
                template: "popupStateBusy"
              }) : _(Template, {
                template: "popupStateFree"
              })));
            }));
          }
          var eventStateSelector_classNames = {
            popupSection: ["dropdown-section", "state-section"],
            popupSectionItem: cls("popup-section-item", "popup-button"),
            stateIcon: cls("icon", "ic-state"),
            arrowIcon: cls("icon", "ic-dropdown-arrow"),
            content: cls("content", "event-state")
          };
          function EventStateSelector(_ref) {
            var _ref$eventState = _ref.eventState, eventState = _ref$eventState === void 0 ? "Busy" : _ref$eventState, formStateDispatch = _ref.formStateDispatch;
            var _useDropdownState = useDropdownState(), isOpened = _useDropdownState.isOpened, setOpened = _useDropdownState.setOpened, toggleDropdown = _useDropdownState.toggleDropdown;
            var handleChangeEventState = function handleChangeEventState2(state) {
              return formStateDispatch({
                type: FormStateActionType.setState,
                state
              });
            };
            return _(PopupSection, {
              onClick: toggleDropdown,
              classNames: eventStateSelector_classNames.popupSection
            }, _("button", {
              type: "button",
              className: eventStateSelector_classNames.popupSectionItem
            }, _("span", {
              className: eventStateSelector_classNames.stateIcon
            }), _("span", {
              className: eventStateSelector_classNames.content
            }, eventState === "Busy" ? _(Template, {
              template: "popupStateBusy"
            }) : _(Template, {
              template: "popupStateFree"
            })), _("span", {
              className: eventStateSelector_classNames.arrowIcon
            })), isOpened && _(StateDropdownMenu, {
              setOpened,
              setEventState: handleChangeEventState
            }));
          }
          var locationInputBox_classNames = {
            popupSectionItem: cls("popup-section-item", "popup-section-location"),
            locationIcon: cls("icon", "ic-location"),
            content: cls("content")
          };
          function LocationInputBox(_ref) {
            var location2 = _ref.location, formStateDispatch = _ref.formStateDispatch;
            var locationPlaceholder = useStringOnlyTemplate({
              template: "locationPlaceholder",
              defaultValue: "Location"
            });
            var handleLocationChange = function handleLocationChange2(e2) {
              formStateDispatch({
                type: FormStateActionType.setLocation,
                location: e2.currentTarget.value
              });
            };
            return _(PopupSection, null, _("div", {
              className: locationInputBox_classNames.popupSectionItem
            }, _("span", {
              className: locationInputBox_classNames.locationIcon
            }), _("input", {
              name: "location",
              className: locationInputBox_classNames.content,
              placeholder: locationPlaceholder,
              value: location2,
              onChange: handleLocationChange
            })));
          }
          var titleInputBox_classNames = {
            popupSectionItem: cls("popup-section-item", "popup-section-title"),
            privateButton: cls("popup-section-item", "popup-section-private", "popup-button"),
            titleIcon: cls("icon", "ic-title"),
            content: cls("content")
          };
          function TitleInputBox(_ref) {
            var title = _ref.title, _ref$isPrivate = _ref.isPrivate, isPrivate = _ref$isPrivate === void 0 ? false : _ref$isPrivate, formStateDispatch = _ref.formStateDispatch;
            var titlePlaceholder = useStringOnlyTemplate({
              template: "titlePlaceholder",
              defaultValue: "Subject"
            });
            var togglePrivate = function togglePrivate2() {
              return formStateDispatch({
                type: FormStateActionType.setPrivate,
                isPrivate: !isPrivate
              });
            };
            var handleInputChange = function handleInputChange2(e2) {
              formStateDispatch({
                type: FormStateActionType.setTitle,
                title: e2.currentTarget.value
              });
            };
            return _(PopupSection, null, _("div", {
              className: titleInputBox_classNames.popupSectionItem
            }, _("span", {
              className: titleInputBox_classNames.titleIcon
            }), _("input", {
              name: "title",
              className: titleInputBox_classNames.content,
              placeholder: titlePlaceholder,
              value: title,
              onChange: handleInputChange,
              required: true
            })), _("button", {
              type: "button",
              className: titleInputBox_classNames.privateButton,
              onClick: togglePrivate
            }, _("span", {
              className: cls("icon", {
                "ic-private": isPrivate,
                "ic-public": !isPrivate
              })
            }), _("input", {
              name: "isPrivate",
              type: "checkbox",
              className: cls("hidden-input"),
              value: isPrivate ? "true" : "false",
              checked: isPrivate
            })));
          }
          function eventFormPopup_typeof(o2) {
            "@babel/helpers - typeof";
            return eventFormPopup_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, eventFormPopup_typeof(o2);
          }
          function eventFormPopup_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function eventFormPopup_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? eventFormPopup_ownKeys(Object(t), true).forEach(function(r3) {
                eventFormPopup_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : eventFormPopup_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function eventFormPopup_defineProperty(e2, r2, t) {
            return (r2 = eventFormPopup_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function eventFormPopup_toPropertyKey(t) {
            var i2 = eventFormPopup_toPrimitive(t, "string");
            return "symbol" == eventFormPopup_typeof(i2) ? i2 : i2 + "";
          }
          function eventFormPopup_toPrimitive(t, r2) {
            if ("object" != eventFormPopup_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != eventFormPopup_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function eventFormPopup_slicedToArray(r2, e2) {
            return eventFormPopup_arrayWithHoles(r2) || eventFormPopup_iterableToArrayLimit(r2, e2) || eventFormPopup_unsupportedIterableToArray(r2, e2) || eventFormPopup_nonIterableRest();
          }
          function eventFormPopup_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function eventFormPopup_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return eventFormPopup_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? eventFormPopup_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function eventFormPopup_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function eventFormPopup_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function eventFormPopup_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          var eventFormPopup_classNames = {
            popupContainer: cls("popup-container"),
            formContainer: cls("form-container"),
            popupArrowBorder: cls("popup-arrow-border"),
            popupArrowFill: cls("popup-arrow-fill")
          };
          function eventFormPopup_calculatePopupPosition(popupArrowPointPosition, layoutRect, popupRect) {
            var top = popupArrowPointPosition.top - popupRect.height - HALF_OF_POPUP_ARROW_HEIGHT;
            var left = popupArrowPointPosition.left - popupRect.width / 2;
            var direction = FormPopupArrowDirection.bottom;
            if (top < layoutRect.top) {
              direction = FormPopupArrowDirection.top;
              top = popupArrowPointPosition.top + HALF_OF_POPUP_ARROW_HEIGHT;
            }
            if (isTopOutOfLayout(top, layoutRect, popupRect)) {
              top = layoutRect.top + layoutRect.height - popupRect.height;
            }
            if (isLeftOutOfLayout(left, layoutRect, popupRect)) {
              left = layoutRect.left + layoutRect.width - popupRect.width;
            }
            return {
              top: top + window.scrollY,
              left: Math.max(left, layoutRect.left) + window.scrollX,
              direction
            };
          }
          function isBooleanKey(key) {
            return BOOLEAN_KEYS_OF_EVENT_MODEL_DATA.indexOf(key) !== -1;
          }
          function getChanges(event, eventObject) {
            return Object.entries(eventObject).reduce(function(changes, _ref) {
              var _ref2 = eventFormPopup_slicedToArray(_ref, 2), key = _ref2[0], value = _ref2[1];
              var eventObjectKey = key;
              if (event[eventObjectKey] instanceof date_TZDate) {
                if (compare(event[eventObjectKey], value) !== 0) {
                  changes[eventObjectKey] = value;
                }
              } else if (event[eventObjectKey] !== value) {
                changes[eventObjectKey] = value;
              }
              return changes;
            }, {});
          }
          function EventFormPopup() {
            var _calendars$;
            var _useStore = useStore(calendarSelector), calendars = _useStore.calendars;
            var _useDispatch = useDispatch("popup"), hideAllPopup = _useDispatch.hideAllPopup;
            var popupParams = useStore(eventFormPopupParamSelector);
            var _ref3 = popupParams !== null && popupParams !== void 0 ? popupParams : {}, start = _ref3.start, end = _ref3.end, popupArrowPointPosition = _ref3.popupArrowPointPosition, close = _ref3.close, isCreationPopup = _ref3.isCreationPopup, event = _ref3.event;
            var eventBus = useEventBus();
            var formPopupSlot = useFloatingLayer("formPopupSlot");
            var _useFormState = useFormState((_calendars$ = calendars[0]) === null || _calendars$ === void 0 ? void 0 : _calendars$.id), _useFormState2 = eventFormPopup_slicedToArray(_useFormState, 2), formState = _useFormState2[0], formStateDispatch = _useFormState2[1];
            var datePickerRef = hooks_module_A(null);
            var popupContainerRef = hooks_module_A(null);
            var _useState = hooks_module_h({}), _useState2 = eventFormPopup_slicedToArray(_useState, 2), style = _useState2[0], setStyle = _useState2[1];
            var _useState3 = hooks_module_h(0), _useState4 = eventFormPopup_slicedToArray(_useState3, 2), arrowLeft = _useState4[0], setArrowLeft = _useState4[1];
            var _useState5 = hooks_module_h(FormPopupArrowDirection.bottom), _useState6 = eventFormPopup_slicedToArray(_useState5, 2), arrowDirection = _useState6[0], setArrowDirection = _useState6[1];
            var layoutContainer = useLayoutContainer();
            var popupArrowClassName = hooks_module_T(function() {
              var top = arrowDirection === FormPopupArrowDirection.top;
              var bottom = arrowDirection === FormPopupArrowDirection.bottom;
              return cls("popup-arrow", {
                top,
                bottom
              });
            }, [arrowDirection]);
            hooks_module_(function() {
              if (popupContainerRef.current && popupArrowPointPosition && layoutContainer) {
                var layoutRect = layoutContainer.getBoundingClientRect();
                var popupRect = popupContainerRef.current.getBoundingClientRect();
                var _calculatePopupPositi = eventFormPopup_calculatePopupPosition(popupArrowPointPosition, layoutRect, popupRect), top = _calculatePopupPositi.top, left = _calculatePopupPositi.left, direction = _calculatePopupPositi.direction;
                var arrowLeftPosition = popupArrowPointPosition.left - left;
                setStyle({
                  left,
                  top
                });
                setArrowLeft(arrowLeftPosition);
                setArrowDirection(direction);
              }
            }, [layoutContainer, popupArrowPointPosition]);
            hooks_module_y(function() {
              if (isPresent(popupParams) && isPresent(event)) {
                formStateDispatch({
                  type: FormStateActionType.init,
                  event: {
                    title: popupParams.title,
                    location: popupParams.location,
                    isAllday: popupParams.isAllday,
                    isPrivate: popupParams.isPrivate,
                    calendarId: event.calendarId,
                    state: popupParams.eventState
                  }
                });
              }
            }, [calendars, event, formStateDispatch, popupParams]);
            hooks_module_y(function() {
              if (type_isNil(popupParams)) {
                formStateDispatch({
                  type: FormStateActionType.reset
                });
              }
            }, [formStateDispatch, popupParams]);
            if (type_isNil(start) || type_isNil(end) || type_isNil(formPopupSlot)) {
              return null;
            }
            var onSubmit = function onSubmit2(e2) {
              var _datePickerRef$curren, _datePickerRef$curren2;
              e2.preventDefault();
              var formData = new FormData(e2.target);
              var eventData = eventFormPopup_objectSpread({}, formState);
              formData.forEach(function(data, key) {
                eventData[key] = isBooleanKey(key) ? data === "true" : data;
              });
              eventData.start = new date_TZDate((_datePickerRef$curren = datePickerRef.current) === null || _datePickerRef$curren === void 0 ? void 0 : _datePickerRef$curren.getStartDate());
              eventData.end = new date_TZDate((_datePickerRef$curren2 = datePickerRef.current) === null || _datePickerRef$curren2 === void 0 ? void 0 : _datePickerRef$curren2.getEndDate());
              if (isCreationPopup) {
                eventBus.fire("beforeCreateEvent", eventData);
              } else if (event) {
                var changes = getChanges(event, eventData);
                eventBus.fire("beforeUpdateEvent", {
                  event: event.toEventObject(),
                  changes
                });
              }
              hideAllPopup();
            };
            return compat_module_j(_("div", {
              role: "dialog",
              className: eventFormPopup_classNames.popupContainer,
              ref: popupContainerRef,
              style
            }, _("form", {
              onSubmit
            }, _("div", {
              className: eventFormPopup_classNames.formContainer
            }, calendars !== null && calendars !== void 0 && calendars.length ? _(CalendarSelector, {
              selectedCalendarId: formState.calendarId,
              calendars,
              formStateDispatch
            }) : _(PopupSection, null), _(TitleInputBox, {
              title: formState.title,
              isPrivate: formState.isPrivate,
              formStateDispatch
            }), _(LocationInputBox, {
              location: formState.location,
              formStateDispatch
            }), _(DateSelector, {
              start,
              end,
              isAllday: formState.isAllday,
              formStateDispatch,
              ref: datePickerRef
            }), _(EventStateSelector, {
              eventState: formState.state,
              formStateDispatch
            }), _(ClosePopupButton, {
              type: "form",
              close
            }), _(PopupSection, null, _(ConfirmPopupButton, null, isCreationPopup ? _(Template, {
              template: "popupSave"
            }) : _(Template, {
              template: "popupUpdate"
            })))), _("div", {
              className: popupArrowClassName
            }, _("div", {
              className: eventFormPopup_classNames.popupArrowBorder,
              style: {
                left: arrowLeft
              }
            }, _("div", {
              className: eventFormPopup_classNames.popupArrowFill
            }))))), formPopupSlot);
          }
          function shownPopupParamSelector(state) {
            return Object.values(state.popup).find(function(popup) {
              return isPresent(popup);
            });
          }
          function PopupOverlay() {
            var shownPopupParam = useStore(shownPopupParamSelector);
            var _useDispatch = useDispatch("popup"), hideAllPopup = _useDispatch.hideAllPopup;
            var isPopupShown = isPresent(shownPopupParam);
            var onClick = function onClick2(ev) {
              var _shownPopupParam$clos;
              ev.stopPropagation();
              shownPopupParam === null || shownPopupParam === void 0 || (_shownPopupParam$clos = shownPopupParam.close) === null || _shownPopupParam$clos === void 0 || _shownPopupParam$clos.call(shownPopupParam);
              hideAllPopup();
            };
            return _("div", {
              className: cls("popup-overlay"),
              style: {
                display: isPopupShown ? "block" : "none"
              },
              onClick
            });
          }
          var seeMoreEventsPopup_classNames = {
            container: cls("see-more-container"),
            seeMore: cls("see-more"),
            header: cls("see-more-header"),
            list: cls("month-more-list")
          };
          function SeeMoreEventsPopup() {
            var popupParams = useStore(seeMorePopupParamSelector);
            var _ref = popupParams !== null && popupParams !== void 0 ? popupParams : {}, date2 = _ref.date, _ref$events = _ref.events, events = _ref$events === void 0 ? [] : _ref$events, popupPosition = _ref.popupPosition;
            var _useMonthTheme = useMonthTheme(), moreView = _useMonthTheme.moreView, moreViewTitle = _useMonthTheme.moreViewTitle;
            var seeMorePopupSlot = useFloatingLayer("seeMorePopupSlot");
            var eventBus = useEventBus();
            var moreEventsPopupContainerRef = hooks_module_A(null);
            var isHidden = type_isNil(date2) || type_isNil(popupPosition) || type_isNil(seeMorePopupSlot);
            hooks_module_y(function() {
              if (!isHidden && moreEventsPopupContainerRef.current) {
                eventBus.fire("clickMoreEventsBtn", {
                  date: date2.toDate(),
                  target: moreEventsPopupContainerRef.current
                });
              }
            }, [date2, eventBus, isHidden]);
            if (isHidden) {
              return null;
            }
            var style = {
              height: MONTH_MORE_VIEW_HEADER_HEIGHT,
              marginBottom: MONTH_MORE_VIEW_HEADER_MARGIN_BOTTOM,
              padding: MONTH_MORE_VIEW_HEADER_PADDING,
              backgroundColor: moreViewTitle.backgroundColor
            };
            var moreTitle = {
              ymd: datetime_toFormat(date2, "YYYY-MM-DD"),
              day: date2.getDay(),
              date: date2.getDate().toString().padStart(2, "0")
            };
            var moreViewListStyle = {
              height: "calc(100% - ".concat(MONTH_MORE_VIEW_HEADER_HEIGHT + MONTH_MORE_VIEW_HEADER_MARGIN_BOTTOM + MONTH_MORE_VIEW_HEADER_PADDING_TOP, "px)")
            };
            return compat_module_j(_("div", {
              role: "dialog",
              className: seeMoreEventsPopup_classNames.container,
              style: popupPosition,
              ref: moreEventsPopupContainerRef
            }, _("div", {
              className: seeMoreEventsPopup_classNames.seeMore,
              style: moreView
            }, _("div", {
              className: seeMoreEventsPopup_classNames.header,
              style
            }, _(Template, {
              template: "monthMoreTitleDate",
              param: moreTitle
            }), _(ClosePopupButton, {
              type: "moreEvents"
            })), _("div", {
              className: seeMoreEventsPopup_classNames.list,
              style: moreViewListStyle
            }, events.map(function(uiModel) {
              return _(HorizontalEvent, {
                key: "see-more-event-item-".concat(uiModel.cid()),
                uiModel,
                eventHeight: MONTH_EVENT_HEIGHT,
                headerHeight: MONTH_MORE_VIEW_HEADER_HEIGHT,
                flat: true
              });
            })))), seeMorePopupSlot);
          }
          function layout_typeof(o2) {
            "@babel/helpers - typeof";
            return layout_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, layout_typeof(o2);
          }
          function layout_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function layout_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? layout_ownKeys(Object(t), true).forEach(function(r3) {
                layout_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : layout_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function layout_defineProperty(e2, r2, t) {
            return (r2 = layout_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function layout_toPropertyKey(t) {
            var i2 = layout_toPrimitive(t, "string");
            return "symbol" == layout_typeof(i2) ? i2 : i2 + "";
          }
          function layout_toPrimitive(t, r2) {
            if ("object" != layout_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != layout_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function layout_slicedToArray(r2, e2) {
            return layout_arrayWithHoles(r2) || layout_iterableToArrayLimit(r2, e2) || layout_unsupportedIterableToArray(r2, e2) || layout_nonIterableRest();
          }
          function layout_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function layout_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return layout_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? layout_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function layout_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function layout_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function layout_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function getLayoutStylesFromInfo(width, height) {
            var styles = {
              height: toPercent(100)
            };
            if (width) {
              styles.width = width;
            }
            if (height) {
              styles.height = height;
            }
            return styles;
          }
          function Layout(_ref) {
            var children = _ref.children, width = _ref.width, height = _ref.height, _ref$className = _ref.className, className2 = _ref$className === void 0 ? "" : _ref$className, _ref$autoAdjustPanels = _ref.autoAdjustPanels, autoAdjustPanels = _ref$autoAdjustPanels === void 0 ? false : _ref$autoAdjustPanels;
            var _useTheme = useTheme(commonThemeSelector), backgroundColor = _useTheme.backgroundColor;
            var _useDOMNode = useDOMNode(), _useDOMNode2 = layout_slicedToArray(_useDOMNode, 2), container = _useDOMNode2[0], containerRefCallback = _useDOMNode2[1];
            var _useDispatch = useDispatch("weekViewLayout"), setLastPanelType = _useDispatch.setLastPanelType, updateLayoutHeight = _useDispatch.updateLayoutHeight;
            var layoutClassName = hooks_module_T(function() {
              return "".concat(cls("layout"), " ").concat(className2);
            }, [className2]);
            hooks_module_(function() {
              if (container) {
                var onResizeWindow = function onResizeWindow2() {
                  return updateLayoutHeight(container.offsetHeight);
                };
                onResizeWindow();
                window.addEventListener("resize", onResizeWindow);
                return function() {
                  return window.removeEventListener("resize", onResizeWindow);
                };
              }
              return noop;
            }, [container, updateLayoutHeight]);
            hooks_module_(function() {
              if (container && autoAdjustPanels) {
                var childArray = H(children);
                var lastChild = childArray[childArray.length - 1];
                if (!isString_default()(lastChild) && !isNumber_default()(lastChild) && !type_isNil(lastChild)) {
                  setLastPanelType(lastChild.props.name);
                }
              }
            }, [children, setLastPanelType, autoAdjustPanels, container]);
            return _(LayoutContainerProvider, {
              value: container
            }, _("div", {
              ref: containerRefCallback,
              className: layoutClassName,
              style: layout_objectSpread(layout_objectSpread({}, getLayoutStylesFromInfo(width, height)), {}, {
                backgroundColor
              })
            }, container ? children : null), _(EventFormPopup, null), _(EventDetailPopup, null), _(SeeMoreEventsPopup, null), _(PopupOverlay, null));
          }
          function panelResizer_typeof(o2) {
            "@babel/helpers - typeof";
            return panelResizer_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, panelResizer_typeof(o2);
          }
          function panelResizer_slicedToArray(r2, e2) {
            return panelResizer_arrayWithHoles(r2) || panelResizer_iterableToArrayLimit(r2, e2) || panelResizer_unsupportedIterableToArray(r2, e2) || panelResizer_nonIterableRest();
          }
          function panelResizer_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function panelResizer_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return panelResizer_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? panelResizer_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function panelResizer_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function panelResizer_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function panelResizer_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function panelResizer_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function panelResizer_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? panelResizer_ownKeys(Object(t), true).forEach(function(r3) {
                panelResizer_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : panelResizer_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function panelResizer_defineProperty(e2, r2, t) {
            return (r2 = panelResizer_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function panelResizer_toPropertyKey(t) {
            var i2 = panelResizer_toPrimitive(t, "string");
            return "symbol" == panelResizer_typeof(i2) ? i2 : i2 + "";
          }
          function panelResizer_toPrimitive(t, r2) {
            if ("object" != panelResizer_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != panelResizer_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function getDefaultStyle(height, border) {
            return {
              height,
              width: "100%",
              cursor: "row-resize",
              borderTop: border,
              borderBottom: border
            };
          }
          function PanelResizer(_ref) {
            var name = _ref.name, height = _ref.height;
            var border = useTheme(hooks_module_q(function(theme) {
              return theme.week.panelResizer.border;
            }, []));
            var style = getDefaultStyle(height, border);
            var defaultGuideStyle = panelResizer_objectSpread(panelResizer_objectSpread({}, style), {}, {
              display: "none",
              border: "none",
              backgroundColor: "#999"
            });
            var _useState = hooks_module_h(defaultGuideStyle), _useState2 = panelResizer_slicedToArray(_useState, 2), guideStyle = _useState2[0], setGuideStyle = _useState2[1];
            var startPos = hooks_module_A(null);
            var _useDispatch = useDispatch("weekViewLayout"), updateDayGridRowHeightByDiff = _useDispatch.updateDayGridRowHeightByDiff;
            var onMouseDown = useDrag(DRAGGING_TYPE_CONSTANTS.panelResizer, {
              onDragStart: function onDragStart(e2) {
                startPos.current = {
                  left: e2.pageX,
                  top: e2.pageY
                };
              },
              onDrag: function onDrag(e2) {
                if (startPos.current) {
                  var top = e2.pageY - startPos.current.top;
                  setGuideStyle(function(prev) {
                    return panelResizer_objectSpread(panelResizer_objectSpread({}, prev), {}, {
                      top,
                      display: null
                    });
                  });
                }
              },
              onMouseUp: function onMouseUp(e2) {
                if (startPos.current) {
                  var diff = e2.pageY - startPos.current.top;
                  startPos.current = null;
                  setGuideStyle(defaultGuideStyle);
                  updateDayGridRowHeightByDiff({
                    rowName: name,
                    diff
                  });
                }
              }
            });
            return _("div", {
              style: {
                position: "relative"
              }
            }, _("div", {
              className: cls("panel-resizer"),
              style,
              onMouseDown
            }), _("div", {
              className: cls("panel-resizer-guide"),
              style: guideStyle
            }));
          }
          function panel_typeof(o2) {
            "@babel/helpers - typeof";
            return panel_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, panel_typeof(o2);
          }
          function panel_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function panel_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? panel_ownKeys(Object(t), true).forEach(function(r3) {
                panel_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : panel_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function panel_defineProperty(e2, r2, t) {
            return (r2 = panel_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function panel_toPropertyKey(t) {
            var i2 = panel_toPrimitive(t, "string");
            return "symbol" == panel_typeof(i2) ? i2 : i2 + "";
          }
          function panel_toPrimitive(t, r2) {
            if ("object" != panel_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != panel_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function getPanelSide(side, maxExpandableSide) {
            return maxExpandableSide ? Math.min(maxExpandableSide, side) : side;
          }
          function getPanelStyle(_ref) {
            var initialHeight = _ref.initialHeight, initialWidth = _ref.initialWidth, overflowX = _ref.overflowX, overflowY = _ref.overflowY, maxExpandableWidth = _ref.maxExpandableWidth, maxExpandableHeight = _ref.maxExpandableHeight, minHeight = _ref.minHeight, maxHeight = _ref.maxHeight, minWidth = _ref.minWidth, maxWidth = _ref.maxWidth;
            var style = {};
            if (initialWidth) {
              style.width = getPanelSide(initialWidth, maxExpandableWidth);
              style.height = "100%";
            }
            if (initialHeight) {
              style.width = "100%";
              style.height = getPanelSide(initialHeight, maxExpandableHeight);
            }
            if (overflowX) {
              style.overflowX = "auto";
            }
            if (overflowY) {
              style.overflowY = "auto";
            }
            return panel_objectSpread(panel_objectSpread({}, style), {}, {
              minHeight,
              maxHeight,
              minWidth,
              maxWidth
            });
          }
          var Panel = compat_module_k(function Panel2(_ref2, ref) {
            var name = _ref2.name, _ref2$initialWidth = _ref2.initialWidth, initialWidth = _ref2$initialWidth === void 0 ? DEFAULT_PANEL_HEIGHT : _ref2$initialWidth, _ref2$initialHeight = _ref2.initialHeight, initialHeight = _ref2$initialHeight === void 0 ? DEFAULT_PANEL_HEIGHT : _ref2$initialHeight, overflowX = _ref2.overflowX, overflowY = _ref2.overflowY, maxExpandableWidth = _ref2.maxExpandableWidth, maxExpandableHeight = _ref2.maxExpandableHeight, minHeight = _ref2.minHeight, maxHeight = _ref2.maxHeight, minWidth = _ref2.minWidth, maxWidth = _ref2.maxWidth, _ref2$resizerWidth = _ref2.resizerWidth, resizerWidth = _ref2$resizerWidth === void 0 ? DEFAULT_RESIZER_LENGTH : _ref2$resizerWidth, _ref2$resizerHeight = _ref2.resizerHeight, resizerHeight = _ref2$resizerHeight === void 0 ? DEFAULT_RESIZER_LENGTH : _ref2$resizerHeight, resizable = _ref2.resizable, children = _ref2.children;
            var _useDispatch = useDispatch("weekViewLayout"), updateDayGridRowHeight = _useDispatch.updateDayGridRowHeight;
            var _useStore = useStore(hooks_module_q(function(state) {
              var _state$weekViewLayout;
              return (_state$weekViewLayout = state.weekViewLayout.dayGridRows[name]) !== null && _state$weekViewLayout !== void 0 ? _state$weekViewLayout : {};
            }, [name])), dayGridRowHeight = _useStore.height;
            var height = dayGridRowHeight !== null && dayGridRowHeight !== void 0 ? dayGridRowHeight : initialHeight;
            hooks_module_(function() {
              updateDayGridRowHeight({
                rowName: name,
                height: initialHeight
              });
            }, [initialHeight, name, updateDayGridRowHeight]);
            var styles = getPanelStyle({
              initialWidth,
              initialHeight: height,
              overflowX,
              overflowY,
              maxExpandableWidth,
              maxExpandableHeight,
              minHeight,
              maxHeight,
              minWidth,
              maxWidth
            });
            var isResizable = hooks_module_T(function() {
              if (type_isNil(resizable) || isBoolean_default()(resizable)) {
                return !!resizable;
              }
              return resizable.includes(name);
            }, [resizable, name]);
            return _(preact_module_k, null, _("div", {
              className: cls("panel", name),
              style: styles,
              ref
            }, children), isResizable ? _(PanelResizer, {
              name,
              width: resizerWidth,
              height: resizerHeight
            }) : null);
          });
          var className = "timegrid";
          var addTimeGridPrefix = function addTimeGridPrefix2(selector) {
            return "".concat(className, "-").concat(selector);
          };
          var timeFormats = {
            second: "HH:mm:ss",
            minute: "HH:mm",
            hour: "HH:mm",
            date: "HH:mm",
            month: "MM.DD",
            year: "YYYY.MM.DD"
          };
          function timeEvent_typeof(o2) {
            "@babel/helpers - typeof";
            return timeEvent_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, timeEvent_typeof(o2);
          }
          function timeEvent_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function timeEvent_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? timeEvent_ownKeys(Object(t), true).forEach(function(r3) {
                timeEvent_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : timeEvent_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function timeEvent_defineProperty(e2, r2, t) {
            return (r2 = timeEvent_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function timeEvent_toPropertyKey(t) {
            var i2 = timeEvent_toPrimitive(t, "string");
            return "symbol" == timeEvent_typeof(i2) ? i2 : i2 + "";
          }
          function timeEvent_toPrimitive(t, r2) {
            if ("object" != timeEvent_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != timeEvent_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function timeEvent_slicedToArray(r2, e2) {
            return timeEvent_arrayWithHoles(r2) || timeEvent_iterableToArrayLimit(r2, e2) || timeEvent_unsupportedIterableToArray(r2, e2) || timeEvent_nonIterableRest();
          }
          function timeEvent_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function timeEvent_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return timeEvent_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? timeEvent_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function timeEvent_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function timeEvent_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function timeEvent_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          var timeEvent_classNames = {
            time: cls("event-time"),
            content: cls("event-time-content"),
            travelTime: cls("travel-time"),
            resizeHandleX: cls("resize-handler-x"),
            moveEvent: cls("dragging--move-event"),
            resizeEvent: cls("dragging--resize-vertical-event")
          };
          function getMarginLeft(left) {
            var _extractPercentPx = extractPercentPx("".concat(left)), percent = _extractPercentPx.percent, px = _extractPercentPx.px;
            return left > 0 || percent > 0 || px > 0 ? TIME_EVENT_CONTAINER_MARGIN_LEFT : 0;
          }
          function getContainerWidth(width, marginLeft) {
            if (isString_default()(width)) {
              return width;
            }
            if (width >= 0) {
              return "calc(".concat(toPercent(width), " - ").concat(marginLeft, "px)");
            }
            return "";
          }
          function getStyles(_ref) {
            var uiModel = _ref.uiModel, isDraggingTarget = _ref.isDraggingTarget, hasNextStartTime = _ref.hasNextStartTime, calendarColor = _ref.calendarColor, minHeight = _ref.minHeight;
            var top = uiModel.top, left = uiModel.left, height = uiModel.height, width = uiModel.width, duplicateLeft = uiModel.duplicateLeft, duplicateWidth = uiModel.duplicateWidth, goingDurationHeight = uiModel.goingDurationHeight, modelDurationHeight = uiModel.modelDurationHeight, comingDurationHeight = uiModel.comingDurationHeight, croppedStart = uiModel.croppedStart, croppedEnd = uiModel.croppedEnd;
            var travelBorderColor = "white";
            var borderRadius = 2;
            var defaultMarginBottom = 2;
            var marginLeft = getMarginLeft(left);
            var _getEventColors = getEventColors(uiModel, calendarColor), color = _getEventColors.color, backgroundColor = _getEventColors.backgroundColor, borderColor = _getEventColors.borderColor, dragBackgroundColor = _getEventColors.dragBackgroundColor;
            var containerStyle = {
              width: getContainerWidth(duplicateWidth || width, marginLeft),
              height: "calc(".concat(toPercent(Math.max(height, minHeight)), " - ").concat(defaultMarginBottom, "px)"),
              top: toPercent(top),
              left: duplicateLeft || toPercent(left),
              borderRadius,
              borderLeft: "3px solid ".concat(borderColor),
              marginLeft,
              color,
              backgroundColor: isDraggingTarget ? dragBackgroundColor : backgroundColor,
              opacity: isDraggingTarget ? 0.5 : 1,
              zIndex: hasNextStartTime ? 1 : 0
            };
            var goingDurationStyle = {
              height: toPercent(goingDurationHeight),
              borderBottom: "1px dashed ".concat(travelBorderColor)
            };
            var modelDurationStyle = {
              height: toPercent(modelDurationHeight)
            };
            var comingDurationStyle = {
              height: toPercent(comingDurationHeight),
              borderTop: "1px dashed ".concat(travelBorderColor)
            };
            if (croppedStart) {
              containerStyle.borderTopLeftRadius = 0;
              containerStyle.borderTopRightRadius = 0;
            }
            if (croppedEnd) {
              containerStyle.borderBottomLeftRadius = 0;
              containerStyle.borderBottomRightRadius = 0;
            }
            return {
              containerStyle,
              goingDurationStyle,
              modelDurationStyle,
              comingDurationStyle
            };
          }
          function isDraggableEvent(_ref2) {
            var uiModel = _ref2.uiModel, isReadOnlyCalendar = _ref2.isReadOnlyCalendar, isDraggingTarget = _ref2.isDraggingTarget, hasNextStartTime = _ref2.hasNextStartTime;
            var model = uiModel.model;
            return !isReadOnlyCalendar && !model.isReadOnly && !isDraggingTarget && !hasNextStartTime;
          }
          function TimeEvent(_ref3) {
            var uiModel = _ref3.uiModel, nextStartTime = _ref3.nextStartTime, _ref3$isResizingGuide = _ref3.isResizingGuide, isResizingGuide = _ref3$isResizingGuide === void 0 ? false : _ref3$isResizingGuide, _ref3$minHeight = _ref3.minHeight, minHeight = _ref3$minHeight === void 0 ? 0 : _ref3$minHeight;
            var _useStore = useStore(optionsSelector), useDetailPopup = _useStore.useDetailPopup, isReadOnlyCalendar = _useStore.isReadOnly, weekOptions = _useStore.week;
            var calendarColor = useCalendarColor(uiModel.model);
            var collapseDuplicateEvents = weekOptions.collapseDuplicateEvents;
            var layoutContainer = useLayoutContainer();
            var _useDispatch = useDispatch("popup"), showDetailPopup = _useDispatch.showDetailPopup;
            var _useDispatch2 = useDispatch("dnd"), setDraggingEventUIModel = _useDispatch2.setDraggingEventUIModel;
            var _useDispatch3 = useDispatch("weekViewLayout"), setSelectedDuplicateEventCid = _useDispatch3.setSelectedDuplicateEventCid;
            var eventBus = useEventBus();
            var eventContainerRef = hooks_module_A(null);
            var _useState = hooks_module_h(false), _useState2 = timeEvent_slicedToArray(_useState, 2), isDraggingTarget = _useState2[0], setIsDraggingTarget = _useState2[1];
            var model = uiModel.model, goingDurationHeight = uiModel.goingDurationHeight, modelDurationHeight = uiModel.modelDurationHeight, comingDurationHeight = uiModel.comingDurationHeight, croppedEnd = uiModel.croppedEnd;
            var id = model.id, calendarId2 = model.calendarId, customStyle = model.customStyle;
            var hasNextStartTime = isPresent(nextStartTime);
            var _getStyles = getStyles({
              uiModel,
              isDraggingTarget,
              hasNextStartTime,
              calendarColor,
              minHeight
            }), containerStyle = _getStyles.containerStyle, goingDurationStyle = _getStyles.goingDurationStyle, modelDurationStyle = _getStyles.modelDurationStyle, comingDurationStyle = _getStyles.comingDurationStyle;
            var isGuide = hasNextStartTime || isResizingGuide;
            useTransientUpdate(dndSelector, function(_ref4) {
              var draggingEventUIModel = _ref4.draggingEventUIModel, draggingState = _ref4.draggingState;
              if (draggingState === DraggingState.DRAGGING && (draggingEventUIModel === null || draggingEventUIModel === void 0 ? void 0 : draggingEventUIModel.cid()) === uiModel.cid() && !hasNextStartTime && !isResizingGuide) {
                setIsDraggingTarget(true);
              } else {
                setIsDraggingTarget(false);
              }
            });
            hooks_module_y(function() {
              if (!isResizingGuide) {
                eventBus.fire("afterRenderEvent", uiModel.model.toEventObject());
              }
            }, []);
            var startDragEvent = function startDragEvent2(className2) {
              setDraggingEventUIModel(uiModel);
              layoutContainer === null || layoutContainer === void 0 || layoutContainer.classList.add(className2);
            };
            var endDragEvent = function endDragEvent2(className2) {
              setIsDraggingTarget(false);
              layoutContainer === null || layoutContainer === void 0 || layoutContainer.classList.remove(className2);
            };
            var onMoveStart = useDrag(DRAGGING_TYPE_CREATORS.moveEvent("timeGrid", "".concat(uiModel.cid())), {
              onDragStart: function onDragStart() {
                if (isDraggable) {
                  startDragEvent(timeEvent_classNames.moveEvent);
                }
              },
              onMouseUp: function onMouseUp(e2, _ref5) {
                var draggingState = _ref5.draggingState;
                endDragEvent(timeEvent_classNames.moveEvent);
                var isClick = draggingState <= DraggingState.INIT;
                if (isClick && collapseDuplicateEvents) {
                  var selectedDuplicateEventCid = uiModel.duplicateEvents.length > 0 ? uiModel.cid() : DEFAULT_DUPLICATE_EVENT_CID;
                  setSelectedDuplicateEventCid(selectedDuplicateEventCid);
                }
                if (isClick && useDetailPopup && eventContainerRef.current) {
                  showDetailPopup({
                    event: uiModel.model,
                    eventRect: eventContainerRef.current.getBoundingClientRect()
                  }, false);
                }
                if (isClick) {
                  eventBus.fire("clickEvent", {
                    event: uiModel.model.toEventObject(),
                    nativeEvent: e2
                  });
                }
              },
              onPressESCKey: function onPressESCKey() {
                return endDragEvent(timeEvent_classNames.moveEvent);
              }
            });
            var handleMoveStart = function handleMoveStart2(e2) {
              e2.stopPropagation();
              onMoveStart(e2);
            };
            var onResizeStart = useDrag(DRAGGING_TYPE_CREATORS.resizeEvent("timeGrid", "".concat(uiModel.cid())), {
              onDragStart: function onDragStart() {
                return startDragEvent(timeEvent_classNames.resizeEvent);
              },
              onMouseUp: function onMouseUp() {
                return endDragEvent(timeEvent_classNames.resizeEvent);
              },
              onPressESCKey: function onPressESCKey() {
                return endDragEvent(timeEvent_classNames.resizeEvent);
              }
            });
            var handleResizeStart = function handleResizeStart2(e2) {
              e2.stopPropagation();
              onResizeStart(e2);
            };
            var isDraggable = isDraggableEvent({
              uiModel,
              isReadOnlyCalendar,
              isDraggingTarget,
              hasNextStartTime
            });
            var shouldShowResizeHandle = isDraggable && !croppedEnd;
            return _("div", {
              "data-testid": "".concat(isGuide ? "guide-" : "", "time-event-").concat(model.title, "-").concat(uiModel.cid()),
              "data-calendar-id": calendarId2,
              "data-event-id": id,
              className: timeEvent_classNames.time,
              style: timeEvent_objectSpread(timeEvent_objectSpread({}, containerStyle), customStyle),
              onMouseDown: handleMoveStart,
              ref: eventContainerRef
            }, goingDurationHeight ? _("div", {
              className: timeEvent_classNames.travelTime,
              style: goingDurationStyle
            }, _(Template, {
              template: "goingDuration",
              param: model
            })) : null, modelDurationHeight ? _("div", {
              className: timeEvent_classNames.content,
              style: modelDurationStyle
            }, _(Template, {
              template: "time",
              param: timeEvent_objectSpread(timeEvent_objectSpread({}, model.toEventObject()), {}, {
                start: hasNextStartTime ? nextStartTime : model.start
              })
            })) : null, comingDurationHeight ? _("div", {
              className: timeEvent_classNames.travelTime,
              style: comingDurationStyle
            }, _(Template, {
              template: "comingDuration",
              param: model
            })) : null, shouldShowResizeHandle ? _("div", {
              className: timeEvent_classNames.resizeHandleX,
              onMouseDown: handleResizeStart
            }) : null);
          }
          function gridSelectionByColumn_GridSelection(_ref) {
            var top = _ref.top, height = _ref.height, text = _ref.text;
            var _useTheme = useTheme(hooks_module_q(function(theme) {
              return theme.common.gridSelection;
            }, [])), backgroundColor = _useTheme.backgroundColor, border = _useTheme.border;
            var color = useTheme(hooks_module_q(function(theme) {
              return theme.week.gridSelection.color;
            }, []));
            var style = {
              top: toPercent(top),
              height: toPercent(height),
              backgroundColor,
              border
            };
            return _("div", {
              className: cls("time", "grid-selection"),
              style,
              "data-testid": "time-grid-selection-".concat(top, "-").concat(height)
            }, text.length > 0 ? _("span", {
              className: cls("grid-selection-label"),
              style: {
                color
              }
            }, text) : null);
          }
          function GridSelectionByColumn(_ref2) {
            var columnIndex = _ref2.columnIndex, timeGridRows = _ref2.timeGridRows;
            var gridSelectionData = useStore(hooks_module_q(function(state) {
              return timeGridSelectionHelper.calculateSelection(state.gridSelection.timeGrid, columnIndex, timeGridRows.length - 1);
            }, [columnIndex, timeGridRows]));
            var gridSelectionProps = hooks_module_T(function() {
              if (!gridSelectionData) {
                return null;
              }
              var startRowIndex = gridSelectionData.startRowIndex, endRowIndex = gridSelectionData.endRowIndex, isStartingColumn = gridSelectionData.isStartingColumn, isSelectingMultipleColumns = gridSelectionData.isSelectingMultipleColumns;
              var _timeGridRows$startRo = timeGridRows[startRowIndex], startRowTop = _timeGridRows$startRo.top, startRowStartTime = _timeGridRows$startRo.startTime;
              var _timeGridRows$endRowI = timeGridRows[endRowIndex], endRowTop = _timeGridRows$endRowI.top, endRowHeight = _timeGridRows$endRowI.height, endRowEndTime = _timeGridRows$endRowI.endTime;
              var gridSelectionHeight = endRowTop + endRowHeight - startRowTop;
              var text = "".concat(startRowStartTime, " - ").concat(endRowEndTime);
              if (isSelectingMultipleColumns) {
                text = isStartingColumn ? startRowStartTime : "";
              }
              return {
                top: startRowTop,
                height: gridSelectionHeight,
                text
              };
            }, [gridSelectionData, timeGridRows]);
            if (type_isNil(gridSelectionProps)) {
              return null;
            }
            return _(gridSelectionByColumn_GridSelection, gridSelectionProps);
          }
          function useTimeGridEventResize_slicedToArray(r2, e2) {
            return useTimeGridEventResize_arrayWithHoles(r2) || useTimeGridEventResize_iterableToArrayLimit(r2, e2) || useTimeGridEventResize_unsupportedIterableToArray(r2, e2) || useTimeGridEventResize_nonIterableRest();
          }
          function useTimeGridEventResize_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function useTimeGridEventResize_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return useTimeGridEventResize_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? useTimeGridEventResize_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function useTimeGridEventResize_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function useTimeGridEventResize_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function useTimeGridEventResize_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function useTimeGridEventResize(_ref) {
            var gridPositionFinder = _ref.gridPositionFinder, totalUIModels = _ref.totalUIModels, columnIndex = _ref.columnIndex, timeGridData = _ref.timeGridData;
            var eventBus = useEventBus();
            var _useDraggingEvent = useDraggingEvent("timeGrid", "resize"), isDraggingEnd = _useDraggingEvent.isDraggingEnd, isDraggingCanceled = _useDraggingEvent.isDraggingCanceled, resizingStartUIModel = _useDraggingEvent.draggingEvent, clearDraggingEvent = _useDraggingEvent.clearDraggingEvent;
            var _useCurrentPointerPos = useCurrentPointerPositionInGrid(gridPositionFinder), _useCurrentPointerPos2 = useTimeGridEventResize_slicedToArray(_useCurrentPointerPos, 2), currentGridPos = _useCurrentPointerPos2[0], clearCurrentGridPos = _useCurrentPointerPos2[1];
            var _useState = hooks_module_h(null), _useState2 = useTimeGridEventResize_slicedToArray(_useState, 2), guideUIModel = _useState2[0], setGuideUIModel = _useState2[1];
            var clearStates = hooks_module_q(function() {
              setGuideUIModel(null);
              clearDraggingEvent();
              clearCurrentGridPos();
            }, [clearCurrentGridPos, clearDraggingEvent]);
            var baseResizingInfo = hooks_module_T(function() {
              if (type_isNil(resizingStartUIModel)) {
                return null;
              }
              var columns = timeGridData.columns, rows = timeGridData.rows;
              var resizeTargetUIModelColumns = totalUIModels.map(function(uiModels) {
                return uiModels.filter(function(uiModel) {
                  return uiModel.cid() === resizingStartUIModel.cid();
                });
              });
              var findRowIndexOf = function findRowIndexOf2(targetDate, targetColumnIndex) {
                return function(row) {
                  var rowStartTZDate = setTimeStrToDate(columns[targetColumnIndex].date, row.startTime);
                  var rowEndTZDate = setTimeStrToDate(timeGridData.columns[targetColumnIndex].date, row.endTime);
                  return rowStartTZDate <= targetDate && targetDate < rowEndTZDate;
                };
              };
              var eventStartDateColumnIndex = resizeTargetUIModelColumns.findIndex(function(row) {
                return row.length > 0;
              });
              var resizingStartEventUIModel = resizeTargetUIModelColumns[eventStartDateColumnIndex][0];
              var _resizingStartEventUI = resizingStartEventUIModel.model.goingDuration, goingDuration = _resizingStartEventUI === void 0 ? 0 : _resizingStartEventUI;
              var renderStart = addMinutes(resizingStartEventUIModel.getStarts(), -goingDuration);
              var eventStartDateRowIndex = Math.max(rows.findIndex(findRowIndexOf(renderStart, eventStartDateColumnIndex)), 0);
              var eventEndDateColumnIndex = findLastIndex(resizeTargetUIModelColumns, function(row) {
                return row.length > 0;
              });
              var resizingEndEventUIModel = resizeTargetUIModelColumns[eventEndDateColumnIndex][0];
              var _resizingEndEventUIMo = resizingEndEventUIModel.model.comingDuration, comingDuration = _resizingEndEventUIMo === void 0 ? 0 : _resizingEndEventUIMo;
              var renderEnd = addMinutes(resizingEndEventUIModel.getStarts(), comingDuration);
              var eventEndDateRowIndex = rows.findIndex(findRowIndexOf(renderEnd, eventEndDateColumnIndex));
              eventEndDateRowIndex = eventEndDateRowIndex >= 0 ? eventEndDateRowIndex : rows.length - 1;
              return {
                eventStartDateColumnIndex,
                eventStartDateRowIndex,
                eventEndDateColumnIndex,
                eventEndDateRowIndex,
                resizeTargetUIModelColumns
              };
            }, [resizingStartUIModel, timeGridData, totalUIModels]);
            var canCalculateGuideUIModel = isPresent(baseResizingInfo) && isPresent(resizingStartUIModel) && isPresent(currentGridPos);
            var oneRowHeight = hooks_module_T(function() {
              return baseResizingInfo ? timeGridData.rows[0].height : 0;
            }, [baseResizingInfo, timeGridData.rows]);
            hooks_module_y(function() {
              if (canCalculateGuideUIModel) {
                var eventStartDateRowIndex = baseResizingInfo.eventStartDateRowIndex, eventStartDateColumnIndex = baseResizingInfo.eventStartDateColumnIndex, eventEndDateColumnIndex = baseResizingInfo.eventEndDateColumnIndex;
                if (columnIndex === eventEndDateColumnIndex && eventStartDateColumnIndex === eventEndDateColumnIndex) {
                  var clonedUIModel = resizingStartUIModel.clone();
                  var height = clonedUIModel.height, goingDurationHeight = clonedUIModel.goingDurationHeight, comingDurationHeight = clonedUIModel.comingDurationHeight;
                  var newHeight = Math.max(oneRowHeight + goingDurationHeight * height / 100 + comingDurationHeight * height / 100, timeGridData.rows[currentGridPos.rowIndex].top - timeGridData.rows[eventStartDateRowIndex].top + oneRowHeight);
                  var newGoingDurationHeight = goingDurationHeight * height / newHeight;
                  var newComingDurationHeight = comingDurationHeight * height / newHeight;
                  clonedUIModel.setUIProps({
                    height: newHeight,
                    goingDurationHeight: newGoingDurationHeight,
                    comingDurationHeight: newComingDurationHeight,
                    modelDurationHeight: 100 - (newGoingDurationHeight + newComingDurationHeight)
                  });
                  setGuideUIModel(clonedUIModel);
                }
              }
            }, [baseResizingInfo, canCalculateGuideUIModel, columnIndex, currentGridPos, resizingStartUIModel, timeGridData.rows, oneRowHeight]);
            hooks_module_y(function() {
              if (canCalculateGuideUIModel) {
                var resizeTargetUIModelColumns = baseResizingInfo.resizeTargetUIModelColumns, eventStartDateColumnIndex = baseResizingInfo.eventStartDateColumnIndex, eventEndDateColumnIndex = baseResizingInfo.eventEndDateColumnIndex;
                if ((columnIndex === eventStartDateColumnIndex || columnIndex === eventEndDateColumnIndex) && eventStartDateColumnIndex !== eventEndDateColumnIndex) {
                  var clonedUIModel;
                  if (columnIndex === eventStartDateColumnIndex) {
                    clonedUIModel = resizeTargetUIModelColumns[columnIndex][0].clone();
                  } else {
                    clonedUIModel = resizingStartUIModel.clone();
                    clonedUIModel.setUIProps({
                      height: timeGridData.rows[currentGridPos.rowIndex].top + oneRowHeight
                    });
                  }
                  setGuideUIModel(clonedUIModel);
                }
              }
            }, [baseResizingInfo, canCalculateGuideUIModel, columnIndex, currentGridPos, resizingStartUIModel, timeGridData.rows, oneRowHeight]);
            useWhen(function() {
              var shouldUpdate = !isDraggingCanceled && isPresent(baseResizingInfo) && isPresent(currentGridPos) && isPresent(resizingStartUIModel) && baseResizingInfo.eventEndDateColumnIndex === columnIndex;
              if (shouldUpdate) {
                var _resizingStartUIModel = resizingStartUIModel.model.comingDuration, comingDuration = _resizingStartUIModel === void 0 ? 0 : _resizingStartUIModel;
                var targetEndDate = addMinutes(setTimeStrToDate(timeGridData.columns[columnIndex].date, timeGridData.rows[currentGridPos.rowIndex].endTime), -comingDuration);
                var minEndDate = addMinutes(resizingStartUIModel.getStarts(), 30);
                eventBus.fire("beforeUpdateEvent", {
                  event: resizingStartUIModel.model.toEventObject(),
                  changes: {
                    end: max(minEndDate, targetEndDate)
                  }
                });
              }
              clearStates();
            }, isDraggingEnd);
            return guideUIModel;
          }
          function ResizingGuideByColumn(_ref) {
            var gridPositionFinder = _ref.gridPositionFinder, totalUIModels = _ref.totalUIModels, columnIndex = _ref.columnIndex, timeGridData = _ref.timeGridData;
            var guideUIModel = useTimeGridEventResize({
              gridPositionFinder,
              totalUIModels,
              columnIndex,
              timeGridData
            });
            if (type_isNil(guideUIModel)) {
              return null;
            }
            return _(TimeEvent, {
              uiModel: guideUIModel,
              isResizingGuide: true
            });
          }
          function column_typeof(o2) {
            "@babel/helpers - typeof";
            return column_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, column_typeof(o2);
          }
          function column_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function column_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? column_ownKeys(Object(t), true).forEach(function(r3) {
                column_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : column_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function column_defineProperty(e2, r2, t) {
            return (r2 = column_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function column_toPropertyKey(t) {
            var i2 = column_toPrimitive(t, "string");
            return "symbol" == column_typeof(i2) ? i2 : i2 + "";
          }
          function column_toPrimitive(t, r2) {
            if ("object" != column_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != column_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function column_slicedToArray(r2, e2) {
            return column_arrayWithHoles(r2) || column_iterableToArrayLimit(r2, e2) || column_unsupportedIterableToArray(r2, e2) || column_nonIterableRest();
          }
          function column_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function column_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return column_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? column_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function column_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function column_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function column_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          var column_classNames = {
            column: cls("column"),
            backgrounds: cls("background-events"),
            events: cls("events")
          };
          function VerticalEvents(_ref) {
            var eventUIModels = _ref.eventUIModels, minEventHeight = _ref.minEventHeight;
            var style = {
              marginRight: 8
            };
            return _("div", {
              className: column_classNames.events,
              style
            }, eventUIModels.map(function(eventUIModel) {
              return _(TimeEvent, {
                key: "".concat(eventUIModel.valueOf(), "-").concat(eventUIModel.cid()),
                uiModel: eventUIModel,
                minHeight: minEventHeight
              });
            }));
          }
          function backgroundColorSelector(theme) {
            return {
              defaultBackgroundColor: theme.week.dayGrid.backgroundColor,
              todayBackgroundColor: theme.week.today.backgroundColor,
              weekendBackgroundColor: theme.week.weekend.backgroundColor
            };
          }
          function getBackgroundColor(_ref2) {
            var today = _ref2.today, columnDate = _ref2.columnDate, defaultBackgroundColor = _ref2.defaultBackgroundColor, todayBackgroundColor = _ref2.todayBackgroundColor, weekendBackgroundColor = _ref2.weekendBackgroundColor;
            var isTodayColumn = isSameDate(today, columnDate);
            var isWeekendColumn = isWeekend(columnDate.getDay());
            if (isTodayColumn) {
              return todayBackgroundColor;
            }
            if (isWeekendColumn) {
              return weekendBackgroundColor;
            }
            return defaultBackgroundColor;
          }
          var Column = compat_module_x(function Column2(_ref3) {
            var columnDate = _ref3.columnDate, columnWidth = _ref3.columnWidth, columnIndex = _ref3.columnIndex, totalUIModels = _ref3.totalUIModels, gridPositionFinder = _ref3.gridPositionFinder, timeGridData = _ref3.timeGridData, isLastColumn = _ref3.isLastColumn;
            var timeGridRows = timeGridData.rows;
            var borderRight = useTheme(hooks_module_q(function(theme) {
              return theme.week.timeGrid.borderRight;
            }, []));
            var backgroundColorTheme = useTheme(backgroundColorSelector);
            var _usePrimaryTimezone = usePrimaryTimezone(), _usePrimaryTimezone2 = column_slicedToArray(_usePrimaryTimezone, 2), getNow = _usePrimaryTimezone2[1];
            var today = getNow();
            var backgroundColor = getBackgroundColor(column_objectSpread({
              today,
              columnDate
            }, backgroundColorTheme));
            var style = {
              width: columnWidth,
              backgroundColor,
              borderRight: isLastColumn ? "none" : borderRight
            };
            var uiModelsByColumn = totalUIModels[columnIndex];
            var minEventHeight = timeGridRows[0].height;
            return _("div", {
              className: column_classNames.column,
              style,
              "data-testid": "timegrid-column-".concat(columnDate.getDay())
            }, _(VerticalEvents, {
              eventUIModels: uiModelsByColumn,
              minEventHeight
            }), _(ResizingGuideByColumn, {
              gridPositionFinder,
              totalUIModels,
              columnIndex,
              timeGridData
            }), _(GridSelectionByColumn, {
              columnIndex,
              timeGridRows
            }));
          });
          function gridLineBorderSelector(theme) {
            return {
              halfHourLineBorder: theme.week.timeGridHalfHourLine.borderBottom,
              hourLineBorder: theme.week.timeGridHourLine.borderBottom
            };
          }
          var GridLines = compat_module_x(function GridLines2(_ref) {
            var timeGridRows = _ref.timeGridRows;
            var _useTheme = useTheme(gridLineBorderSelector), halfHourLineBorder = _useTheme.halfHourLineBorder, hourLineBorder = _useTheme.hourLineBorder;
            return _("div", {
              className: cls("gridlines")
            }, timeGridRows.map(function(time, index) {
              var isUpperLine = index % 2 === 0;
              return _("div", {
                key: "gridline-".concat(time.startTime, "-").concat(time.endTime),
                className: cls("gridline-half"),
                style: {
                  top: toPercent(time.top),
                  height: toPercent(time.height),
                  borderBottom: isUpperLine ? halfHourLineBorder : hourLineBorder
                },
                "data-testid": "gridline-".concat(time.startTime, "-").concat(time.endTime)
              });
            }));
          });
          function useTimeGridEventMove_slicedToArray(r2, e2) {
            return useTimeGridEventMove_arrayWithHoles(r2) || useTimeGridEventMove_iterableToArrayLimit(r2, e2) || useTimeGridEventMove_unsupportedIterableToArray(r2, e2) || useTimeGridEventMove_nonIterableRest();
          }
          function useTimeGridEventMove_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function useTimeGridEventMove_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return useTimeGridEventMove_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? useTimeGridEventMove_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function useTimeGridEventMove_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function useTimeGridEventMove_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function useTimeGridEventMove_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          var THIRTY_MINUTES = 30;
          function getCurrentIndexByTime(time, hourStart) {
            var hour = time.getHours() - hourStart;
            var minutes = time.getMinutes();
            return hour * 2 + Math.floor(minutes / THIRTY_MINUTES);
          }
          function getMovingEventPosition(_ref) {
            var draggingEvent = _ref.draggingEvent, columnDiff = _ref.columnDiff, rowDiff = _ref.rowDiff, timeGridDataRows = _ref.timeGridDataRows, currentDate = _ref.currentDate;
            var rowHeight = timeGridDataRows[0].height;
            var maxHeight = rowHeight * timeGridDataRows.length;
            var millisecondsDiff = rowDiff * MS_PER_THIRTY_MINUTES + columnDiff * MS_PER_DAY;
            var hourStart = Number(timeGridDataRows[0].startTime.split(":")[0]);
            var _draggingEvent$model = draggingEvent.model, _draggingEvent$model$ = _draggingEvent$model.goingDuration, goingDuration = _draggingEvent$model$ === void 0 ? 0 : _draggingEvent$model$, _draggingEvent$model$2 = _draggingEvent$model.comingDuration, comingDuration = _draggingEvent$model$2 === void 0 ? 0 : _draggingEvent$model$2;
            var goingStart = addMinutes(draggingEvent.getStarts(), -goingDuration);
            var comingEnd = addMinutes(draggingEvent.getEnds(), comingDuration);
            var nextStart = addMilliseconds(goingStart, millisecondsDiff);
            var nextEnd = addMilliseconds(comingEnd, millisecondsDiff);
            var startIndex = Math.max(getCurrentIndexByTime(nextStart, hourStart), 0);
            var endIndex = Math.min(getCurrentIndexByTime(nextEnd, hourStart), timeGridDataRows.length - 1);
            var isStartAtPrevDate = nextStart.getFullYear() < currentDate.getFullYear() || nextStart.getMonth() < currentDate.getMonth() || nextStart.getDate() < currentDate.getDate();
            var isEndAtNextDate = nextEnd.getFullYear() > currentDate.getFullYear() || nextEnd.getMonth() > currentDate.getMonth() || nextEnd.getDate() > currentDate.getDate();
            var indexDiff = endIndex - (isStartAtPrevDate ? 0 : startIndex);
            var top = isStartAtPrevDate ? 0 : timeGridDataRows[startIndex].top;
            var height = isEndAtNextDate ? maxHeight : Math.max(indexDiff, 1) * rowHeight;
            return {
              top,
              height
            };
          }
          var initXSelector = function initXSelector2(state) {
            return state.dnd.initX;
          };
          var initYSelector = function initYSelector2(state) {
            return state.dnd.initY;
          };
          function useTimeGridEventMove(_ref2) {
            var gridPositionFinder = _ref2.gridPositionFinder, timeGridData = _ref2.timeGridData;
            var initX = useStore(initXSelector);
            var initY = useStore(initYSelector);
            var eventBus = useEventBus();
            var _useDraggingEvent = useDraggingEvent("timeGrid", "move"), isDraggingEnd = _useDraggingEvent.isDraggingEnd, isDraggingCanceled = _useDraggingEvent.isDraggingCanceled, draggingEvent = _useDraggingEvent.draggingEvent, clearDraggingEvent = _useDraggingEvent.clearDraggingEvent;
            var _useCurrentPointerPos = useCurrentPointerPositionInGrid(gridPositionFinder), _useCurrentPointerPos2 = useTimeGridEventMove_slicedToArray(_useCurrentPointerPos, 2), currentGridPos = _useCurrentPointerPos2[0], clearCurrentGridPos = _useCurrentPointerPos2[1];
            var initGridPosRef = hooks_module_A(null);
            hooks_module_y(function() {
              if (isPresent(initX) && isPresent(initY)) {
                initGridPosRef.current = gridPositionFinder({
                  clientX: initX,
                  clientY: initY
                });
              }
            }, [gridPositionFinder, initX, initY]);
            var gridDiff = hooks_module_T(function() {
              if (type_isNil(initGridPosRef.current) || type_isNil(currentGridPos)) {
                return null;
              }
              return {
                columnDiff: currentGridPos.columnIndex - initGridPosRef.current.columnIndex,
                rowDiff: currentGridPos.rowIndex - initGridPosRef.current.rowIndex
              };
            }, [currentGridPos]);
            var startDateTime = hooks_module_T(function() {
              if (type_isNil(draggingEvent)) {
                return null;
              }
              return draggingEvent.getStarts();
            }, [draggingEvent]);
            var clearState = hooks_module_q(function() {
              clearCurrentGridPos();
              clearDraggingEvent();
              initGridPosRef.current = null;
            }, [clearCurrentGridPos, clearDraggingEvent]);
            var nextStartTime = hooks_module_T(function() {
              if (type_isNil(gridDiff) || type_isNil(startDateTime)) {
                return null;
              }
              return addMilliseconds(startDateTime, gridDiff.rowDiff * MS_PER_THIRTY_MINUTES + gridDiff.columnDiff * MS_PER_DAY);
            }, [gridDiff, startDateTime]);
            var movingEvent = hooks_module_T(function() {
              if (type_isNil(draggingEvent) || type_isNil(currentGridPos) || type_isNil(gridDiff)) {
                return null;
              }
              var clonedEvent = draggingEvent.clone();
              var _getMovingEventPositi = getMovingEventPosition({
                draggingEvent: clonedEvent,
                columnDiff: gridDiff.columnDiff,
                rowDiff: gridDiff.rowDiff,
                timeGridDataRows: timeGridData.rows,
                currentDate: timeGridData.columns[currentGridPos.columnIndex].date
              }), top = _getMovingEventPositi.top, height = _getMovingEventPositi.height;
              clonedEvent.setUIProps({
                left: timeGridData.columns[currentGridPos.columnIndex].left,
                width: timeGridData.columns[currentGridPos.columnIndex].width,
                top,
                height
              });
              return clonedEvent;
            }, [currentGridPos, draggingEvent, gridDiff, timeGridData.columns, timeGridData.rows]);
            useWhen(function() {
              var shouldUpdate = !isDraggingCanceled && isPresent(draggingEvent) && isPresent(currentGridPos) && isPresent(gridDiff) && isPresent(nextStartTime) && (gridDiff.rowDiff !== 0 || gridDiff.columnDiff !== 0);
              if (shouldUpdate) {
                var duration = draggingEvent.duration();
                var nextEndTime = addMilliseconds(nextStartTime, duration);
                eventBus.fire("beforeUpdateEvent", {
                  event: draggingEvent.model.toEventObject(),
                  changes: {
                    start: nextStartTime,
                    end: nextEndTime
                  }
                });
              }
              clearState();
            }, isDraggingEnd);
            return {
              movingEvent,
              nextStartTime
            };
          }
          function movingEventShadow_MovingEventShadow(_ref) {
            var gridPositionFinder = _ref.gridPositionFinder, timeGridData = _ref.timeGridData;
            var _useTimeGridEventMove = useTimeGridEventMove({
              gridPositionFinder,
              timeGridData
            }), movingEvent = _useTimeGridEventMove.movingEvent, nextStartTime = _useTimeGridEventMove.nextStartTime;
            if (type_isNil(movingEvent)) {
              return null;
            }
            return _(TimeEvent, {
              uiModel: movingEvent,
              nextStartTime
            });
          }
          var TEST_IDS = {
            NOW_INDICATOR: "timegrid-now-indicator",
            NOW_INDICATOR_LABEL: "timegrid-now-indicator-label"
          };
          var nowIndicator_classNames = {
            line: cls(addTimeGridPrefix("now-indicator")),
            left: cls(addTimeGridPrefix("now-indicator-left")),
            marker: cls(addTimeGridPrefix("now-indicator-marker")),
            today: cls(addTimeGridPrefix("now-indicator-today")),
            right: cls(addTimeGridPrefix("now-indicator-right"))
          };
          function nowIndicatorTheme(theme) {
            return {
              pastBorder: theme.week.nowIndicatorPast.border,
              todayBorder: theme.week.nowIndicatorToday.border,
              futureBorder: theme.week.nowIndicatorFuture.border,
              bulletBackgroundColor: theme.week.nowIndicatorBullet.backgroundColor
            };
          }
          function NowIndicator(_ref) {
            var top = _ref.top, columnWidth = _ref.columnWidth, columnCount = _ref.columnCount, columnIndex = _ref.columnIndex;
            var _useTheme = useTheme(nowIndicatorTheme), pastBorder = _useTheme.pastBorder, todayBorder = _useTheme.todayBorder, futureBorder = _useTheme.futureBorder, bulletBackgroundColor = _useTheme.bulletBackgroundColor;
            var layoutContainer = useLayoutContainer();
            var eventBus = useEventBus();
            var indicatorRef = hooks_module_A(null);
            var leftLine = {
              left: toPercent(columnWidth * columnIndex),
              width: toPercent(columnWidth * columnIndex)
            };
            var rightLine = {
              left: toPercent(columnWidth * (columnIndex + 1)),
              width: toPercent(columnWidth * (columnCount - columnIndex + 1))
            };
            hooks_module_y(function() {
              var scrollToNow = function scrollToNow2(behavior) {
                var _layoutContainer$quer;
                var scrollArea = (_layoutContainer$quer = layoutContainer === null || layoutContainer === void 0 ? void 0 : layoutContainer.querySelector(".".concat(cls("panel"), ".").concat(cls("time")))) !== null && _layoutContainer$quer !== void 0 ? _layoutContainer$quer : null;
                if (scrollArea && indicatorRef.current) {
                  var _ref2 = scrollArea, scrollAreaOffsetHeight = _ref2.offsetHeight;
                  var targetOffsetTop = indicatorRef.current.offsetTop;
                  var newScrollTop = targetOffsetTop - scrollAreaOffsetHeight / 2;
                  if (scrollArea.scrollTo) {
                    scrollArea.scrollTo({
                      top: newScrollTop,
                      behavior
                    });
                  } else {
                    scrollArea.scrollTop = newScrollTop;
                  }
                }
              };
              eventBus.on("scrollToNow", scrollToNow);
              return function() {
                return eventBus.off("scrollToNow", scrollToNow);
              };
            }, [eventBus, layoutContainer]);
            hooks_module_y(function() {
              eventBus.fire("scrollToNow", "smooth");
            }, [eventBus]);
            return _("div", {
              ref: indicatorRef,
              className: nowIndicator_classNames.line,
              style: {
                top: toPercent(top)
              },
              "data-testid": TEST_IDS.NOW_INDICATOR
            }, _("div", {
              className: nowIndicator_classNames.left,
              style: {
                width: leftLine.width,
                borderTop: pastBorder
              }
            }), _("div", {
              className: nowIndicator_classNames.marker,
              style: {
                left: leftLine.left,
                backgroundColor: bulletBackgroundColor
              }
            }), _("div", {
              className: nowIndicator_classNames.today,
              style: {
                left: leftLine.left,
                width: toPercent(columnWidth),
                borderTop: todayBorder
              }
            }), _("div", {
              className: nowIndicator_classNames.right,
              style: {
                left: rightLine.left,
                borderTop: futureBorder
              }
            }));
          }
          var nowIndicatorLabel_classNames = {
            now: addTimeGridPrefix("current-time"),
            dayDifference: addTimeGridPrefix("day-difference")
          };
          function NowIndicatorLabel(_ref) {
            var unit = _ref.unit, top = _ref.top, now = _ref.now, zonedNow = _ref.zonedNow;
            var color = useTheme(hooks_module_q(function(theme) {
              return theme.week.nowIndicatorLabel.color;
            }, []));
            var dateDifference = hooks_module_T(function() {
              return getDateDifference(zonedNow, now);
            }, [zonedNow, now]);
            var model = {
              unit,
              time: zonedNow,
              format: timeFormats[unit]
            };
            return _("div", {
              className: cls(nowIndicatorLabel_classNames.now),
              style: {
                top: toPercent(top),
                color
              },
              "data-testid": TEST_IDS.NOW_INDICATOR_LABEL
            }, dateDifference !== 0 && _("span", {
              className: cls(nowIndicatorLabel_classNames.dayDifference)
            }, "[".concat(dateDifference > 0 ? "+" : "-").concat(Math.abs(dateDifference), "]")), _(Template, {
              template: "timegridNowIndicatorLabel",
              param: model,
              as: "span"
            }));
          }
          var monthVisibleEventCountSelector = function monthVisibleEventCountSelector2(state) {
            var _state$options$month$;
            return (_state$options$month$ = state.options.month.visibleEventCount) !== null && _state$options$month$ !== void 0 ? _state$options$month$ : 6;
          };
          var showNowIndicatorOptionSelector = function showNowIndicatorOptionSelector2(state) {
            return state.options.week.showNowIndicator;
          };
          var showTimezoneCollapseButtonOptionSelector = function showTimezoneCollapseButtonOptionSelector2(state) {
            var _state$options$week$s;
            return (_state$options$week$s = state.options.week.showTimezoneCollapseButton) !== null && _state$options$week$s !== void 0 ? _state$options$week$s : false;
          };
          var timezonesCollapsedOptionSelector = function timezonesCollapsedOptionSelector2(state) {
            var _state$options$week$t;
            return (_state$options$week$t = state.options.week.timezonesCollapsed) !== null && _state$options$week$t !== void 0 ? _state$options$week$t : false;
          };
          function timeColumn_typeof(o2) {
            "@babel/helpers - typeof";
            return timeColumn_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, timeColumn_typeof(o2);
          }
          function _toArray(r2) {
            return timeColumn_arrayWithHoles(r2) || timeColumn_iterableToArray(r2) || timeColumn_unsupportedIterableToArray(r2) || timeColumn_nonIterableRest();
          }
          function timeColumn_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function timeColumn_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return timeColumn_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? timeColumn_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function timeColumn_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function timeColumn_iterableToArray(r2) {
            if ("undefined" != typeof Symbol && null != r2[Symbol.iterator] || null != r2["@@iterator"])
              return Array.from(r2);
          }
          function timeColumn_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function timeColumn_defineProperty(e2, r2, t) {
            return (r2 = timeColumn_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function timeColumn_toPropertyKey(t) {
            var i2 = timeColumn_toPrimitive(t, "string");
            return "symbol" == timeColumn_typeof(i2) ? i2 : i2 + "";
          }
          function timeColumn_toPrimitive(t, r2) {
            if ("object" != timeColumn_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != timeColumn_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          var timeColumn_classNames = {
            timeColumn: addTimeGridPrefix("time-column"),
            hourRows: addTimeGridPrefix("hour-rows"),
            time: addTimeGridPrefix("time"),
            timeLabel: addTimeGridPrefix("time-label"),
            first: addTimeGridPrefix("time-first"),
            last: addTimeGridPrefix("time-last"),
            hidden: addTimeGridPrefix("time-hidden")
          };
          function timeColumn_backgroundColorSelector(theme) {
            return {
              primaryTimezoneBackgroundColor: theme.week.timeGridLeft.backgroundColor,
              subTimezoneBackgroundColor: theme.week.timeGridLeftAdditionalTimezone.backgroundColor
            };
          }
          function timeColorSelector(theme) {
            return {
              pastTimeColor: theme.week.pastTime.color,
              futureTimeColor: theme.week.futureTime.color
            };
          }
          function HourRows(_ref) {
            var _rowsInfo$0$diffFromP;
            var rowsInfo = _ref.rowsInfo, isPrimary = _ref.isPrimary, borderRight = _ref.borderRight, width = _ref.width, nowIndicatorState = _ref.nowIndicatorState;
            var showNowIndicator = useStore(showNowIndicatorOptionSelector);
            var _useTheme = useTheme(timeColumn_backgroundColorSelector), primaryTimezoneBackgroundColor = _useTheme.primaryTimezoneBackgroundColor, subTimezoneBackgroundColor = _useTheme.subTimezoneBackgroundColor;
            var _useTheme2 = useTheme(timeColorSelector), pastTimeColor = _useTheme2.pastTimeColor, futureTimeColor = _useTheme2.futureTimeColor;
            var zonedNow = isPresent(nowIndicatorState) ? addMinutes(nowIndicatorState.now, (_rowsInfo$0$diffFromP = rowsInfo[0].diffFromPrimaryTimezone) !== null && _rowsInfo$0$diffFromP !== void 0 ? _rowsInfo$0$diffFromP : 0) : null;
            var backgroundColor = isPrimary ? primaryTimezoneBackgroundColor : subTimezoneBackgroundColor;
            return _("div", {
              role: "rowgroup",
              className: cls(timeColumn_classNames.hourRows),
              style: {
                width: toPercent(width),
                borderRight,
                backgroundColor
              }
            }, rowsInfo.map(function(_ref2) {
              var date2 = _ref2.date, top = _ref2.top, className2 = _ref2.className;
              var isPast = isPresent(zonedNow) && date2 < zonedNow;
              var color = isPast ? pastTimeColor : futureTimeColor;
              return _("div", {
                key: date2.getTime(),
                className: className2,
                style: {
                  top: toPercent(top),
                  color
                },
                role: "row"
              }, _(Template, {
                template: "timegridDisplay".concat(isPrimary ? "Primary" : "", "Time"),
                param: {
                  time: date2
                },
                as: "span"
              }));
            }), showNowIndicator && isPresent(nowIndicatorState) && isPresent(zonedNow) && _(NowIndicatorLabel, {
              unit: "hour",
              top: nowIndicatorState.top,
              now: nowIndicatorState.now,
              zonedNow
            }));
          }
          var TimeColumn = compat_module_x(function TimeColumn2(_ref3) {
            var timeGridRows = _ref3.timeGridRows, nowIndicatorState = _ref3.nowIndicatorState;
            var showNowIndicator = useStore(showNowIndicatorOptionSelector);
            var timezones = useStore(timezonesSelector);
            var timezonesCollapsed = useStore(timezonesCollapsedOptionSelector);
            var tzConverter = useTZConverter();
            var _useTheme3 = useTheme(weekTimeGridLeftSelector), width = _useTheme3.width, borderRight = _useTheme3.borderRight;
            var rowsByHour = hooks_module_T(function() {
              return timeGridRows.filter(function(_2, index) {
                return index % 2 === 0 || index === timeGridRows.length - 1;
              });
            }, [timeGridRows]);
            var hourRowsPropsMapper = hooks_module_q(function(row, index, diffFromPrimaryTimezone) {
              var shouldHideRow = function shouldHideRow2(_ref4) {
                var rowTop = _ref4.top, rowHeight = _ref4.height;
                if (!showNowIndicator || type_isNil(nowIndicatorState)) {
                  return false;
                }
                var indicatorTop = nowIndicatorState.top;
                return rowTop - rowHeight <= indicatorTop && indicatorTop <= rowTop + rowHeight;
              };
              var isFirst = index === 0;
              var isLast = index === rowsByHour.length - 1;
              var className2 = cls(timeColumn_classNames.time, timeColumn_defineProperty(timeColumn_defineProperty(timeColumn_defineProperty({}, timeColumn_classNames.first, isFirst), timeColumn_classNames.last, isLast), timeColumn_classNames.hidden, shouldHideRow(row)));
              var date2 = setTimeStrToDate(new date_TZDate(), isLast ? row.endTime : row.startTime);
              if (isPresent(diffFromPrimaryTimezone)) {
                date2 = addMinutes(date2, diffFromPrimaryTimezone);
              }
              return {
                date: date2,
                top: row.top,
                className: className2,
                diffFromPrimaryTimezone
              };
            }, [rowsByHour, nowIndicatorState, showNowIndicator]);
            var _timezones = _toArray(timezones), primaryTimezone = _timezones[0], otherTimezones = _timezones.slice(1);
            var hourRowsWidth = otherTimezones.length > 0 ? 100 / (otherTimezones.length + 1) : 100;
            var primaryTimezoneHourRowsProps = rowsByHour.map(function(row, index) {
              return hourRowsPropsMapper(row, index);
            });
            var otherTimezoneHourRowsProps = hooks_module_T(function() {
              if (otherTimezones.length === 0) {
                return [];
              }
              return otherTimezones.reverse().map(function(timezone) {
                var timezoneName = timezone.timezoneName;
                var primaryTimezoneOffset = tzConverter(primaryTimezone.timezoneName).getTimezoneOffset();
                var currentTimezoneOffset = tzConverter(timezoneName).getTimezoneOffset();
                var diffFromPrimaryTimezone = currentTimezoneOffset - primaryTimezoneOffset;
                return rowsByHour.map(function(row, index) {
                  return hourRowsPropsMapper(row, index, diffFromPrimaryTimezone);
                });
              });
            }, [hourRowsPropsMapper, otherTimezones, primaryTimezone, rowsByHour, tzConverter]);
            return _("div", {
              className: cls(timeColumn_classNames.timeColumn),
              style: {
                width
              },
              "data-testid": "timegrid-time-column"
            }, !timezonesCollapsed && otherTimezoneHourRowsProps.map(function(rowsInfo) {
              return _(HourRows, {
                key: rowsInfo[0].diffFromPrimaryTimezone,
                rowsInfo,
                isPrimary: false,
                borderRight,
                width: hourRowsWidth,
                nowIndicatorState
              });
            }), _(HourRows, {
              rowsInfo: primaryTimezoneHourRowsProps,
              isPrimary: true,
              borderRight,
              width: timezonesCollapsed ? 100 : hourRowsWidth,
              nowIndicatorState
            }));
          });
          function getTopPercentByTime(date2, start, end) {
            var startTime = start.getTime();
            var endTime = end.getTime();
            var time = math_limit(date2.getTime(), [startTime], [endTime]) - startTime;
            var max2 = endTime - startTime;
            var topPercent = ratio(max2, 100, time);
            return math_limit(topPercent, [0], [100]);
          }
          function getTopHeightByTime(start, end, minTime, maxTime) {
            var top = getTopPercentByTime(start, minTime, maxTime);
            var bottom = getTopPercentByTime(end, minTime, maxTime);
            var height = bottom - top;
            return {
              top,
              height
            };
          }
          function column_toConsumableArray(r2) {
            return column_arrayWithoutHoles(r2) || column_iterableToArray(r2) || controller_column_unsupportedIterableToArray(r2) || column_nonIterableSpread();
          }
          function column_nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function controller_column_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return controller_column_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? controller_column_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function column_iterableToArray(r2) {
            if ("undefined" != typeof Symbol && null != r2[Symbol.iterator] || null != r2["@@iterator"])
              return Array.from(r2);
          }
          function column_arrayWithoutHoles(r2) {
            if (Array.isArray(r2))
              return controller_column_arrayLikeToArray(r2);
          }
          function controller_column_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          var MIN_HEIGHT_PERCENT = 1;
          function column_isBetween(startColumnTime, endColumnTime) {
            return function(uiModel) {
              var _uiModel$model = uiModel.model, _uiModel$model$goingD = _uiModel$model.goingDuration, goingDuration = _uiModel$model$goingD === void 0 ? 0 : _uiModel$model$goingD, _uiModel$model$coming = _uiModel$model.comingDuration, comingDuration = _uiModel$model$coming === void 0 ? 0 : _uiModel$model$coming;
              var ownStarts = addMinutes(uiModel.getStarts(), -goingDuration);
              var ownEnds = addMinutes(uiModel.getEnds(), comingDuration);
              return !(ownEnds <= startColumnTime || ownStarts >= endColumnTime);
            };
          }
          function setInnerHeights(uiModel, options) {
            var renderStart = options.renderStart, renderEnd = options.renderEnd, modelStart = options.modelStart, modelEnd = options.modelEnd;
            var _uiModel$model2 = uiModel.model, _uiModel$model2$going = _uiModel$model2.goingDuration, goingDuration = _uiModel$model2$going === void 0 ? 0 : _uiModel$model2$going, _uiModel$model2$comin = _uiModel$model2.comingDuration, comingDuration = _uiModel$model2$comin === void 0 ? 0 : _uiModel$model2$comin;
            var modelDurationHeight = 100;
            if (goingDuration > 0) {
              var _getTopHeightByTime = getTopHeightByTime(renderStart, modelStart, renderStart, renderEnd), goingDurationHeight = _getTopHeightByTime.height;
              uiModel.goingDurationHeight = goingDurationHeight;
              modelDurationHeight -= goingDurationHeight;
            }
            if (comingDuration > 0) {
              var _getTopHeightByTime2 = getTopHeightByTime(modelEnd, renderEnd, renderStart, renderEnd), comingDurationHeight = _getTopHeightByTime2.height;
              uiModel.comingDurationHeight = comingDurationHeight;
              modelDurationHeight -= comingDurationHeight;
            }
            uiModel.modelDurationHeight = modelDurationHeight;
          }
          function setCroppedEdges(uiModel, options) {
            var goingStart = options.goingStart, comingEnd = options.comingEnd, startColumnTime = options.startColumnTime, endColumnTime = options.endColumnTime;
            if (goingStart < startColumnTime) {
              uiModel.croppedStart = true;
            }
            if (comingEnd > endColumnTime) {
              uiModel.croppedEnd = true;
            }
          }
          function getDuplicateLeft(uiModel, baseLeft) {
            var duplicateEvents = uiModel.duplicateEvents, duplicateEventIndex = uiModel.duplicateEventIndex;
            var prevEvent = duplicateEvents[duplicateEventIndex - 1];
            var left = baseLeft;
            if (prevEvent) {
              var _extractPercentPx = extractPercentPx("".concat(prevEvent.duplicateLeft)), leftPercent = _extractPercentPx.percent, leftPx = _extractPercentPx.px;
              var _extractPercentPx2 = extractPercentPx("".concat(prevEvent.duplicateWidth)), widthPercent = _extractPercentPx2.percent, widthPx = _extractPercentPx2.px;
              var percent = leftPercent + widthPercent;
              var px = leftPx + widthPx + TIME_EVENT_CONTAINER_MARGIN_LEFT;
              if (percent !== 0) {
                left = "calc(".concat(toPercent(percent), " ").concat(px > 0 ? "+" : "-", " ").concat(toPx(Math.abs(px)), ")");
              } else {
                left = toPx(px);
              }
            } else {
              left = toPercent(left);
            }
            return left;
          }
          function getDuplicateWidth(uiModel, baseWidth) {
            var collapse = uiModel.collapse;
            return collapse ? "".concat(COLLAPSED_DUPLICATE_EVENT_WIDTH_PX, "px") : "calc(".concat(toPercent(baseWidth), " - ").concat(toPx((COLLAPSED_DUPLICATE_EVENT_WIDTH_PX + TIME_EVENT_CONTAINER_MARGIN_LEFT) * (uiModel.duplicateEvents.length - 1) + TIME_EVENT_CONTAINER_MARGIN_LEFT), ")");
          }
          function setDimension(uiModel, options) {
            var startColumnTime = options.startColumnTime, endColumnTime = options.endColumnTime, baseWidth = options.baseWidth, columnIndex = options.columnIndex, renderStart = options.renderStart, renderEnd = options.renderEnd;
            var duplicateEvents = uiModel.duplicateEvents;
            var _getTopHeightByTime3 = getTopHeightByTime(renderStart, renderEnd, startColumnTime, endColumnTime), top = _getTopHeightByTime3.top, height = _getTopHeightByTime3.height;
            var dimension = {
              top,
              left: baseWidth * columnIndex,
              width: baseWidth,
              height: Math.max(MIN_HEIGHT_PERCENT, height),
              duplicateLeft: "",
              duplicateWidth: ""
            };
            if (duplicateEvents.length > 0) {
              dimension.duplicateLeft = getDuplicateLeft(uiModel, dimension.left);
              dimension.duplicateWidth = getDuplicateWidth(uiModel, dimension.width);
            }
            uiModel.setUIProps(dimension);
          }
          function getRenderInfoOptions(uiModel, columnIndex, baseWidth, startColumnTime, endColumnTime) {
            var _uiModel$model3 = uiModel.model, _uiModel$model3$going = _uiModel$model3.goingDuration, goingDuration = _uiModel$model3$going === void 0 ? 0 : _uiModel$model3$going, _uiModel$model3$comin = _uiModel$model3.comingDuration, comingDuration = _uiModel$model3$comin === void 0 ? 0 : _uiModel$model3$comin;
            var modelStart = uiModel.getStarts();
            var modelEnd = uiModel.getEnds();
            var goingStart = addMinutes(modelStart, -goingDuration);
            var comingEnd = addMinutes(modelEnd, comingDuration);
            var renderStart = max(goingStart, startColumnTime);
            var renderEnd = min(comingEnd, endColumnTime);
            return {
              baseWidth,
              columnIndex,
              modelStart,
              modelEnd,
              renderStart,
              renderEnd,
              goingStart,
              comingEnd,
              startColumnTime,
              endColumnTime,
              duplicateEvents: uiModel.duplicateEvents
            };
          }
          function setRenderInfo(_ref) {
            var uiModel = _ref.uiModel, columnIndex = _ref.columnIndex, baseWidth = _ref.baseWidth, startColumnTime = _ref.startColumnTime, endColumnTime = _ref.endColumnTime, _ref$isDuplicateEvent = _ref.isDuplicateEvent, isDuplicateEvent = _ref$isDuplicateEvent === void 0 ? false : _ref$isDuplicateEvent;
            if (!isDuplicateEvent && uiModel.duplicateEvents.length > 0) {
              uiModel.duplicateEvents.forEach(function(event) {
                setRenderInfo({
                  uiModel: event,
                  columnIndex,
                  baseWidth,
                  startColumnTime,
                  endColumnTime,
                  isDuplicateEvent: true
                });
              });
              return;
            }
            var renderInfoOptions = getRenderInfoOptions(uiModel, columnIndex, baseWidth, startColumnTime, endColumnTime);
            setDimension(uiModel, renderInfoOptions);
            setInnerHeights(uiModel, renderInfoOptions);
            setCroppedEdges(uiModel, renderInfoOptions);
          }
          function setDuplicateEvents(uiModels, options, selectedDuplicateEventCid) {
            var getDuplicateEvents = options.getDuplicateEvents, getMainEvent = options.getMainEvent;
            var eventObjects = uiModels.map(function(uiModel) {
              return uiModel.model.toEventObject();
            });
            uiModels.forEach(function(targetUIModel) {
              if (targetUIModel.collapse || targetUIModel.duplicateEvents.length > 0) {
                return;
              }
              var duplicateEvents = getDuplicateEvents(targetUIModel.model.toEventObject(), eventObjects);
              if (duplicateEvents.length <= 1) {
                return;
              }
              var mainEvent = getMainEvent(duplicateEvents);
              var duplicateEventUIModels = duplicateEvents.map(function(event) {
                return uiModels.find(function(uiModel) {
                  return uiModel.cid() === event.__cid;
                });
              });
              var isSelectedGroup = !!(selectedDuplicateEventCid > DEFAULT_DUPLICATE_EVENT_CID && duplicateEvents.find(function(event) {
                return event.__cid === selectedDuplicateEventCid;
              }));
              var duplicateStarts = duplicateEvents.reduce(function(acc, _ref2) {
                var start = _ref2.start, goingDuration = _ref2.goingDuration;
                var renderStart = addMinutes(start, -goingDuration);
                return min(acc, renderStart);
              }, duplicateEvents[0].start);
              var duplicateEnds = duplicateEvents.reduce(function(acc, _ref3) {
                var end = _ref3.end, comingDuration = _ref3.comingDuration;
                var renderEnd = addMinutes(end, comingDuration);
                return max(acc, renderEnd);
              }, duplicateEvents[0].end);
              duplicateEventUIModels.forEach(function(event, index) {
                var isMain = event.cid() === mainEvent.__cid;
                var collapse = !(isSelectedGroup && event.cid() === selectedDuplicateEventCid || !isSelectedGroup && isMain);
                event.setUIProps({
                  duplicateEvents: duplicateEventUIModels,
                  duplicateEventIndex: index,
                  collapse,
                  isMain,
                  duplicateStarts,
                  duplicateEnds
                });
              });
            });
            return uiModels;
          }
          function setRenderInfoOfUIModels(events, startColumnTime, endColumnTime, selectedDuplicateEventCid, collapseDuplicateEventsOptions) {
            var uiModels = events.filter(isTimeEvent).filter(column_isBetween(startColumnTime, endColumnTime)).sort(array.compare.event.asc);
            if (collapseDuplicateEventsOptions) {
              setDuplicateEvents(uiModels, collapseDuplicateEventsOptions, selectedDuplicateEventCid);
            }
            var expandedEvents = uiModels.filter(function(uiModel) {
              return !uiModel.collapse;
            });
            var uiModelColl = createEventCollection.apply(void 0, column_toConsumableArray(expandedEvents));
            var usingTravelTime = true;
            var collisionGroups = getCollisionGroup(expandedEvents, usingTravelTime);
            var matrices = getMatrices(uiModelColl, collisionGroups, usingTravelTime);
            matrices.forEach(function(matrix) {
              var maxRowLength = Math.max.apply(Math, column_toConsumableArray(matrix.map(function(row) {
                return row.length;
              })));
              var baseWidth = Math.round(100 / maxRowLength);
              matrix.forEach(function(row) {
                row.forEach(function(uiModel, columnIndex) {
                  setRenderInfo({
                    uiModel,
                    columnIndex,
                    baseWidth,
                    startColumnTime,
                    endColumnTime
                  });
                });
              });
            });
            return uiModels;
          }
          function useInterval(callback, delay) {
            var savedCallback = hooks_module_A(callback);
            hooks_module_y(function() {
              savedCallback.current = callback;
            }, [callback]);
            hooks_module_y(function() {
              var tick = function tick2() {
                return savedCallback.current();
              };
              var intervalDelay = delay !== null && delay !== void 0 ? delay : -1;
              if (intervalDelay > 0) {
                var id = setInterval(tick, intervalDelay);
                return function() {
                  return clearInterval(id);
                };
              }
            }, [delay]);
          }
          function useIsMounted() {
            var isMountedRef = hooks_module_A(true);
            hooks_module_y(function() {
              return function() {
                isMountedRef.current = false;
              };
            }, []);
            return hooks_module_q(function() {
              return isMountedRef.current;
            }, []);
          }
          function timeGrid_slicedToArray(r2, e2) {
            return timeGrid_arrayWithHoles(r2) || timeGrid_iterableToArrayLimit(r2, e2) || timeGrid_unsupportedIterableToArray(r2, e2) || timeGrid_nonIterableRest();
          }
          function timeGrid_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function timeGrid_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return timeGrid_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? timeGrid_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function timeGrid_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function timeGrid_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function timeGrid_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          var timeGrid_classNames = {
            timegrid: cls(className),
            scrollArea: cls(addTimeGridPrefix("scroll-area"))
          };
          function TimeGrid(_ref) {
            var timeGridData = _ref.timeGridData, events = _ref.events;
            var _useStore = useStore(optionsSelector), isReadOnly = _useStore.isReadOnly, _useStore$week = _useStore.week, narrowWeekend = _useStore$week.narrowWeekend, startDayOfWeek = _useStore$week.startDayOfWeek, collapseDuplicateEvents = _useStore$week.collapseDuplicateEvents;
            var showNowIndicator = useStore(showNowIndicatorOptionSelector);
            var selectedDuplicateEventCid = useStore(function(state) {
              return state.weekViewLayout.selectedDuplicateEventCid;
            });
            var _usePrimaryTimezone = usePrimaryTimezone(), _usePrimaryTimezone2 = timeGrid_slicedToArray(_usePrimaryTimezone, 2), getNow = _usePrimaryTimezone2[1];
            var isMounted = useIsMounted();
            var _useTheme = useTheme(weekTimeGridLeftSelector), timeGridLeftWidth = _useTheme.width;
            var _useState = hooks_module_h(null), _useState2 = timeGrid_slicedToArray(_useState, 2), nowIndicatorState = _useState2[0], setNowIndicatorState = _useState2[1];
            var columns = timeGridData.columns, rows = timeGridData.rows;
            var lastColumnIndex = columns.length - 1;
            var totalUIModels = hooks_module_T(function() {
              return columns.map(function(_ref2) {
                var date2 = _ref2.date;
                return events.filter(column_isBetween(toStartOfDay(date2), toEndOfDay(date2))).map(function(uiModel) {
                  return uiModel.clone();
                });
              }).map(function(uiModelsByColumn, columnIndex) {
                return setRenderInfoOfUIModels(uiModelsByColumn, setTimeStrToDate(columns[columnIndex].date, first(rows).startTime), setTimeStrToDate(columns[columnIndex].date, last(rows).endTime), selectedDuplicateEventCid, collapseDuplicateEvents);
              });
            }, [columns, rows, events, selectedDuplicateEventCid, collapseDuplicateEvents]);
            var currentDateData = hooks_module_T(function() {
              var now = getNow();
              var currentDateIndexInColumns = columns.findIndex(function(column) {
                return isSameDate(column.date, now);
              });
              if (currentDateIndexInColumns < 0) {
                return null;
              }
              var startTime = setTimeStrToDate(columns[currentDateIndexInColumns].date, timeGridData.rows[0].startTime);
              var endTime = setTimeStrToDate(columns[currentDateIndexInColumns].date, last(timeGridData.rows).endTime);
              return {
                startTime,
                endTime,
                currentDateIndex: currentDateIndexInColumns
              };
            }, [columns, getNow, timeGridData.rows]);
            var _useDOMNode = useDOMNode(), _useDOMNode2 = timeGrid_slicedToArray(_useDOMNode, 2), columnsContainer = _useDOMNode2[0], setColumnsContainer = _useDOMNode2[1];
            var gridPositionFinder = hooks_module_T(function() {
              return createGridPositionFinder({
                rowsCount: rows.length,
                columnsCount: columns.length,
                container: columnsContainer,
                narrowWeekend,
                startDayOfWeek
              });
            }, [columns.length, columnsContainer, narrowWeekend, rows.length, startDayOfWeek]);
            var onMouseDown = useGridSelection({
              type: "timeGrid",
              gridPositionFinder,
              selectionSorter: timeGridSelectionHelper.sortSelection,
              dateGetter: timeGridSelectionHelper.getDateFromCollection,
              dateCollection: timeGridData
            });
            var updateTimeGridIndicator = hooks_module_q(function() {
              if (isPresent(currentDateData)) {
                var startTime = currentDateData.startTime, endTime = currentDateData.endTime;
                var now = getNow();
                if (startTime <= now && now <= endTime) {
                  setNowIndicatorState({
                    top: getTopPercentByTime(now, startTime, endTime),
                    now
                  });
                }
              }
            }, [currentDateData, getNow]);
            hooks_module_(function() {
              if (isMounted()) {
                var _currentDateData$curr;
                if (((_currentDateData$curr = currentDateData === null || currentDateData === void 0 ? void 0 : currentDateData.currentDateIndex) !== null && _currentDateData$curr !== void 0 ? _currentDateData$curr : -1) >= 0) {
                  updateTimeGridIndicator();
                } else {
                  setNowIndicatorState(null);
                }
              }
            }, [currentDateData, isMounted, updateTimeGridIndicator]);
            useInterval(updateTimeGridIndicator, isPresent(currentDateData) ? MS_PER_MINUTES : null);
            return _("div", {
              className: timeGrid_classNames.timegrid
            }, _("div", {
              className: timeGrid_classNames.scrollArea
            }, _(TimeColumn, {
              timeGridRows: rows,
              nowIndicatorState
            }), _("div", {
              className: cls("columns"),
              style: {
                left: timeGridLeftWidth
              },
              ref: setColumnsContainer,
              onMouseDown: passConditionalProp(!isReadOnly, onMouseDown)
            }, _(GridLines, {
              timeGridRows: rows
            }), _(movingEventShadow_MovingEventShadow, {
              gridPositionFinder,
              timeGridData
            }), columns.map(function(column, index) {
              return _(Column, {
                key: column.date.toString(),
                timeGridData,
                columnDate: column.date,
                columnWidth: toPercent(column.width),
                columnIndex: index,
                totalUIModels,
                gridPositionFinder,
                isLastColumn: index === lastColumnIndex
              });
            }), showNowIndicator && isPresent(currentDateData) && isPresent(nowIndicatorState) ? _(NowIndicator, {
              top: nowIndicatorState.top,
              columnWidth: columns[0].width,
              columnCount: columns.length,
              columnIndex: currentDateData.currentDateIndex
            }) : null)));
          }
          function TimezoneCollapseButton(_ref) {
            var isCollapsed = _ref.isCollapsed;
            var eventBus = useEventBus();
            var iconClassName = cls("icon", {
              "ic-arrow-right": isCollapsed,
              "ic-arrow-left": !isCollapsed
            });
            return _("button", {
              className: cls(addTimeGridPrefix("timezone-collapse-button")),
              "aria-expanded": !isCollapsed,
              onClick: function onClick() {
                return eventBus.fire("clickTimezonesCollapseBtn", isCollapsed);
              }
            }, _("span", {
              className: iconClassName,
              role: "img"
            }));
          }
          function _extends() {
            return _extends = Object.assign ? Object.assign.bind() : function(n2) {
              for (var e2 = 1; e2 < arguments.length; e2++) {
                var t = arguments[e2];
                for (var r2 in t)
                  ({}).hasOwnProperty.call(t, r2) && (n2[r2] = t[r2]);
              }
              return n2;
            }, _extends.apply(null, arguments);
          }
          function timezoneLabels_toArray(r2) {
            return timezoneLabels_arrayWithHoles(r2) || timezoneLabels_iterableToArray(r2) || timezoneLabels_unsupportedIterableToArray(r2) || timezoneLabels_nonIterableRest();
          }
          function timezoneLabels_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function timezoneLabels_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return timezoneLabels_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? timezoneLabels_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function timezoneLabels_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function timezoneLabels_iterableToArray(r2) {
            if ("undefined" != typeof Symbol && null != r2[Symbol.iterator] || null != r2["@@iterator"])
              return Array.from(r2);
          }
          function timezoneLabels_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function TimezoneLabel(_ref) {
            var label = _ref.label, offset = _ref.offset, tooltip = _ref.tooltip, _ref$width = _ref.width, width = _ref$width === void 0 ? 100 : _ref$width, left = _ref.left;
            return _("div", {
              title: tooltip,
              className: cls(addTimeGridPrefix("timezone-label")),
              style: {
                width: toPercent(width),
                height: toPercent(100),
                left: toPercent(left)
              },
              role: "gridcell"
            }, _(Template, {
              template: "timezoneDisplayLabel",
              param: {
                displayLabel: label,
                timezoneOffset: offset
              },
              as: "span"
            }));
          }
          function useTimezoneCollapseOptions() {
            var showTimezoneCollapseButton = useStore(showTimezoneCollapseButtonOptionSelector);
            var timezonesCollapsed = useStore(timezonesCollapsedOptionSelector);
            return hooks_module_T(function() {
              return {
                showTimezoneCollapseButton,
                timezonesCollapsed
              };
            }, [showTimezoneCollapseButton, timezonesCollapsed]);
          }
          function TimezoneLabels(_ref2) {
            var top = _ref2.top;
            var timezones = useStore(timezonesSelector);
            var _useTheme = useTheme(weekTimeGridLeftSelector), width = _useTheme.width;
            var tzConverter = useTZConverter();
            var _useTimezoneCollapseO = useTimezoneCollapseOptions(), showTimezoneCollapseButton = _useTimezoneCollapseO.showTimezoneCollapseButton, timezonesCollapsed = _useTimezoneCollapseO.timezonesCollapsed;
            if (timezones.length <= 1) {
              return null;
            }
            var timezoneLabelProps = timezones.map(function(_ref3) {
              var displayLabel = _ref3.displayLabel, timezoneName = _ref3.timezoneName, tooltip = _ref3.tooltip;
              return !isUndefined_default()(displayLabel) ? {
                label: displayLabel,
                offset: null,
                tooltip: tooltip !== null && tooltip !== void 0 ? tooltip : timezoneName
              } : {
                label: null,
                offset: tzConverter(timezoneName).getTimezoneOffset(),
                tooltip: tooltip !== null && tooltip !== void 0 ? tooltip : timezoneName
              };
            });
            var _timezoneLabelProps = timezoneLabels_toArray(timezoneLabelProps), primaryTimezone = _timezoneLabelProps[0], restTimezones = _timezoneLabelProps.slice(1);
            var subTimezones = restTimezones.reverse();
            var timezonesCount = timezonesCollapsed ? 1 : timezones.length;
            var timezoneLabelWidth = 100 / timezonesCount;
            return _("div", {
              style: {
                top,
                width
              },
              role: "columnheader",
              className: cls("timezone-labels-slot")
            }, !timezonesCollapsed && subTimezones.map(function(subTimezone, index) {
              var _subTimezone$label;
              return _(TimezoneLabel, _extends({
                key: "subTimezone-".concat((_subTimezone$label = subTimezone.label) !== null && _subTimezone$label !== void 0 ? _subTimezone$label : subTimezone.offset),
                width: timezoneLabelWidth,
                left: timezoneLabelWidth * index
              }, subTimezone));
            }), showTimezoneCollapseButton && _(TimezoneCollapseButton, {
              isCollapsed: timezonesCollapsed
            }), _(TimezoneLabel, _extends({
              width: timezoneLabelWidth,
              left: timezoneLabelWidth * subTimezones.length
            }, primaryTimezone)));
          }
          var VIEW_TYPE = {
            MONTH: "month",
            WEEK: "week",
            DAY: "day"
          };
          var DEFAULT_TASK_PANEL = ["milestone", "task"];
          var DEFAULT_EVENT_PANEL = ["allday", "time"];
          function view_toConsumableArray(r2) {
            return view_arrayWithoutHoles(r2) || view_iterableToArray(r2) || view_unsupportedIterableToArray(r2) || view_nonIterableSpread();
          }
          function view_nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function view_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return view_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? view_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function view_iterableToArray(r2) {
            if ("undefined" != typeof Symbol && null != r2[Symbol.iterator] || null != r2["@@iterator"])
              return Array.from(r2);
          }
          function view_arrayWithoutHoles(r2) {
            if (Array.isArray(r2))
              return view_arrayLikeToArray(r2);
          }
          function view_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function getActivePanels(taskView, eventView) {
            var activePanels = [];
            if (taskView === true) {
              activePanels.push.apply(activePanels, view_toConsumableArray(DEFAULT_TASK_PANEL));
            } else if (Array.isArray(taskView)) {
              activePanels.push.apply(activePanels, view_toConsumableArray(taskView));
            }
            if (eventView === true) {
              activePanels.push.apply(activePanels, view_toConsumableArray(DEFAULT_EVENT_PANEL));
            } else if (Array.isArray(eventView)) {
              activePanels.push.apply(activePanels, view_toConsumableArray(eventView));
            }
            return activePanels;
          }
          function useEventsWithTimezone(events) {
            var primaryTimezoneName = useStore(primaryTimezoneSelector);
            var tzConverter = useTZConverter();
            return hooks_module_T(function() {
              if (primaryTimezoneName === "Local") {
                return events;
              }
              var isSystemUsingDST = isUsingDST(new date_TZDate());
              var _events$groupBy = events.groupBy(function(eventModel) {
                return eventModel.category === "time" ? "timedEvents" : "totalEvents";
              }), _events$groupBy$timed = _events$groupBy.timedEvents, timedEvents = _events$groupBy$timed === void 0 ? createEventCollection() : _events$groupBy$timed, _events$groupBy$total = _events$groupBy.totalEvents, totalEvents = _events$groupBy$total === void 0 ? createEventCollection() : _events$groupBy$total;
              timedEvents.each(function(eventModel) {
                var clonedEventModel = object_clone(eventModel);
                var zonedStart = tzConverter(primaryTimezoneName, clonedEventModel.start);
                var zonedEnd = tzConverter(primaryTimezoneName, clonedEventModel.end);
                if (isSystemUsingDST) {
                  if (!isUsingDST(zonedStart)) {
                    zonedStart = zonedStart.addHours(1);
                  }
                  if (!isUsingDST(zonedEnd)) {
                    zonedEnd = zonedEnd.addHours(1);
                  }
                } else {
                  if (isUsingDST(zonedStart)) {
                    zonedStart = zonedStart.addHours(-1);
                  }
                  if (isUsingDST(zonedEnd)) {
                    zonedEnd = zonedEnd.addHours(-1);
                  }
                }
                clonedEventModel.start = zonedStart;
                clonedEventModel.end = zonedEnd;
                totalEvents.add(clonedEventModel);
              });
              return totalEvents;
            }, [events, primaryTimezoneName, tzConverter]);
          }
          function useCalendarData_typeof(o2) {
            "@babel/helpers - typeof";
            return useCalendarData_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, useCalendarData_typeof(o2);
          }
          function useCalendarData_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function useCalendarData_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? useCalendarData_ownKeys(Object(t), true).forEach(function(r3) {
                useCalendarData_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : useCalendarData_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function useCalendarData_defineProperty(e2, r2, t) {
            return (r2 = useCalendarData_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function useCalendarData_toPropertyKey(t) {
            var i2 = useCalendarData_toPrimitive(t, "string");
            return "symbol" == useCalendarData_typeof(i2) ? i2 : i2 + "";
          }
          function useCalendarData_toPrimitive(t, r2) {
            if ("object" != useCalendarData_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != useCalendarData_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function useCalendarData(calendar) {
            for (var _len = arguments.length, filters = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
              filters[_key - 1] = arguments[_key];
            }
            var filteredEvents = hooks_module_T(function() {
              return calendar.events.filter(Collection.and.apply(Collection, filters));
            }, [calendar.events, filters]);
            var filteredEventsWithTimezone = useEventsWithTimezone(filteredEvents);
            return hooks_module_T(function() {
              return useCalendarData_objectSpread(useCalendarData_objectSpread({}, calendar), {}, {
                events: filteredEventsWithTimezone
              });
            }, [calendar, filteredEventsWithTimezone]);
          }
          function isTimeGridDraggingType(draggingItemType) {
            return /^(event|gridSelection)\/timeGrid/.test(draggingItemType !== null && draggingItemType !== void 0 ? draggingItemType : "");
          }
          function useTimeGridScrollSync(scrollArea, rowCount) {
            useTransientUpdate(dndSelector, function(_ref) {
              var y2 = _ref.y, draggingItemType = _ref.draggingItemType, draggingState = _ref.draggingState;
              if (isPresent(scrollArea) && isTimeGridDraggingType(draggingItemType) && draggingState === DraggingState.DRAGGING && isPresent(y2)) {
                var offsetTop = scrollArea.offsetTop, offsetHeight = scrollArea.offsetHeight, scrollHeight = scrollArea.scrollHeight;
                var scrollBoundary = Math.floor(scrollHeight / rowCount);
                var layoutHeight = offsetTop + offsetHeight;
                if (y2 < offsetTop + scrollBoundary) {
                  var scrollDiff = y2 - (offsetTop + scrollBoundary);
                  scrollArea.scrollTop = Math.max(0, scrollArea.scrollTop + scrollDiff);
                } else if (y2 > layoutHeight - scrollBoundary) {
                  var _scrollDiff = y2 - (layoutHeight - scrollBoundary);
                  scrollArea.scrollTop = Math.min(offsetHeight, scrollArea.scrollTop + _scrollDiff);
                }
              }
            });
          }
          function useTimezoneLabelsTop_slicedToArray(r2, e2) {
            return useTimezoneLabelsTop_arrayWithHoles(r2) || useTimezoneLabelsTop_iterableToArrayLimit(r2, e2) || useTimezoneLabelsTop_unsupportedIterableToArray(r2, e2) || useTimezoneLabelsTop_nonIterableRest();
          }
          function useTimezoneLabelsTop_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function useTimezoneLabelsTop_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return useTimezoneLabelsTop_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? useTimezoneLabelsTop_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function useTimezoneLabelsTop_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function useTimezoneLabelsTop_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function useTimezoneLabelsTop_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function timegridHeightSelector(state) {
            var _state$weekViewLayout;
            return (_state$weekViewLayout = state.weekViewLayout) === null || _state$weekViewLayout === void 0 || (_state$weekViewLayout = _state$weekViewLayout.dayGridRows) === null || _state$weekViewLayout === void 0 || (_state$weekViewLayout = _state$weekViewLayout.time) === null || _state$weekViewLayout === void 0 ? void 0 : _state$weekViewLayout.height;
          }
          function useTimezoneLabelsTop(timePanel) {
            var timeGridPanelHeight = useStore(timegridHeightSelector);
            var _useState = hooks_module_h(null), _useState2 = useTimezoneLabelsTop_slicedToArray(_useState, 2), stickyTop = _useState2[0], setStickyTop = _useState2[1];
            hooks_module_(function() {
              if (isPresent(timeGridPanelHeight) && timePanel) {
                setStickyTop(timePanel.offsetTop);
              }
            }, [timeGridPanelHeight, timePanel]);
            return stickyTop;
          }
          function day_slicedToArray(r2, e2) {
            return day_arrayWithHoles(r2) || day_iterableToArrayLimit(r2, e2) || day_unsupportedIterableToArray(r2, e2) || day_nonIterableRest();
          }
          function day_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function day_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return day_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? day_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function day_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function day_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function day_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function useDayViewState() {
            var calendar = useStore(calendarSelector);
            var options = useStore(optionsSelector);
            var _useStore = useStore(weekViewLayoutSelector), gridRowLayout = _useStore.dayGridRows, lastPanelType = _useStore.lastPanelType;
            var _useStore2 = useStore(viewSelector), renderDate = _useStore2.renderDate;
            return hooks_module_T(function() {
              return {
                calendar,
                options,
                gridRowLayout,
                lastPanelType,
                renderDate
              };
            }, [calendar, options, gridRowLayout, lastPanelType, renderDate]);
          }
          function day_Day() {
            var _options$week$dayName, _options$week;
            var _useDayViewState = useDayViewState(), calendar = _useDayViewState.calendar, options = _useDayViewState.options, gridRowLayout = _useDayViewState.gridRowLayout, lastPanelType = _useDayViewState.lastPanelType, renderDate = _useDayViewState.renderDate;
            var primaryTimezoneName = useStore(primaryTimezoneSelector);
            var gridHeaderMarginLeft = useTheme(hooks_module_q(function(theme) {
              return theme.week.dayGridLeft.width;
            }, []));
            var _useDOMNode = useDOMNode(), _useDOMNode2 = day_slicedToArray(_useDOMNode, 2), timePanel = _useDOMNode2[0], setTimePanelRef = _useDOMNode2[1];
            var weekOptions = options.week;
            var narrowWeekend = weekOptions.narrowWeekend, startDayOfWeek = weekOptions.startDayOfWeek, workweek = weekOptions.workweek, hourStart = weekOptions.hourStart, hourEnd = weekOptions.hourEnd, eventView = weekOptions.eventView, taskView = weekOptions.taskView;
            var days = hooks_module_T(function() {
              return [renderDate];
            }, [renderDate]);
            var dayNames = getDayNames(days, (_options$week$dayName = (_options$week = options.week) === null || _options$week === void 0 ? void 0 : _options$week.dayNames) !== null && _options$week$dayName !== void 0 ? _options$week$dayName : []);
            var _getRowStyleInfo = getRowStyleInfo(days.length, narrowWeekend, startDayOfWeek, workweek), rowStyleInfo = _getRowStyleInfo.rowStyleInfo, cellWidthMap = _getRowStyleInfo.cellWidthMap;
            var calendarData = useCalendarData(calendar, options.eventFilter);
            var dayGridEvents = hooks_module_T(function() {
              var getFilterRange = function getFilterRange2() {
                if (primaryTimezoneName === "Local") {
                  return [toStartOfDay(days[0]), toEndOfDay(days[0])];
                }
                return [toStartOfDay(addDate(days[0], -1)), toEndOfDay(addDate(days[0], 1))];
              };
              var _getFilterRange = getFilterRange(), _getFilterRange2 = day_slicedToArray(_getFilterRange, 2), weekStartDate = _getFilterRange2[0], weekEndDate = _getFilterRange2[1];
              return getWeekViewEvents(days, calendarData, {
                narrowWeekend,
                hourStart,
                hourEnd,
                weekStartDate,
                weekEndDate
              });
            }, [calendarData, days, hourEnd, hourStart, narrowWeekend, primaryTimezoneName]);
            var timeGridData = hooks_module_T(function() {
              return createTimeGridData(days, {
                hourStart,
                hourEnd,
                narrowWeekend
              });
            }, [days, hourEnd, hourStart, narrowWeekend]);
            var activePanels = getActivePanels(taskView, eventView);
            var gridRows = activePanels.map(function(key) {
              var _gridRowLayout$rowTyp, _gridRowLayout$rowTyp2;
              if (key === "time") {
                return null;
              }
              var rowType = key;
              return _(Panel, {
                key: rowType,
                name: rowType,
                resizable: rowType !== lastPanelType
              }, rowType === "allday" ? _(AlldayGridRow, {
                events: dayGridEvents[rowType],
                rowStyleInfo,
                gridColWidthMap: cellWidthMap,
                weekDates: days,
                height: (_gridRowLayout$rowTyp = gridRowLayout[rowType]) === null || _gridRowLayout$rowTyp === void 0 ? void 0 : _gridRowLayout$rowTyp.height,
                options: weekOptions
              }) : _(OtherGridRow, {
                category: rowType,
                events: dayGridEvents[rowType],
                weekDates: days,
                height: (_gridRowLayout$rowTyp2 = gridRowLayout[rowType]) === null || _gridRowLayout$rowTyp2 === void 0 ? void 0 : _gridRowLayout$rowTyp2.height,
                options: weekOptions,
                gridColWidthMap: cellWidthMap
              }));
            });
            useTimeGridScrollSync(timePanel, timeGridData.rows.length);
            var stickyTop = useTimezoneLabelsTop(timePanel);
            return _(Layout, {
              className: cls("day-view"),
              autoAdjustPanels: true
            }, _(Panel, {
              name: "day-view-day-names",
              initialHeight: WEEK_DAY_NAME_HEIGHT + WEEK_DAY_NAME_BORDER
            }, _(GridHeader, {
              type: "week",
              dayNames,
              marginLeft: gridHeaderMarginLeft,
              rowStyleInfo
            })), gridRows, activePanels.includes("time") ? _(Panel, {
              name: "time",
              autoSize: 1,
              ref: setTimePanelRef
            }, _(TimeGrid, {
              events: dayGridEvents.time,
              timeGridData
            }), _(TimezoneLabels, {
              top: stickyTop
            })) : null);
          }
          function AccumulatedGridSelection(_ref) {
            var rowIndex = _ref.rowIndex, weekDates = _ref.weekDates, narrowWeekend = _ref.narrowWeekend;
            var gridSelectionDataByRow = useStore(hooks_module_q(function(state) {
              return state.gridSelection.accumulated.dayGridMonth.map(function(gridSelection) {
                return dayGridMonthSelectionHelper.calculateSelection(gridSelection, rowIndex, weekDates.length);
              });
            }, [rowIndex, weekDates]));
            return _("div", {
              className: cls("accumulated-grid-selection")
            }, gridSelectionDataByRow.map(function(gridSelectionData) {
              return gridSelectionData ? _(GridSelection, {
                type: "accumulated",
                gridSelectionData,
                weekDates,
                narrowWeekend
              }) : null;
            }));
          }
          function MoreEventsButton(_ref) {
            var type = _ref.type, number = _ref.number, onClickButton = _ref.onClickButton, className2 = _ref.className;
            var _useDispatch = useDispatch("dnd"), reset = _useDispatch.reset;
            var handleMouseDown = function handleMouseDown2(e2) {
              e2.stopPropagation();
            };
            var handleClick = function handleClick2() {
              reset();
              onClickButton();
            };
            var exceedButtonTemplate = "monthGrid".concat(type === CellBarType.header ? "Header" : "Footer", "Exceed");
            return _("button", {
              type: "button",
              onMouseDown: handleMouseDown,
              onClick: handleClick,
              className: className2
            }, _(Template, {
              template: exceedButtonTemplate,
              param: number
            }));
          }
          function cellHeader_slicedToArray(r2, e2) {
            return cellHeader_arrayWithHoles(r2) || cellHeader_iterableToArrayLimit(r2, e2) || cellHeader_unsupportedIterableToArray(r2, e2) || cellHeader_nonIterableRest();
          }
          function cellHeader_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function cellHeader_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return cellHeader_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? cellHeader_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function cellHeader_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function cellHeader_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function cellHeader_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function getDateColor(_ref) {
            var date2 = _ref.date, theme = _ref.theme, renderDate = _ref.renderDate, isToday = _ref.isToday;
            var dayIndex = date2.getDay();
            var thisMonth = renderDate.getMonth();
            var isSameMonth2 = thisMonth === date2.getMonth();
            var _theme$common = theme.common, holiday = _theme$common.holiday, saturday = _theme$common.saturday, today = _theme$common.today, dayName = _theme$common.dayName, _theme$month = theme.month, dayExceptThisMonth = _theme$month.dayExceptThisMonth, holidayExceptThisMonth = _theme$month.holidayExceptThisMonth;
            if (isToday) {
              return today.color;
            }
            if (isSunday(dayIndex)) {
              return isSameMonth2 ? holiday.color : holidayExceptThisMonth.color;
            }
            if (isSaturday(dayIndex)) {
              return isSameMonth2 ? saturday.color : dayExceptThisMonth.color;
            }
            if (!isSameMonth2) {
              return dayExceptThisMonth.color;
            }
            return dayName.color;
          }
          function useCellHeaderTheme() {
            var common = useCommonTheme();
            var month = useMonthTheme();
            return hooks_module_T(function() {
              return {
                common,
                month
              };
            }, [common, month]);
          }
          function CellHeader(_ref2) {
            var _ref2$type = _ref2.type, type = _ref2$type === void 0 ? CellBarType.header : _ref2$type, _ref2$exceedCount = _ref2.exceedCount, exceedCount = _ref2$exceedCount === void 0 ? 0 : _ref2$exceedCount, date2 = _ref2.date, onClickExceedCount = _ref2.onClickExceedCount;
            var _useStore = useStore(viewSelector), renderDate = _useStore.renderDate;
            var _usePrimaryTimezone = usePrimaryTimezone(), _usePrimaryTimezone2 = cellHeader_slicedToArray(_usePrimaryTimezone, 2), getNow = _usePrimaryTimezone2[1];
            var theme = useCellHeaderTheme();
            var height = theme.month.gridCell["".concat(type, "Height")];
            var ymd = datetime_toFormat(date2, "YYYYMMDD");
            var todayYmd = datetime_toFormat(getNow(), "YYYYMMDD");
            var isToday = ymd === todayYmd;
            var templateParam = {
              date: datetime_toFormat(date2, "YYYY-MM-DD"),
              day: date2.getDay(),
              hiddenEventCount: exceedCount,
              isOtherMonth: date2.getMonth() !== renderDate.getMonth(),
              isToday: ymd === todayYmd,
              month: date2.getMonth(),
              ymd
            };
            var gridCellDateStyle = {
              color: getDateColor({
                date: date2,
                theme,
                isToday,
                renderDate
              })
            };
            var monthGridTemplate = "monthGrid".concat(capitalize(type));
            if (type_isNil(height)) {
              return null;
            }
            return _("div", {
              className: cls("grid-cell-".concat(type)),
              style: {
                height
              }
            }, _("span", {
              className: cls("grid-cell-date"),
              style: gridCellDateStyle
            }, _(Template, {
              template: monthGridTemplate,
              param: templateParam
            })), exceedCount ? _(MoreEventsButton, {
              type,
              number: exceedCount,
              onClickButton: onClickExceedCount,
              className: cls("grid-cell-more-events")
            }) : null);
          }
          function gridCell_typeof(o2) {
            "@babel/helpers - typeof";
            return gridCell_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, gridCell_typeof(o2);
          }
          function gridCell_slicedToArray(r2, e2) {
            return gridCell_arrayWithHoles(r2) || gridCell_iterableToArrayLimit(r2, e2) || gridCell_unsupportedIterableToArray(r2, e2) || gridCell_nonIterableRest();
          }
          function gridCell_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function gridCell_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return gridCell_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? gridCell_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function gridCell_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function gridCell_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function gridCell_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function gridCell_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function gridCell_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? gridCell_ownKeys(Object(t), true).forEach(function(r3) {
                gridCell_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : gridCell_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function gridCell_defineProperty(e2, r2, t) {
            return (r2 = gridCell_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function gridCell_toPropertyKey(t) {
            var i2 = gridCell_toPrimitive(t, "string");
            return "symbol" == gridCell_typeof(i2) ? i2 : i2 + "";
          }
          function gridCell_toPrimitive(t, r2) {
            if ("object" != gridCell_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != gridCell_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function getSeeMorePopupSize(_ref) {
            var grid = _ref.grid, offsetWidth = _ref.offsetWidth, eventLength = _ref.eventLength, layerSize = _ref.layerSize;
            var minHeight = getSize(grid).height + MONTH_MORE_VIEW_PADDING * 2;
            var width = offsetWidth + MONTH_MORE_VIEW_PADDING * 2;
            var moreViewWidth = layerSize.width, moreViewHeight = layerSize.height;
            var MAX_DISPLAY_EVENT_COUNT = 10;
            width = Math.max(width, MONTH_MORE_VIEW_MIN_WIDTH);
            var height = MONTH_MORE_VIEW_HEADER_HEIGHT + MONTH_MORE_VIEW_HEADER_MARGIN_BOTTOM + MONTH_MORE_VIEW_PADDING;
            var eventHeight = MONTH_EVENT_HEIGHT + MONTH_EVENT_MARGIN_TOP;
            if (eventLength <= MAX_DISPLAY_EVENT_COUNT) {
              height += eventHeight * eventLength;
            } else {
              height += eventHeight * MAX_DISPLAY_EVENT_COUNT;
            }
            if (moreViewWidth) {
              width = moreViewWidth;
            }
            if (moreViewHeight) {
              height = moreViewHeight;
            }
            if (isNaN(height) || height < minHeight) {
              height = minHeight;
            }
            return {
              width,
              height
            };
          }
          function getSeeMorePopupPosition(popupSize, appContainerSize, cellRect) {
            var containerWidth = appContainerSize.width, containerHeight = appContainerSize.height, containerLeft = appContainerSize.left, containerTop = appContainerSize.top;
            var popupWidth = popupSize.width, popupHeight = popupSize.height;
            var containerRight = containerLeft + containerWidth;
            var containerBottom = containerTop + containerHeight;
            var left = cellRect.left + cellRect.width / 2 - popupWidth / 2;
            var top = cellRect.top;
            var isLeftOutOfContainer = left < containerLeft;
            var isRightOutOfContainer = left + popupWidth > containerRight;
            var isUpperOutOfContainer = top < containerTop;
            var isLowerOutOfContainer = top + popupHeight > containerBottom;
            if (isLeftOutOfContainer) {
              left = containerLeft;
            }
            if (isRightOutOfContainer) {
              left = containerRight - popupWidth;
            }
            if (isUpperOutOfContainer) {
              top = containerTop;
            }
            if (isLowerOutOfContainer) {
              top = containerBottom - popupHeight;
            }
            return {
              top: top + window.scrollY,
              left: left + window.scrollX
            };
          }
          function getSeeMorePopupRect(_ref2) {
            var layoutContainer = _ref2.layoutContainer, cell = _ref2.cell, popupSize = _ref2.popupSize;
            var containerRect = layoutContainer.getBoundingClientRect();
            var cellRect = cell.getBoundingClientRect();
            var popupPosition = getSeeMorePopupPosition(popupSize, containerRect, cellRect);
            return gridCell_objectSpread(gridCell_objectSpread({}, popupSize), popupPosition);
          }
          function usePopupPosition(eventLength, parentContainer, layoutContainer) {
            var _useTheme = useTheme(monthMoreViewSelector), moreViewWidth = _useTheme.width, moreViewHeight = _useTheme.height;
            var _useDOMNode = useDOMNode(), _useDOMNode2 = gridCell_slicedToArray(_useDOMNode, 2), container = _useDOMNode2[0], containerRefCallback = _useDOMNode2[1];
            var _useState = hooks_module_h(null), _useState2 = gridCell_slicedToArray(_useState, 2), popupPosition = _useState2[0], setPopupPosition = _useState2[1];
            hooks_module_y(function() {
              if (layoutContainer && parentContainer && container) {
                var popupSize = getSeeMorePopupSize({
                  grid: parentContainer,
                  offsetWidth: container.offsetWidth,
                  eventLength,
                  layerSize: {
                    width: moreViewWidth,
                    height: moreViewHeight
                  }
                });
                var rect = getSeeMorePopupRect({
                  cell: container,
                  layoutContainer,
                  popupSize
                });
                setPopupPosition(rect);
              }
            }, [layoutContainer, container, eventLength, parentContainer, moreViewWidth, moreViewHeight]);
            return {
              popupPosition,
              containerRefCallback
            };
          }
          function weekendBackgroundColorSelector(theme) {
            return theme.month.weekend.backgroundColor;
          }
          function gridCell_GridCell(_ref3) {
            var date2 = _ref3.date, _ref3$events = _ref3.events, events = _ref3$events === void 0 ? [] : _ref3$events, style = _ref3.style, parentContainer = _ref3.parentContainer, contentAreaHeight = _ref3.contentAreaHeight;
            var layoutContainer = useLayoutContainer();
            var _useDispatch = useDispatch("popup"), showSeeMorePopup = _useDispatch.showSeeMorePopup;
            var backgroundColor = useTheme(weekendBackgroundColorSelector);
            var _usePopupPosition = usePopupPosition(events.length, parentContainer, layoutContainer), popupPosition = _usePopupPosition.popupPosition, containerRefCallback = _usePopupPosition.containerRefCallback;
            var onOpenSeeMorePopup = hooks_module_q(function() {
              if (popupPosition) {
                showSeeMorePopup({
                  date: date2,
                  popupPosition,
                  events
                });
              }
            }, [date2, events, popupPosition, showSeeMorePopup]);
            var exceedCount = getExceedCount(events, contentAreaHeight, MONTH_EVENT_HEIGHT + MONTH_EVENT_MARGIN_TOP);
            return _("div", {
              className: cls("daygrid-cell"),
              style: gridCell_objectSpread(gridCell_objectSpread({}, style), {}, {
                backgroundColor: isWeekend(date2.getDay()) ? backgroundColor : "inherit"
              }),
              ref: containerRefCallback
            }, _(CellHeader, {
              type: CellBarType.header,
              exceedCount,
              date: date2,
              onClickExceedCount: onOpenSeeMorePopup
            }), _(CellHeader, {
              type: CellBarType.footer,
              exceedCount,
              date: date2,
              onClickExceedCount: onOpenSeeMorePopup
            }));
          }
          function gridRow_slicedToArray(r2, e2) {
            return gridRow_arrayWithHoles(r2) || gridRow_iterableToArrayLimit(r2, e2) || gridRow_unsupportedIterableToArray(r2, e2) || gridRow_nonIterableRest();
          }
          function gridRow_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function gridRow_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return gridRow_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? gridRow_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function gridRow_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function gridRow_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function gridRow_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          var GridRow = compat_module_x(function GridRow2(_ref) {
            var week = _ref.week, rowInfo = _ref.rowInfo, _ref$gridDateEventMod = _ref.gridDateEventModelMap, gridDateEventModelMap = _ref$gridDateEventMod === void 0 ? {} : _ref$gridDateEventMod, contentAreaHeight = _ref.contentAreaHeight;
            var _useDOMNode = useDOMNode(), _useDOMNode2 = gridRow_slicedToArray(_useDOMNode, 2), container = _useDOMNode2[0], containerRefCallback = _useDOMNode2[1];
            var border = useTheme(hooks_module_q(function(theme) {
              return theme.common.border;
            }, []));
            return _("div", {
              className: cls("weekday-grid"),
              style: {
                borderTop: border
              },
              ref: containerRefCallback
            }, week.map(function(date2, columnIndex) {
              var dayIndex = date2.getDay();
              var _rowInfo$columnIndex = rowInfo[columnIndex], width = _rowInfo$columnIndex.width, left = _rowInfo$columnIndex.left;
              var ymd = datetime_toFormat(toStartOfDay(date2), "YYYYMMDD");
              return _(gridCell_GridCell, {
                key: "daygrid-cell-".concat(dayIndex),
                date: date2,
                style: {
                  width: toPercent(width),
                  left: toPercent(left)
                },
                parentContainer: container,
                events: gridDateEventModelMap[ymd],
                contentAreaHeight
              });
            }));
          });
          function GridSelectionByRow(_ref) {
            var weekDates = _ref.weekDates, narrowWeekend = _ref.narrowWeekend, rowIndex = _ref.rowIndex;
            var gridSelectionDataByRow = useStore(hooks_module_q(function(state) {
              return dayGridMonthSelectionHelper.calculateSelection(state.gridSelection.dayGridMonth, rowIndex, weekDates.length);
            }, [rowIndex, weekDates.length]));
            if (type_isNil(gridSelectionDataByRow)) {
              return null;
            }
            return _(GridSelection, {
              type: "month",
              gridSelectionData: gridSelectionDataByRow,
              weekDates,
              narrowWeekend
            });
          }
          var MonthEvents = compat_module_x(function MonthEvents2(_ref) {
            var contentAreaHeight = _ref.contentAreaHeight, _ref$eventHeight = _ref.eventHeight, eventHeight = _ref$eventHeight === void 0 ? EVENT_HEIGHT : _ref$eventHeight, events = _ref.events, name = _ref.name, className2 = _ref.className;
            var _useTheme = useTheme(monthGridCellSelector), headerHeight = _useTheme.headerHeight;
            var dayEvents = events.filter(isWithinHeight(contentAreaHeight, eventHeight + MONTH_EVENT_MARGIN_TOP)).map(function(uiModel) {
              return _(HorizontalEvent, {
                key: "".concat(name, "-DayEvent-").concat(uiModel.cid()),
                uiModel,
                eventHeight,
                headerHeight: headerHeight !== null && headerHeight !== void 0 ? headerHeight : MONTH_CELL_BAR_HEIGHT
              });
            });
            return _("div", {
              className: className2
            }, dayEvents);
          });
          function useDayGridMonthEventMove_slicedToArray(r2, e2) {
            return useDayGridMonthEventMove_arrayWithHoles(r2) || useDayGridMonthEventMove_iterableToArrayLimit(r2, e2) || useDayGridMonthEventMove_unsupportedIterableToArray(r2, e2) || useDayGridMonthEventMove_nonIterableRest();
          }
          function useDayGridMonthEventMove_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function useDayGridMonthEventMove_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return useDayGridMonthEventMove_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? useDayGridMonthEventMove_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function useDayGridMonthEventMove_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function useDayGridMonthEventMove_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function useDayGridMonthEventMove_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function useDayGridMonthEventMove(_ref) {
            var dateMatrix = _ref.dateMatrix, rowInfo = _ref.rowInfo, gridPositionFinder = _ref.gridPositionFinder, rowIndex = _ref.rowIndex;
            var eventBus = useEventBus();
            var _useDraggingEvent = useDraggingEvent("dayGrid", "move"), isDraggingEnd = _useDraggingEvent.isDraggingEnd, isDraggingCanceled = _useDraggingEvent.isDraggingCanceled, movingEvent = _useDraggingEvent.draggingEvent, clearDraggingEvent = _useDraggingEvent.clearDraggingEvent;
            var _useCurrentPointerPos = useCurrentPointerPositionInGrid(gridPositionFinder), _useCurrentPointerPos2 = useDayGridMonthEventMove_slicedToArray(_useCurrentPointerPos, 2), currentGridPos = _useCurrentPointerPos2[0], clearCurrentGridPos = _useCurrentPointerPos2[1];
            var movingEventUIModel = hooks_module_T(function() {
              var shadowEventUIModel = null;
              if (movingEvent && (currentGridPos === null || currentGridPos === void 0 ? void 0 : currentGridPos.rowIndex) === rowIndex) {
                var _currentGridPos$colum, _currentGridPos$colum2;
                shadowEventUIModel = movingEvent;
                shadowEventUIModel.left = rowInfo[(_currentGridPos$colum = currentGridPos === null || currentGridPos === void 0 ? void 0 : currentGridPos.columnIndex) !== null && _currentGridPos$colum !== void 0 ? _currentGridPos$colum : 0].left;
                shadowEventUIModel.width = rowInfo[(_currentGridPos$colum2 = currentGridPos === null || currentGridPos === void 0 ? void 0 : currentGridPos.columnIndex) !== null && _currentGridPos$colum2 !== void 0 ? _currentGridPos$colum2 : 0].width;
              }
              return shadowEventUIModel;
            }, [movingEvent, currentGridPos === null || currentGridPos === void 0 ? void 0 : currentGridPos.rowIndex, currentGridPos === null || currentGridPos === void 0 ? void 0 : currentGridPos.columnIndex, rowIndex, rowInfo]);
            useWhen(function() {
              var shouldUpdate = !isDraggingCanceled && isPresent(movingEventUIModel) && isPresent(currentGridPos);
              if (shouldUpdate) {
                var preStartDate = movingEventUIModel.model.getStarts();
                var eventDuration = movingEventUIModel.duration();
                var currentDate = dateMatrix[currentGridPos.rowIndex][currentGridPos.columnIndex];
                var timeOffsetPerDay = getDateDifference(currentDate, preStartDate) * MS_PER_DAY;
                var newStartDate = new date_TZDate(preStartDate.getTime() + timeOffsetPerDay);
                var newEndDate = new date_TZDate(newStartDate.getTime() + eventDuration);
                eventBus.fire("beforeUpdateEvent", {
                  event: movingEventUIModel.model.toEventObject(),
                  changes: {
                    start: newStartDate,
                    end: newEndDate
                  }
                });
              }
              clearDraggingEvent();
              clearCurrentGridPos();
            }, isDraggingEnd);
            return movingEventUIModel;
          }
          function dayGridMonth_movingEventShadow_MovingEventShadow(_ref) {
            var dateMatrix = _ref.dateMatrix, gridPositionFinder = _ref.gridPositionFinder, rowInfo = _ref.rowInfo, rowIndex = _ref.rowIndex;
            var movingEvent = useDayGridMonthEventMove({
              dateMatrix,
              rowInfo,
              gridPositionFinder,
              rowIndex
            });
            if (type_isNil(movingEvent)) {
              return null;
            }
            return _(HorizontalEvent, {
              uiModel: movingEvent,
              movingLeft: movingEvent.left,
              eventHeight: EVENT_HEIGHT,
              headerHeight: MONTH_CELL_PADDING_TOP + MONTH_CELL_BAR_HEIGHT
            });
          }
          function useDayGridMonthEventResize_slicedToArray(r2, e2) {
            return useDayGridMonthEventResize_arrayWithHoles(r2) || useDayGridMonthEventResize_iterableToArrayLimit(r2, e2) || useDayGridMonthEventResize_unsupportedIterableToArray(r2, e2) || useDayGridMonthEventResize_nonIterableRest();
          }
          function useDayGridMonthEventResize_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function useDayGridMonthEventResize_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return useDayGridMonthEventResize_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? useDayGridMonthEventResize_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function useDayGridMonthEventResize_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function useDayGridMonthEventResize_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function useDayGridMonthEventResize_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function getRowPosOfUIModel(uiModel, dateRow) {
            var startColumnIndex = Math.max(getGridDateIndex(uiModel.getStarts(), dateRow), 0);
            var endColumnIndex = getGridDateIndex(uiModel.getEnds(), dateRow);
            return {
              startColumnIndex,
              endColumnIndex
            };
          }
          function useDayGridMonthEventResize(_ref) {
            var dateMatrix = _ref.dateMatrix, gridPositionFinder = _ref.gridPositionFinder, renderedUIModels = _ref.renderedUIModels, cellWidthMap = _ref.cellWidthMap, rowIndex = _ref.rowIndex;
            var eventBus = useEventBus();
            var _useDraggingEvent = useDraggingEvent("dayGrid", "resize"), isDraggingEnd = _useDraggingEvent.isDraggingEnd, isDraggingCanceled = _useDraggingEvent.isDraggingCanceled, resizingStartUIModel = _useDraggingEvent.draggingEvent, clearDraggingEvent = _useDraggingEvent.clearDraggingEvent;
            var _useCurrentPointerPos = useCurrentPointerPositionInGrid(gridPositionFinder), _useCurrentPointerPos2 = useDayGridMonthEventResize_slicedToArray(_useCurrentPointerPos, 2), currentGridPos = _useCurrentPointerPos2[0], clearCurrentGridPos = _useCurrentPointerPos2[1];
            var _useState = hooks_module_h(null), _useState2 = useDayGridMonthEventResize_slicedToArray(_useState, 2), guideProps = _useState2[0], setGuideProps = _useState2[1];
            var clearStates = hooks_module_q(function() {
              setGuideProps(null);
              clearCurrentGridPos();
              clearDraggingEvent();
            }, [clearCurrentGridPos, clearDraggingEvent]);
            var baseResizingInfo = hooks_module_T(function() {
              if (type_isNil(resizingStartUIModel)) {
                return null;
              }
              var resizeTargetUIModelRows = renderedUIModels.map(function(_ref2) {
                var uiModels = _ref2.uiModels;
                return uiModels.filter(function(uiModel) {
                  return uiModel.cid() === resizingStartUIModel.cid();
                });
              });
              var eventStartDateRowIndex = resizeTargetUIModelRows.findIndex(function(row) {
                return row.length > 0;
              });
              var eventEndDateRowIndex = findLastIndex(resizeTargetUIModelRows, function(row) {
                return row.length > 0;
              });
              var eventStartUIModelPos = getRowPosOfUIModel(resizeTargetUIModelRows[eventStartDateRowIndex][0], dateMatrix[eventStartDateRowIndex]);
              var eventEndUIModelPos = getRowPosOfUIModel(resizeTargetUIModelRows[eventEndDateRowIndex][0], dateMatrix[eventEndDateRowIndex]);
              return {
                eventStartDateColumnIndex: eventStartUIModelPos.startColumnIndex,
                eventStartDateRowIndex,
                eventEndDateColumnIndex: eventEndUIModelPos.endColumnIndex,
                eventEndDateRowIndex,
                resizeTargetUIModelRows
              };
            }, [dateMatrix, renderedUIModels, resizingStartUIModel]);
            var canCalculateProps = isPresent(baseResizingInfo) && isPresent(resizingStartUIModel) && isPresent(currentGridPos);
            hooks_module_y(function() {
              if (canCalculateProps && rowIndex === baseResizingInfo.eventStartDateRowIndex) {
                var eventStartDateRowIndex = baseResizingInfo.eventStartDateRowIndex, eventStartDateColumnIndex = baseResizingInfo.eventStartDateColumnIndex;
                var clonedUIModel = baseResizingInfo.resizeTargetUIModelRows[eventStartDateRowIndex][0].clone();
                var height;
                if (eventStartDateRowIndex === currentGridPos.rowIndex) {
                  height = cellWidthMap[eventStartDateColumnIndex][Math.max(eventStartDateColumnIndex, currentGridPos.columnIndex)];
                } else if (eventStartDateRowIndex > currentGridPos.rowIndex) {
                  height = cellWidthMap[eventStartDateColumnIndex][eventStartDateColumnIndex];
                } else {
                  height = cellWidthMap[eventStartDateColumnIndex][dateMatrix[rowIndex].length - 1];
                  clonedUIModel.setUIProps({
                    exceedRight: true
                  });
                }
                setGuideProps([clonedUIModel, height]);
              }
            }, [baseResizingInfo, canCalculateProps, cellWidthMap, currentGridPos, dateMatrix, rowIndex]);
            hooks_module_y(function() {
              if (canCalculateProps && baseResizingInfo.eventStartDateRowIndex < rowIndex && rowIndex < currentGridPos.rowIndex) {
                var clonedUIModel = resizingStartUIModel.clone();
                clonedUIModel.setUIProps({
                  left: 0,
                  exceedLeft: true,
                  exceedRight: true
                });
                setGuideProps([clonedUIModel, "100%"]);
              }
            }, [baseResizingInfo, canCalculateProps, currentGridPos, resizingStartUIModel, rowIndex]);
            hooks_module_y(function() {
              if (canCalculateProps && baseResizingInfo.eventStartDateRowIndex < currentGridPos.rowIndex && rowIndex === currentGridPos.rowIndex) {
                var clonedUIModel = resizingStartUIModel.clone();
                clonedUIModel.setUIProps({
                  left: 0,
                  exceedLeft: true
                });
                setGuideProps([clonedUIModel, cellWidthMap[0][currentGridPos.columnIndex]]);
              }
            }, [baseResizingInfo, canCalculateProps, cellWidthMap, currentGridPos, resizingStartUIModel, rowIndex]);
            hooks_module_y(function() {
              if (canCalculateProps && rowIndex > baseResizingInfo.eventStartDateRowIndex && rowIndex > currentGridPos.rowIndex) {
                setGuideProps(null);
              }
            }, [canCalculateProps, currentGridPos, baseResizingInfo, rowIndex]);
            useWhen(function() {
              if (canCalculateProps) {
                var eventStartDateColumnIndex = baseResizingInfo.eventStartDateColumnIndex, eventStartDateRowIndex = baseResizingInfo.eventStartDateRowIndex;
                var shouldUpdate = !isDraggingCanceled && (currentGridPos.rowIndex === eventStartDateRowIndex && currentGridPos.columnIndex >= eventStartDateColumnIndex || currentGridPos.rowIndex > eventStartDateRowIndex);
                if (shouldUpdate) {
                  var targetEndDate = dateMatrix[currentGridPos.rowIndex][currentGridPos.columnIndex];
                  eventBus.fire("beforeUpdateEvent", {
                    event: resizingStartUIModel.model.toEventObject(),
                    changes: {
                      end: targetEndDate
                    }
                  });
                }
              }
              clearStates();
            }, isDraggingEnd);
            return guideProps;
          }
          function resizingGuideByRow_slicedToArray(r2, e2) {
            return resizingGuideByRow_arrayWithHoles(r2) || resizingGuideByRow_iterableToArrayLimit(r2, e2) || resizingGuideByRow_unsupportedIterableToArray(r2, e2) || resizingGuideByRow_nonIterableRest();
          }
          function resizingGuideByRow_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function resizingGuideByRow_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return resizingGuideByRow_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? resizingGuideByRow_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function resizingGuideByRow_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function resizingGuideByRow_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function resizingGuideByRow_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function ResizingGuideByRow(_ref) {
            var dateMatrix = _ref.dateMatrix, cellWidthMap = _ref.cellWidthMap, gridPositionFinder = _ref.gridPositionFinder, renderedUIModels = _ref.renderedUIModels, rowIndex = _ref.rowIndex;
            var resizingGuideProps = useDayGridMonthEventResize({
              dateMatrix,
              gridPositionFinder,
              cellWidthMap,
              renderedUIModels,
              rowIndex
            });
            if (type_isNil(resizingGuideProps)) {
              return null;
            }
            var _resizingGuideProps = resizingGuideByRow_slicedToArray(resizingGuideProps, 2), uiModel = _resizingGuideProps[0], resizingWidth = _resizingGuideProps[1];
            return _("div", {
              className: cls("weekday-events")
            }, _(HorizontalEvent, {
              key: "resizing-event-".concat(uiModel.cid()),
              uiModel,
              eventHeight: MONTH_EVENT_HEIGHT,
              headerHeight: MONTH_CELL_PADDING_TOP + MONTH_CELL_BAR_HEIGHT,
              resizingWidth
            }));
          }
          function dayGridMonth_slicedToArray(r2, e2) {
            return dayGridMonth_arrayWithHoles(r2) || dayGridMonth_iterableToArrayLimit(r2, e2) || dayGridMonth_unsupportedIterableToArray(r2, e2) || dayGridMonth_nonIterableRest();
          }
          function dayGridMonth_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function dayGridMonth_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return dayGridMonth_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? dayGridMonth_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function dayGridMonth_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function dayGridMonth_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function dayGridMonth_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          var TOTAL_PERCENT_HEIGHT = 100;
          function useCellContentAreaHeight(eventHeight) {
            var visibleEventCount = useStore(monthVisibleEventCountSelector);
            var _useTheme = useTheme(monthGridCellSelector), themeHeaderHeight = _useTheme.headerHeight, themeFooterHeight = _useTheme.footerHeight;
            var ref = hooks_module_A(null);
            var _useState = hooks_module_h(0), _useState2 = dayGridMonth_slicedToArray(_useState, 2), cellContentAreaHeight = _useState2[0], setCellContentAreaHeight = _useState2[1];
            hooks_module_y(function() {
              if (ref.current) {
                var rowHeight = getSize(ref.current).height;
                var headerHeight = MONTH_CELL_PADDING_TOP + (themeHeaderHeight !== null && themeHeaderHeight !== void 0 ? themeHeaderHeight : MONTH_CELL_BAR_HEIGHT);
                var footerHeight = themeFooterHeight !== null && themeFooterHeight !== void 0 ? themeFooterHeight : 0;
                var baseContentAreaHeight = rowHeight - headerHeight - footerHeight;
                var visibleEventCountHeight = visibleEventCount * (eventHeight + MONTH_EVENT_MARGIN_TOP);
                setCellContentAreaHeight(Math.min(baseContentAreaHeight, visibleEventCountHeight));
              }
            }, [themeFooterHeight, themeHeaderHeight, eventHeight, visibleEventCount]);
            return {
              ref,
              cellContentAreaHeight
            };
          }
          function DayGridMonth(_ref) {
            var _ref$dateMatrix = _ref.dateMatrix, dateMatrix = _ref$dateMatrix === void 0 ? [] : _ref$dateMatrix, _ref$rowInfo = _ref.rowInfo, rowInfo = _ref$rowInfo === void 0 ? [] : _ref$rowInfo, _ref$cellWidthMap = _ref.cellWidthMap, cellWidthMap = _ref$cellWidthMap === void 0 ? [] : _ref$cellWidthMap;
            var _useDOMNode = useDOMNode(), _useDOMNode2 = dayGridMonth_slicedToArray(_useDOMNode, 2), gridContainer = _useDOMNode2[0], setGridContainerRef = _useDOMNode2[1];
            var calendar = useStore(calendarSelector);
            var _useCellContentAreaHe = useCellContentAreaHeight(MONTH_EVENT_HEIGHT), ref = _useCellContentAreaHe.ref, cellContentAreaHeight = _useCellContentAreaHe.cellContentAreaHeight;
            var _useStore = useStore(optionsSelector), eventFilter = _useStore.eventFilter, monthOptions = _useStore.month, isReadOnly = _useStore.isReadOnly;
            var _ref2 = monthOptions, narrowWeekend = _ref2.narrowWeekend, startDayOfWeek = _ref2.startDayOfWeek;
            var rowHeight = TOTAL_PERCENT_HEIGHT / dateMatrix.length;
            var gridPositionFinder = hooks_module_T(function() {
              return createGridPositionFinder({
                container: gridContainer,
                rowsCount: dateMatrix.length,
                columnsCount: dateMatrix[0].length,
                narrowWeekend,
                startDayOfWeek
              });
            }, [dateMatrix, gridContainer, narrowWeekend, startDayOfWeek]);
            var calendarData = useCalendarData(calendar, eventFilter);
            var renderedEventUIModels = hooks_module_T(function() {
              return dateMatrix.map(function(week) {
                return getRenderedEventUIModels(week, calendarData, narrowWeekend);
              });
            }, [calendarData, dateMatrix, narrowWeekend]);
            var onMouseDown = useGridSelection({
              type: "dayGridMonth",
              gridPositionFinder,
              dateCollection: dateMatrix,
              dateGetter: dayGridMonthSelectionHelper.getDateFromCollection,
              selectionSorter: dayGridMonthSelectionHelper.sortSelection
            });
            return _("div", {
              ref: setGridContainerRef,
              onMouseDown: passConditionalProp(!isReadOnly, onMouseDown),
              className: cls("month-daygrid")
            }, dateMatrix.map(function(week, rowIndex) {
              var _renderedEventUIModel = renderedEventUIModels[rowIndex], uiModels = _renderedEventUIModel.uiModels, gridDateEventModelMap = _renderedEventUIModel.gridDateEventModelMap;
              return _("div", {
                key: "dayGrid-events-".concat(rowIndex),
                className: cls("month-week-item"),
                style: {
                  height: toPercent(rowHeight)
                },
                ref
              }, _("div", {
                className: cls("weekday")
              }, _(GridRow, {
                gridDateEventModelMap,
                week,
                rowInfo,
                contentAreaHeight: cellContentAreaHeight
              }), _(MonthEvents, {
                name: "month",
                events: uiModels,
                contentAreaHeight: cellContentAreaHeight,
                eventHeight: MONTH_EVENT_HEIGHT,
                className: cls("weekday-events")
              }), _(GridSelectionByRow, {
                weekDates: week,
                narrowWeekend,
                rowIndex
              }), _(AccumulatedGridSelection, {
                rowIndex,
                weekDates: week,
                narrowWeekend
              })), _(ResizingGuideByRow, {
                dateMatrix,
                gridPositionFinder,
                rowIndex,
                cellWidthMap,
                renderedUIModels: renderedEventUIModels
              }), _(dayGridMonth_movingEventShadow_MovingEventShadow, {
                dateMatrix,
                gridPositionFinder,
                rowIndex,
                rowInfo
              }));
            }));
          }
          function month_typeof(o2) {
            "@babel/helpers - typeof";
            return month_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, month_typeof(o2);
          }
          function month_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function month_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? month_ownKeys(Object(t), true).forEach(function(r3) {
                month_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : month_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function month_defineProperty(e2, r2, t) {
            return (r2 = month_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function month_toPropertyKey(t) {
            var i2 = month_toPrimitive(t, "string");
            return "symbol" == month_typeof(i2) ? i2 : i2 + "";
          }
          function month_toPrimitive(t, r2) {
            if ("object" != month_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != month_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function view_month_toConsumableArray(r2) {
            return view_month_arrayWithoutHoles(r2) || view_month_iterableToArray(r2) || view_month_unsupportedIterableToArray(r2) || view_month_nonIterableSpread();
          }
          function view_month_nonIterableSpread() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function view_month_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return view_month_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? view_month_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function view_month_iterableToArray(r2) {
            if ("undefined" != typeof Symbol && null != r2[Symbol.iterator] || null != r2["@@iterator"])
              return Array.from(r2);
          }
          function view_month_arrayWithoutHoles(r2) {
            if (Array.isArray(r2))
              return view_month_arrayLikeToArray(r2);
          }
          function view_month_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function getMonthDayNames(options) {
            var _ref = options.month, dayNames = _ref.dayNames, startDayOfWeek = _ref.startDayOfWeek, workweek = _ref.workweek;
            var dayIndices = view_month_toConsumableArray(Array(7)).map(function(_2, i2) {
              return (startDayOfWeek + i2) % 7;
            });
            var monthDayNames = dayIndices.map(function(i2) {
              return {
                day: i2,
                label: capitalize(dayNames[i2])
              };
            });
            return monthDayNames.filter(function(dayNameInfo) {
              return workweek ? !isWeekend(dayNameInfo.day) : true;
            });
          }
          function Month() {
            var options = useStore(optionsSelector);
            var _useStore = useStore(viewSelector), renderDate = _useStore.renderDate;
            var dayNames = getMonthDayNames(options);
            var monthOptions = options.month;
            var narrowWeekend = monthOptions.narrowWeekend, startDayOfWeek = monthOptions.startDayOfWeek, workweek = monthOptions.workweek;
            var dateMatrix = hooks_module_T(function() {
              return createDateMatrixOfMonth(renderDate, monthOptions);
            }, [monthOptions, renderDate]);
            var _useMemo = hooks_module_T(function() {
              return getRowStyleInfo(dayNames.length, narrowWeekend, startDayOfWeek, workweek);
            }, [dayNames.length, narrowWeekend, startDayOfWeek, workweek]), rowStyleInfo = _useMemo.rowStyleInfo, cellWidthMap = _useMemo.cellWidthMap;
            var rowInfo = rowStyleInfo.map(function(cellStyleInfo, index) {
              return month_objectSpread(month_objectSpread({}, cellStyleInfo), {}, {
                date: dateMatrix[0][index]
              });
            });
            return _(Layout, {
              className: cls("month")
            }, _(GridHeader, {
              type: "month",
              dayNames,
              options: monthOptions,
              rowStyleInfo
            }), _(DayGridMonth, {
              dateMatrix,
              rowInfo,
              cellWidthMap
            }));
          }
          function view_week_slicedToArray(r2, e2) {
            return view_week_arrayWithHoles(r2) || view_week_iterableToArrayLimit(r2, e2) || view_week_unsupportedIterableToArray(r2, e2) || view_week_nonIterableRest();
          }
          function view_week_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function view_week_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return view_week_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? view_week_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function view_week_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function view_week_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function view_week_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function useWeekViewState() {
            var options = useStore(optionsSelector);
            var calendar = useStore(calendarSelector);
            var _useStore = useStore(weekViewLayoutSelector), gridRowLayout = _useStore.dayGridRows, lastPanelType = _useStore.lastPanelType;
            var _useStore2 = useStore(viewSelector), renderDate = _useStore2.renderDate;
            return hooks_module_T(function() {
              return {
                options,
                calendar,
                gridRowLayout,
                lastPanelType,
                renderDate
              };
            }, [calendar, gridRowLayout, lastPanelType, options, renderDate]);
          }
          function Week() {
            var _options$week$dayName, _options$week;
            var _useWeekViewState = useWeekViewState(), options = _useWeekViewState.options, calendar = _useWeekViewState.calendar, gridRowLayout = _useWeekViewState.gridRowLayout, lastPanelType = _useWeekViewState.lastPanelType, renderDate = _useWeekViewState.renderDate;
            var gridHeaderMarginLeft = useTheme(hooks_module_q(function(theme) {
              return theme.week.dayGridLeft.width;
            }, []));
            var primaryTimezoneName = useStore(primaryTimezoneSelector);
            var _useDOMNode = useDOMNode(), _useDOMNode2 = view_week_slicedToArray(_useDOMNode, 2), timePanel = _useDOMNode2[0], setTimePanelRef = _useDOMNode2[1];
            var weekOptions = options.week;
            var narrowWeekend = weekOptions.narrowWeekend, startDayOfWeek = weekOptions.startDayOfWeek, workweek = weekOptions.workweek, hourStart = weekOptions.hourStart, hourEnd = weekOptions.hourEnd, eventView = weekOptions.eventView, taskView = weekOptions.taskView;
            var weekDates = hooks_module_T(function() {
              return getWeekDates(renderDate, weekOptions);
            }, [renderDate, weekOptions]);
            var dayNames = getDayNames(weekDates, (_options$week$dayName = (_options$week = options.week) === null || _options$week === void 0 ? void 0 : _options$week.dayNames) !== null && _options$week$dayName !== void 0 ? _options$week$dayName : []);
            var _getRowStyleInfo = getRowStyleInfo(weekDates.length, narrowWeekend, startDayOfWeek, workweek), rowStyleInfo = _getRowStyleInfo.rowStyleInfo, cellWidthMap = _getRowStyleInfo.cellWidthMap;
            var calendarData = useCalendarData(calendar, options.eventFilter);
            var eventByPanel = hooks_module_T(function() {
              var getFilterRange = function getFilterRange2() {
                if (primaryTimezoneName === "Local") {
                  return [toStartOfDay(first(weekDates)), toEndOfDay(last(weekDates))];
                }
                return [toStartOfDay(addDate(first(weekDates), -1)), toEndOfDay(addDate(last(weekDates), 1))];
              };
              var _getFilterRange = getFilterRange(), _getFilterRange2 = view_week_slicedToArray(_getFilterRange, 2), weekStartDate = _getFilterRange2[0], weekEndDate = _getFilterRange2[1];
              return getWeekViewEvents(weekDates, calendarData, {
                narrowWeekend,
                hourStart,
                hourEnd,
                weekStartDate,
                weekEndDate
              });
            }, [calendarData, hourEnd, hourStart, narrowWeekend, primaryTimezoneName, weekDates]);
            var timeGridData = hooks_module_T(function() {
              return createTimeGridData(weekDates, {
                hourStart,
                hourEnd,
                narrowWeekend
              });
            }, [hourEnd, hourStart, narrowWeekend, weekDates]);
            var activePanels = getActivePanels(taskView, eventView);
            var dayGridRows = activePanels.map(function(key) {
              var _gridRowLayout$rowTyp, _gridRowLayout$rowTyp2;
              if (key === "time") {
                return null;
              }
              var rowType = key;
              return _(Panel, {
                name: rowType,
                key: rowType,
                resizable: rowType !== lastPanelType
              }, rowType === "allday" ? _(AlldayGridRow, {
                events: eventByPanel[rowType],
                rowStyleInfo,
                gridColWidthMap: cellWidthMap,
                weekDates,
                height: (_gridRowLayout$rowTyp = gridRowLayout[rowType]) === null || _gridRowLayout$rowTyp === void 0 ? void 0 : _gridRowLayout$rowTyp.height,
                options: weekOptions
              }) : _(OtherGridRow, {
                category: rowType,
                events: eventByPanel[rowType],
                weekDates,
                height: (_gridRowLayout$rowTyp2 = gridRowLayout[rowType]) === null || _gridRowLayout$rowTyp2 === void 0 ? void 0 : _gridRowLayout$rowTyp2.height,
                options: weekOptions,
                gridColWidthMap: cellWidthMap
              }));
            });
            var hasTimePanel = hooks_module_T(function() {
              return activePanels.includes("time");
            }, [activePanels]);
            useTimeGridScrollSync(timePanel, timeGridData.rows.length);
            var stickyTop = useTimezoneLabelsTop(timePanel);
            return _(Layout, {
              className: cls("week-view"),
              autoAdjustPanels: true
            }, _(Panel, {
              name: "week-view-day-names",
              initialHeight: WEEK_DAY_NAME_HEIGHT + WEEK_DAY_NAME_BORDER * 2
            }, _(GridHeader, {
              type: "week",
              dayNames,
              marginLeft: gridHeaderMarginLeft,
              options: weekOptions,
              rowStyleInfo
            })), dayGridRows, hasTimePanel ? _(Panel, {
              name: "time",
              autoSize: 1,
              ref: setTimePanelRef
            }, _(TimeGrid, {
              events: eventByPanel.time,
              timeGridData
            }), _(TimezoneLabels, {
              top: stickyTop
            })) : null);
          }
          var views = {
            month: Month,
            week: Week,
            day: day_Day
          };
          function Main() {
            var _useStore = useStore(viewSelector), currentView = _useStore.currentView;
            var CurrentViewComponent = hooks_module_T(function() {
              return views[currentView] || function() {
                return null;
              };
            }, [currentView]);
            return _(CurrentViewComponent, null);
          }
          var dist_n = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|^--/i, dist_o = /^(area|base|br|col|embed|hr|img|input|link|meta|param|source|track|wbr)$/, dist_i = /[\s\n\\/='"\0<>]/, dist_l = /^xlink:?./, dist_a = /["&<]/;
          function dist_s(e2) {
            if (false === dist_a.test(e2 += ""))
              return e2;
            for (var t = 0, r2 = 0, n2 = "", o2 = ""; r2 < e2.length; r2++) {
              switch (e2.charCodeAt(r2)) {
                case 34:
                  o2 = "&quot;";
                  break;
                case 38:
                  o2 = "&amp;";
                  break;
                case 60:
                  o2 = "&lt;";
                  break;
                default:
                  continue;
              }
              r2 !== t && (n2 += e2.slice(t, r2)), n2 += o2, t = r2 + 1;
            }
            return r2 !== t && (n2 += e2.slice(t, r2)), n2;
          }
          var dist_f = function(e2, t) {
            return String(e2).replace(/(\n+)/g, "$1" + (t || "	"));
          }, dist_u = function(e2, t, r2) {
            return String(e2).length > (t || 40) || !r2 && -1 !== String(e2).indexOf("\n") || -1 !== String(e2).indexOf("<");
          }, dist_c = {}, dist_ = /([A-Z])/g;
          function dist_p(e2) {
            var t = "";
            for (var r2 in e2) {
              var o2 = e2[r2];
              null != o2 && "" !== o2 && (t && (t += " "), t += "-" == r2[0] ? r2 : dist_c[r2] || (dist_c[r2] = r2.replace(dist_, "-$1").toLowerCase()), t = "number" == typeof o2 && false === dist_n.test(r2) ? t + ": " + o2 + "px;" : t + ": " + o2 + ";");
            }
            return t || void 0;
          }
          function dist_d(e2, t) {
            return Array.isArray(t) ? t.reduce(dist_d, e2) : null != t && false !== t && e2.push(t), e2;
          }
          function dist_v() {
            this.__d = true;
          }
          function dist_h(e2, t) {
            return { __v: e2, context: t, props: e2.props, setState: dist_v, forceUpdate: dist_v, __d: true, __h: [] };
          }
          function dist_g(e2, t) {
            var r2 = e2.contextType, n2 = r2 && t[r2.__c];
            return null != r2 ? n2 ? n2.props.value : r2.__ : t;
          }
          var dist_y = [];
          function dist_m(r2, n2, a2, c2, _2, v2) {
            if (null == r2 || "boolean" == typeof r2)
              return "";
            if ("object" != typeof r2)
              return "function" == typeof r2 ? "" : dist_s(r2);
            var b2 = a2.pretty, x2 = b2 && "string" == typeof b2 ? b2 : "	";
            if (Array.isArray(r2)) {
              for (var k2 = "", S2 = 0; S2 < r2.length; S2++)
                b2 && S2 > 0 && (k2 += "\n"), k2 += dist_m(r2[S2], n2, a2, c2, _2, v2);
              return k2;
            }
            if (void 0 !== r2.constructor)
              return "";
            var w2, C2 = r2.type, O2 = r2.props, j2 = false;
            if ("function" == typeof C2) {
              if (j2 = true, !a2.shallow || !c2 && false !== a2.renderRootComponent) {
                if (C2 === preact_module_k) {
                  var A2 = [];
                  return dist_d(A2, r2.props.children), dist_m(A2, n2, a2, false !== a2.shallowHighOrder, _2, v2);
                }
                var F2, H2 = r2.__c = dist_h(r2, n2);
                preact_module_l.__b && preact_module_l.__b(r2);
                var M2 = preact_module_l.__r;
                if (C2.prototype && "function" == typeof C2.prototype.render) {
                  var L2 = dist_g(C2, n2);
                  (H2 = r2.__c = new C2(O2, L2)).__v = r2, H2._dirty = H2.__d = true, H2.props = O2, null == H2.state && (H2.state = {}), null == H2._nextState && null == H2.__s && (H2._nextState = H2.__s = H2.state), H2.context = L2, C2.getDerivedStateFromProps ? H2.state = Object.assign({}, H2.state, C2.getDerivedStateFromProps(H2.props, H2.state)) : H2.componentWillMount && (H2.componentWillMount(), H2.state = H2._nextState !== H2.state ? H2._nextState : H2.__s !== H2.state ? H2.__s : H2.state), M2 && M2(r2), F2 = H2.render(H2.props, H2.state, H2.context);
                } else
                  for (var T2 = dist_g(C2, n2), E2 = 0; H2.__d && E2++ < 25; )
                    H2.__d = false, M2 && M2(r2), F2 = C2.call(r2.__c, O2, T2);
                return H2.getChildContext && (n2 = Object.assign({}, n2, H2.getChildContext())), preact_module_l.diffed && preact_module_l.diffed(r2), dist_m(F2, n2, a2, false !== a2.shallowHighOrder, _2, v2);
              }
              C2 = (w2 = C2).displayName || w2 !== Function && w2.name || function(e2) {
                var t = (Function.prototype.toString.call(e2).match(/^\s*function\s+([^( ]+)/) || "")[1];
                if (!t) {
                  for (var r3 = -1, n3 = dist_y.length; n3--; )
                    if (dist_y[n3] === e2) {
                      r3 = n3;
                      break;
                    }
                  r3 < 0 && (r3 = dist_y.push(e2) - 1), t = "UnnamedComponent" + r3;
                }
                return t;
              }(w2);
            }
            var $2, D, N2 = "<" + C2;
            if (O2) {
              var P2 = Object.keys(O2);
              a2 && true === a2.sortAttributes && P2.sort();
              for (var W2 = 0; W2 < P2.length; W2++) {
                var I2 = P2[W2], R2 = O2[I2];
                if ("children" !== I2) {
                  if (!dist_i.test(I2) && (a2 && a2.allAttributes || "key" !== I2 && "ref" !== I2 && "__self" !== I2 && "__source" !== I2)) {
                    if ("defaultValue" === I2)
                      I2 = "value";
                    else if ("defaultChecked" === I2)
                      I2 = "checked";
                    else if ("defaultSelected" === I2)
                      I2 = "selected";
                    else if ("className" === I2) {
                      if (void 0 !== O2.class)
                        continue;
                      I2 = "class";
                    } else
                      _2 && dist_l.test(I2) && (I2 = I2.toLowerCase().replace(/^xlink:?/, "xlink:"));
                    if ("htmlFor" === I2) {
                      if (O2.for)
                        continue;
                      I2 = "for";
                    }
                    "style" === I2 && R2 && "object" == typeof R2 && (R2 = dist_p(R2)), "a" === I2[0] && "r" === I2[1] && "boolean" == typeof R2 && (R2 = String(R2));
                    var U2 = a2.attributeHook && a2.attributeHook(I2, R2, n2, a2, j2);
                    if (U2 || "" === U2)
                      N2 += U2;
                    else if ("dangerouslySetInnerHTML" === I2)
                      D = R2 && R2.__html;
                    else if ("textarea" === C2 && "value" === I2)
                      $2 = R2;
                    else if ((R2 || 0 === R2 || "" === R2) && "function" != typeof R2) {
                      if (!(true !== R2 && "" !== R2 || (R2 = I2, a2 && a2.xml))) {
                        N2 = N2 + " " + I2;
                        continue;
                      }
                      if ("value" === I2) {
                        if ("select" === C2) {
                          v2 = R2;
                          continue;
                        }
                        "option" === C2 && v2 == R2 && void 0 === O2.selected && (N2 += " selected");
                      }
                      N2 = N2 + " " + I2 + '="' + dist_s(R2) + '"';
                    }
                  }
                } else
                  $2 = R2;
              }
            }
            if (b2) {
              var V2 = N2.replace(/\n\s*/, " ");
              V2 === N2 || ~V2.indexOf("\n") ? b2 && ~N2.indexOf("\n") && (N2 += "\n") : N2 = V2;
            }
            if (N2 += ">", dist_i.test(C2))
              throw new Error(C2 + " is not a valid HTML tag name in " + N2);
            var q2, z2 = dist_o.test(C2) || a2.voidElements && a2.voidElements.test(C2), Z2 = [];
            if (D)
              b2 && dist_u(D) && (D = "\n" + x2 + dist_f(D, x2)), N2 += D;
            else if (null != $2 && dist_d(q2 = [], $2).length) {
              for (var B2 = b2 && ~N2.indexOf("\n"), G2 = false, J2 = 0; J2 < q2.length; J2++) {
                var K2 = q2[J2];
                if (null != K2 && false !== K2) {
                  var Q2 = dist_m(K2, n2, a2, true, "svg" === C2 || "foreignObject" !== C2 && _2, v2);
                  if (b2 && !B2 && dist_u(Q2) && (B2 = true), Q2)
                    if (b2) {
                      var X2 = Q2.length > 0 && "<" != Q2[0];
                      G2 && X2 ? Z2[Z2.length - 1] += Q2 : Z2.push(Q2), G2 = X2;
                    } else
                      Z2.push(Q2);
                }
              }
              if (b2 && B2)
                for (var Y2 = Z2.length; Y2--; )
                  Z2[Y2] = "\n" + x2 + dist_f(Z2[Y2], x2);
            }
            if (Z2.length || D)
              N2 += Z2.join("");
            else if (a2 && a2.xml)
              return N2.substring(0, N2.length - 1) + " />";
            return !z2 || q2 || D ? (b2 && ~N2.indexOf("\n") && (N2 += "\n"), N2 = N2 + "</" + C2 + ">") : N2 = N2.replace(/>$/, " />"), N2;
          }
          var dist_b = { shallow: true };
          dist_S.render = dist_S;
          var dist_x = function(e2, t) {
            return dist_S(e2, t, dist_b);
          }, dist_k = [];
          function dist_S(n2, o2, i2) {
            o2 = o2 || {};
            var l2 = preact_module_l.__s;
            preact_module_l.__s = true;
            var a2, s2 = _(preact_module_k, null);
            return s2.__k = [n2], a2 = i2 && (i2.pretty || i2.voidElements || i2.sortAttributes || i2.shallow || i2.allAttributes || i2.xml || i2.attributeHook) ? dist_m(n2, o2, i2) : dist_F(n2, o2, false, void 0, s2), preact_module_l.__c && preact_module_l.__c(n2, dist_k), preact_module_l.__s = l2, dist_k.length = 0, a2;
          }
          function dist_w(e2) {
            return null == e2 || "boolean" == typeof e2 ? null : "string" == typeof e2 || "number" == typeof e2 || "bigint" == typeof e2 ? _(null, null, e2) : e2;
          }
          function dist_C(e2, t) {
            return "className" === e2 ? "class" : "htmlFor" === e2 ? "for" : "defaultValue" === e2 ? "value" : "defaultChecked" === e2 ? "checked" : "defaultSelected" === e2 ? "selected" : t && dist_l.test(e2) ? e2.toLowerCase().replace(/^xlink:?/, "xlink:") : e2;
          }
          function dist_O(e2, t) {
            return "style" === e2 && null != t && "object" == typeof t ? dist_p(t) : "a" === e2[0] && "r" === e2[1] && "boolean" == typeof t ? String(t) : t;
          }
          var dist_j = Array.isArray, dist_A = Object.assign;
          function dist_F(r2, n2, l2, a2, f2) {
            if (null == r2 || true === r2 || false === r2 || "" === r2)
              return "";
            if ("object" != typeof r2)
              return "function" == typeof r2 ? "" : dist_s(r2);
            if (dist_j(r2)) {
              var u2 = "";
              f2.__k = r2;
              for (var c2 = 0; c2 < r2.length; c2++)
                u2 += dist_F(r2[c2], n2, l2, a2, f2), r2[c2] = dist_w(r2[c2]);
              return u2;
            }
            if (void 0 !== r2.constructor)
              return "";
            r2.__ = f2, preact_module_l.__b && preact_module_l.__b(r2);
            var _2 = r2.type, p2 = r2.props;
            if ("function" == typeof _2) {
              var d2;
              if (_2 === preact_module_k)
                d2 = p2.children;
              else {
                d2 = _2.prototype && "function" == typeof _2.prototype.render ? function(e2, r3) {
                  var n3 = e2.type, o2 = dist_g(n3, r3), i2 = new n3(e2.props, o2);
                  e2.__c = i2, i2.__v = e2, i2.__d = true, i2.props = e2.props, null == i2.state && (i2.state = {}), null == i2.__s && (i2.__s = i2.state), i2.context = o2, n3.getDerivedStateFromProps ? i2.state = dist_A({}, i2.state, n3.getDerivedStateFromProps(i2.props, i2.state)) : i2.componentWillMount && (i2.componentWillMount(), i2.state = i2.__s !== i2.state ? i2.__s : i2.state);
                  var l3 = preact_module_l.__r;
                  return l3 && l3(e2), i2.render(i2.props, i2.state, i2.context);
                }(r2, n2) : function(e2, r3) {
                  var n3, o2 = dist_h(e2, r3), i2 = dist_g(e2.type, r3);
                  e2.__c = o2;
                  for (var l3 = preact_module_l.__r, a3 = 0; o2.__d && a3++ < 25; )
                    o2.__d = false, l3 && l3(e2), n3 = e2.type.call(o2, e2.props, i2);
                  return n3;
                }(r2, n2);
                var v2 = r2.__c;
                v2.getChildContext && (n2 = dist_A({}, n2, v2.getChildContext()));
              }
              var y2 = dist_F(d2 = null != d2 && d2.type === preact_module_k && null == d2.key ? d2.props.children : d2, n2, l2, a2, r2);
              return preact_module_l.diffed && preact_module_l.diffed(r2), r2.__ = void 0, preact_module_l.unmount && preact_module_l.unmount(r2), y2;
            }
            var m, b2, x2 = "<";
            if (x2 += _2, p2)
              for (var k2 in m = p2.children, p2) {
                var S2 = p2[k2];
                if (!("key" === k2 || "ref" === k2 || "__self" === k2 || "__source" === k2 || "children" === k2 || "className" === k2 && "class" in p2 || "htmlFor" === k2 && "for" in p2 || dist_i.test(k2))) {
                  if (S2 = dist_O(k2 = dist_C(k2, l2), S2), "dangerouslySetInnerHTML" === k2)
                    b2 = S2 && S2.__html;
                  else if ("textarea" === _2 && "value" === k2)
                    m = S2;
                  else if ((S2 || 0 === S2 || "" === S2) && "function" != typeof S2) {
                    if (true === S2 || "" === S2) {
                      S2 = k2, x2 = x2 + " " + k2;
                      continue;
                    }
                    if ("value" === k2) {
                      if ("select" === _2) {
                        a2 = S2;
                        continue;
                      }
                      "option" !== _2 || a2 != S2 || "selected" in p2 || (x2 += " selected");
                    }
                    x2 = x2 + " " + k2 + '="' + dist_s(S2) + '"';
                  }
                }
              }
            var H2 = x2;
            if (x2 += ">", dist_i.test(_2))
              throw new Error(_2 + " is not a valid HTML tag name in " + x2);
            var M2 = "", L2 = false;
            if (b2)
              M2 += b2, L2 = true;
            else if ("string" == typeof m)
              M2 += dist_s(m), L2 = true;
            else if (dist_j(m)) {
              r2.__k = m;
              for (var T2 = 0; T2 < m.length; T2++) {
                var E2 = m[T2];
                if (m[T2] = dist_w(E2), null != E2 && false !== E2) {
                  var $2 = dist_F(E2, n2, "svg" === _2 || "foreignObject" !== _2 && l2, a2, r2);
                  $2 && (M2 += $2, L2 = true);
                }
              }
            } else if (null != m && false !== m && true !== m) {
              r2.__k = [dist_w(m)];
              var D = dist_F(m, n2, "svg" === _2 || "foreignObject" !== _2 && l2, a2, r2);
              D && (M2 += D, L2 = true);
            }
            if (preact_module_l.diffed && preact_module_l.diffed(r2), r2.__ = void 0, preact_module_l.unmount && preact_module_l.unmount(r2), L2)
              x2 += M2;
            else if (dist_o.test(_2))
              return H2 + " />";
            return x2 + "</" + _2 + ">";
          }
          dist_S.shallowRender = dist_x;
          var dist = dist_S;
          var sendHostname = __webpack_require__(2229);
          var sendHostname_default = /* @__PURE__ */ __webpack_require__.n(sendHostname);
          function CalendarContainer(_ref) {
            var theme = _ref.theme, store = _ref.store, eventBus = _ref.eventBus, children = _ref.children;
            return _(EventBusProvider, {
              value: eventBus
            }, _(ThemeProvider, {
              store: theme
            }, _(StoreProvider, {
              store
            }, _(FloatingLayerProvider, null, children))));
          }
          var GA_TRACKING_ID = "UA-129951699-1";
          __webpack_require__(451);
          __webpack_require__(7087);
          var customEvents = __webpack_require__(8363);
          var customEvents_default = /* @__PURE__ */ __webpack_require__.n(customEvents);
          function eventBus_typeof(o2) {
            "@babel/helpers - typeof";
            return eventBus_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, eventBus_typeof(o2);
          }
          function eventBus_classCallCheck(a2, n2) {
            if (!(a2 instanceof n2))
              throw new TypeError("Cannot call a class as a function");
          }
          function eventBus_defineProperties(e2, r2) {
            for (var t = 0; t < r2.length; t++) {
              var o2 = r2[t];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, eventBus_toPropertyKey(o2.key), o2);
            }
          }
          function eventBus_createClass(e2, r2, t) {
            return r2 && eventBus_defineProperties(e2.prototype, r2), t && eventBus_defineProperties(e2, t), Object.defineProperty(e2, "prototype", { writable: false }), e2;
          }
          function eventBus_toPropertyKey(t) {
            var i2 = eventBus_toPrimitive(t, "string");
            return "symbol" == eventBus_typeof(i2) ? i2 : i2 + "";
          }
          function eventBus_toPrimitive(t, r2) {
            if ("object" != eventBus_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != eventBus_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function eventBus_callSuper(t, o2, e2) {
            return o2 = eventBus_getPrototypeOf(o2), eventBus_possibleConstructorReturn(t, eventBus_isNativeReflectConstruct() ? Reflect.construct(o2, e2 || [], eventBus_getPrototypeOf(t).constructor) : o2.apply(t, e2));
          }
          function eventBus_possibleConstructorReturn(t, e2) {
            if (e2 && ("object" == eventBus_typeof(e2) || "function" == typeof e2))
              return e2;
            if (void 0 !== e2)
              throw new TypeError("Derived constructors may only return object or undefined");
            return eventBus_assertThisInitialized(t);
          }
          function eventBus_assertThisInitialized(e2) {
            if (void 0 === e2)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e2;
          }
          function eventBus_isNativeReflectConstruct() {
            try {
              var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              }));
            } catch (t2) {
            }
            return (eventBus_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
              return !!t;
            })();
          }
          function _superPropGet(t, e2, r2, o2) {
            var p2 = _get(eventBus_getPrototypeOf(1 & o2 ? t.prototype : t), e2, r2);
            return 2 & o2 ? function(t2) {
              return p2.apply(r2, t2);
            } : p2;
          }
          function _get() {
            return _get = "undefined" != typeof Reflect && Reflect.get ? Reflect.get.bind() : function(e2, t, r2) {
              var p2 = _superPropBase(e2, t);
              if (p2) {
                var n2 = Object.getOwnPropertyDescriptor(p2, t);
                return n2.get ? n2.get.call(arguments.length < 3 ? e2 : r2) : n2.value;
              }
            }, _get.apply(null, arguments);
          }
          function _superPropBase(t, o2) {
            for (; !{}.hasOwnProperty.call(t, o2) && null !== (t = eventBus_getPrototypeOf(t)); )
              ;
            return t;
          }
          function eventBus_getPrototypeOf(t) {
            return eventBus_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
              return t2.__proto__ || Object.getPrototypeOf(t2);
            }, eventBus_getPrototypeOf(t);
          }
          function eventBus_inherits(t, e2) {
            if ("function" != typeof e2 && null !== e2)
              throw new TypeError("Super expression must either be null or a function");
            t.prototype = Object.create(e2 && e2.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e2 && eventBus_setPrototypeOf(t, e2);
          }
          function eventBus_setPrototypeOf(t, e2) {
            return eventBus_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e3) {
              return t2.__proto__ = e3, t2;
            }, eventBus_setPrototypeOf(t, e2);
          }
          var EventBusImpl = /* @__PURE__ */ function(_CustomEvents) {
            function EventBusImpl2() {
              eventBus_classCallCheck(this, EventBusImpl2);
              return eventBus_callSuper(this, EventBusImpl2, arguments);
            }
            eventBus_inherits(EventBusImpl2, _CustomEvents);
            return eventBus_createClass(EventBusImpl2, [{
              key: "on",
              value: function on(eventName, handler) {
                _superPropGet(EventBusImpl2, "on", this, 3)([eventName, handler]);
                return this;
              }
            }, {
              key: "off",
              value: function off(eventName, handler) {
                _superPropGet(EventBusImpl2, "off", this, 3)([eventName, handler]);
                return this;
              }
            }, {
              key: "fire",
              value: function fire(eventName) {
                for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                  args[_key - 1] = arguments[_key];
                }
                _superPropGet(EventBusImpl2, "fire", this, 3)([eventName].concat(args));
                return this;
              }
            }, {
              key: "once",
              value: function once(eventName, handler) {
                _superPropGet(EventBusImpl2, "once", this, 3)([eventName, handler]);
                return this;
              }
            }]);
          }(customEvents_default());
          var calendarCore_excluded = ["dispatch"], _excluded2 = ["theme", "template"];
          function calendarCore_typeof(o2) {
            "@babel/helpers - typeof";
            return calendarCore_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, calendarCore_typeof(o2);
          }
          function calendarCore_ownKeys(e2, r2) {
            var t = Object.keys(e2);
            if (Object.getOwnPropertySymbols) {
              var o2 = Object.getOwnPropertySymbols(e2);
              r2 && (o2 = o2.filter(function(r3) {
                return Object.getOwnPropertyDescriptor(e2, r3).enumerable;
              })), t.push.apply(t, o2);
            }
            return t;
          }
          function calendarCore_objectSpread(e2) {
            for (var r2 = 1; r2 < arguments.length; r2++) {
              var t = null != arguments[r2] ? arguments[r2] : {};
              r2 % 2 ? calendarCore_ownKeys(Object(t), true).forEach(function(r3) {
                calendarCore_defineProperty(e2, r3, t[r3]);
              }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e2, Object.getOwnPropertyDescriptors(t)) : calendarCore_ownKeys(Object(t)).forEach(function(r3) {
                Object.defineProperty(e2, r3, Object.getOwnPropertyDescriptor(t, r3));
              });
            }
            return e2;
          }
          function calendarCore_defineProperty(e2, r2, t) {
            return (r2 = calendarCore_toPropertyKey(r2)) in e2 ? Object.defineProperty(e2, r2, { value: t, enumerable: true, configurable: true, writable: true }) : e2[r2] = t, e2;
          }
          function calendarCore_objectWithoutProperties(e2, t) {
            if (null == e2)
              return {};
            var o2, r2, i2 = calendarCore_objectWithoutPropertiesLoose(e2, t);
            if (Object.getOwnPropertySymbols) {
              var s2 = Object.getOwnPropertySymbols(e2);
              for (r2 = 0; r2 < s2.length; r2++)
                o2 = s2[r2], t.includes(o2) || {}.propertyIsEnumerable.call(e2, o2) && (i2[o2] = e2[o2]);
            }
            return i2;
          }
          function calendarCore_objectWithoutPropertiesLoose(r2, e2) {
            if (null == r2)
              return {};
            var t = {};
            for (var n2 in r2)
              if ({}.hasOwnProperty.call(r2, n2)) {
                if (e2.includes(n2))
                  continue;
                t[n2] = r2[n2];
              }
            return t;
          }
          function calendarCore_slicedToArray(r2, e2) {
            return calendarCore_arrayWithHoles(r2) || calendarCore_iterableToArrayLimit(r2, e2) || calendarCore_unsupportedIterableToArray(r2, e2) || calendarCore_nonIterableRest();
          }
          function calendarCore_nonIterableRest() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
          }
          function calendarCore_unsupportedIterableToArray(r2, a2) {
            if (r2) {
              if ("string" == typeof r2)
                return calendarCore_arrayLikeToArray(r2, a2);
              var t = {}.toString.call(r2).slice(8, -1);
              return "Object" === t && r2.constructor && (t = r2.constructor.name), "Map" === t || "Set" === t ? Array.from(r2) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? calendarCore_arrayLikeToArray(r2, a2) : void 0;
            }
          }
          function calendarCore_arrayLikeToArray(r2, a2) {
            (null == a2 || a2 > r2.length) && (a2 = r2.length);
            for (var e2 = 0, n2 = Array(a2); e2 < a2; e2++)
              n2[e2] = r2[e2];
            return n2;
          }
          function calendarCore_iterableToArrayLimit(r2, l2) {
            var t = null == r2 ? null : "undefined" != typeof Symbol && r2[Symbol.iterator] || r2["@@iterator"];
            if (null != t) {
              var e2, n2, i2, u2, a2 = [], f2 = true, o2 = false;
              try {
                if (i2 = (t = t.call(r2)).next, 0 === l2) {
                  if (Object(t) !== t)
                    return;
                  f2 = false;
                } else
                  for (; !(f2 = (e2 = i2.call(t)).done) && (a2.push(e2.value), a2.length !== l2); f2 = true)
                    ;
              } catch (r3) {
                o2 = true, n2 = r3;
              } finally {
                try {
                  if (!f2 && null != t.return && (u2 = t.return(), Object(u2) !== u2))
                    return;
                } finally {
                  if (o2)
                    throw n2;
                }
              }
              return a2;
            }
          }
          function calendarCore_arrayWithHoles(r2) {
            if (Array.isArray(r2))
              return r2;
          }
          function calendarCore_classCallCheck(a2, n2) {
            if (!(a2 instanceof n2))
              throw new TypeError("Cannot call a class as a function");
          }
          function calendarCore_defineProperties(e2, r2) {
            for (var t = 0; t < r2.length; t++) {
              var o2 = r2[t];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, calendarCore_toPropertyKey(o2.key), o2);
            }
          }
          function calendarCore_createClass(e2, r2, t) {
            return r2 && calendarCore_defineProperties(e2.prototype, r2), t && calendarCore_defineProperties(e2, t), Object.defineProperty(e2, "prototype", { writable: false }), e2;
          }
          function calendarCore_toPropertyKey(t) {
            var i2 = calendarCore_toPrimitive(t, "string");
            return "symbol" == calendarCore_typeof(i2) ? i2 : i2 + "";
          }
          function calendarCore_toPrimitive(t, r2) {
            if ("object" != calendarCore_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != calendarCore_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          var CalendarCore = /* @__PURE__ */ function() {
            function CalendarCore2(container) {
              var _document$querySelect, _document;
              var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              calendarCore_classCallCheck(this, CalendarCore2);
              this.container = isString_default()(container) ? (_document$querySelect = (_document = document) === null || _document === void 0 ? void 0 : _document.querySelector(container)) !== null && _document$querySelect !== void 0 ? _document$querySelect : null : container;
              this.theme = initThemeStore(options.theme);
              this.eventBus = new EventBusImpl();
              this.store = initCalendarStore(options);
              this.renderRange = this.calculateRenderRange(toStartOfDay());
              addAttributeHooks();
              if (this.getStoreState().options.usageStatistics === true) {
                sendHostname_default()("calendar", GA_TRACKING_ID);
              }
            }
            return calendarCore_createClass(CalendarCore2, [{
              key: "getStoreState",
              value: function getStoreState(group) {
                var state = this.store.getState();
                return group ? state[group] : state;
              }
            }, {
              key: "getStoreDispatchers",
              value: function getStoreDispatchers(group) {
                var dispatchers = this.store.getState().dispatch;
                return group ? dispatchers[group] : dispatchers;
              }
            }, {
              key: "destroy",
              value: function destroy() {
                if (this.container) {
                  vn(this.container);
                }
                this.store.clearListeners();
                this.theme.clearListeners();
                this.eventBus.off();
                removeAttributeHooks();
                for (var key in this) {
                  if (this.hasOwnProperty(key)) {
                    delete this[key];
                  }
                }
              }
            }, {
              key: "calculateMonthRenderDate",
              value: function calculateMonthRenderDate(_ref) {
                var renderDate = _ref.renderDate, offset = _ref.offset, monthOptions = _ref.monthOptions;
                var newRenderDate = new date_TZDate(renderDate);
                var visibleWeeksCount = monthOptions.visibleWeeksCount;
                if (visibleWeeksCount > 0) {
                  newRenderDate = addDate(newRenderDate, offset * 7 * visibleWeeksCount);
                } else {
                  newRenderDate = addMonths(newRenderDate, offset);
                }
                var dateMatrix = createDateMatrixOfMonth(newRenderDate, monthOptions);
                var _dateMatrix = calendarCore_slicedToArray(dateMatrix, 1), _dateMatrix$ = calendarCore_slicedToArray(_dateMatrix[0], 1), start = _dateMatrix$[0];
                var end = last(last(dateMatrix));
                return {
                  renderDate: newRenderDate,
                  renderRange: {
                    start,
                    end
                  }
                };
              }
            }, {
              key: "calculateWeekRenderDate",
              value: function calculateWeekRenderDate(_ref2) {
                var renderDate = _ref2.renderDate, offset = _ref2.offset, weekOptions = _ref2.weekOptions;
                var newRenderDate = new date_TZDate(renderDate);
                newRenderDate.addDate(offset * 7);
                var weekDates = getWeekDates(newRenderDate, weekOptions);
                var _weekDates = calendarCore_slicedToArray(weekDates, 1), start = _weekDates[0];
                var end = last(weekDates);
                return {
                  renderDate: newRenderDate,
                  renderRange: {
                    start,
                    end
                  }
                };
              }
            }, {
              key: "calculateDayRenderDate",
              value: function calculateDayRenderDate(_ref3) {
                var renderDate = _ref3.renderDate, offset = _ref3.offset;
                var newRenderDate = new date_TZDate(renderDate);
                newRenderDate.addDate(offset);
                var start = toStartOfDay(newRenderDate);
                var end = toEndOfDay(newRenderDate);
                return {
                  renderDate: newRenderDate,
                  renderRange: {
                    start,
                    end
                  }
                };
              }
            }, {
              key: "move",
              value: function move(offset) {
                if (type_isNil(offset)) {
                  return;
                }
                var _this$getStoreState$v = this.getStoreState().view, currentView = _this$getStoreState$v.currentView, renderDate = _this$getStoreState$v.renderDate;
                var _this$getStoreState = this.getStoreState(), options = _this$getStoreState.options;
                var setRenderDate = this.getStoreDispatchers().view.setRenderDate;
                var newRenderDate = new date_TZDate(renderDate);
                var calculatedRenderDate = {
                  renderDate: newRenderDate,
                  renderRange: {
                    start: new date_TZDate(newRenderDate),
                    end: new date_TZDate(newRenderDate)
                  }
                };
                if (currentView === "month") {
                  calculatedRenderDate = this.calculateMonthRenderDate({
                    renderDate,
                    offset,
                    monthOptions: options.month
                  });
                } else if (currentView === "week") {
                  calculatedRenderDate = this.calculateWeekRenderDate({
                    renderDate,
                    offset,
                    weekOptions: options.week
                  });
                } else if (currentView === "day") {
                  calculatedRenderDate = this.calculateDayRenderDate({
                    renderDate,
                    offset
                  });
                }
                setRenderDate(calculatedRenderDate.renderDate);
                this.renderRange = calculatedRenderDate.renderRange;
              }
            }, {
              key: "createEvents",
              value: function createEvents(events) {
                var _this$getStoreDispatc = this.getStoreDispatchers("calendar"), createEvents2 = _this$getStoreDispatc.createEvents;
                createEvents2(events);
              }
            }, {
              key: "getEventModel",
              value: function getEventModel(eventId, calendarId2) {
                var _this$getStoreState2 = this.getStoreState("calendar"), events = _this$getStoreState2.events;
                return events.find(function(_ref4) {
                  var id = _ref4.id, eventCalendarId = _ref4.calendarId;
                  return id === eventId && eventCalendarId === calendarId2;
                });
              }
            }, {
              key: "getEvent",
              value: function getEvent(eventId, calendarId2) {
                var _this$getEventModel$t, _this$getEventModel;
                return (_this$getEventModel$t = (_this$getEventModel = this.getEventModel(eventId, calendarId2)) === null || _this$getEventModel === void 0 ? void 0 : _this$getEventModel.toEventObject()) !== null && _this$getEventModel$t !== void 0 ? _this$getEventModel$t : null;
              }
            }, {
              key: "updateEvent",
              value: function updateEvent(eventId, calendarId2, changes) {
                var _this$getStoreDispatc2 = this.getStoreDispatchers("calendar"), updateEvent2 = _this$getStoreDispatc2.updateEvent;
                var event = this.getEventModel(eventId, calendarId2);
                if (event) {
                  updateEvent2({
                    event,
                    eventData: changes
                  });
                }
              }
            }, {
              key: "deleteEvent",
              value: function deleteEvent(eventId, calendarId2) {
                var _this$getStoreDispatc3 = this.getStoreDispatchers("calendar"), deleteEvent2 = _this$getStoreDispatc3.deleteEvent;
                var event = this.getEventModel(eventId, calendarId2);
                if (event) {
                  deleteEvent2(event);
                }
              }
            }, {
              key: "setCalendarVisibility",
              value: function setCalendarVisibility(calendarId2, isVisible) {
                var _this$getStoreDispatc4 = this.getStoreDispatchers("calendar"), setCalendarVisibility2 = _this$getStoreDispatc4.setCalendarVisibility;
                var calendarIds = Array.isArray(calendarId2) ? calendarId2 : [calendarId2];
                setCalendarVisibility2(calendarIds, isVisible);
              }
            }, {
              key: "render",
              value: function render() {
                if (isPresent(this.container)) {
                  B(_(CalendarContainer, {
                    theme: this.theme,
                    store: this.store,
                    eventBus: this.eventBus
                  }, this.getComponent()), this.container);
                }
                return this;
              }
            }, {
              key: "renderToString",
              value: function renderToString() {
                return dist(_(CalendarContainer, {
                  theme: this.theme,
                  store: this.store,
                  eventBus: this.eventBus
                }, this.getComponent()));
              }
            }, {
              key: "clear",
              value: function clear() {
                var _this$getStoreDispatc5 = this.getStoreDispatchers("calendar"), clearEvents = _this$getStoreDispatc5.clearEvents;
                clearEvents();
              }
            }, {
              key: "scrollToNow",
              value: function scrollToNow() {
                var scrollBehavior = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "auto";
                this.eventBus.fire("scrollToNow", scrollBehavior);
              }
            }, {
              key: "calculateRenderRange",
              value: function calculateRenderRange(renderDate) {
                var currentView = this.getStoreState().view.currentView;
                var _this$getStoreState3 = this.getStoreState(), options = _this$getStoreState3.options;
                var newRenderDate = new date_TZDate(renderDate);
                var newRenderRange = {
                  start: new date_TZDate(newRenderDate),
                  end: new date_TZDate(newRenderDate)
                };
                if (currentView === "month") {
                  newRenderRange = this.calculateMonthRenderDate({
                    renderDate,
                    offset: 0,
                    monthOptions: options.month
                  }).renderRange;
                } else if (currentView === "week") {
                  newRenderRange = this.calculateWeekRenderDate({
                    renderDate,
                    offset: 0,
                    weekOptions: options.week
                  }).renderRange;
                } else if (currentView === "day") {
                  newRenderRange = this.calculateDayRenderDate({
                    renderDate,
                    offset: 0
                  }).renderRange;
                }
                return newRenderRange;
              }
            }, {
              key: "today",
              value: function today() {
                var setRenderDate = this.getStoreDispatchers().view.setRenderDate;
                var today2 = new date_TZDate();
                setRenderDate(today2);
                this.renderRange = this.calculateRenderRange(today2);
              }
            }, {
              key: "setDate",
              value: function setDate(date2) {
                var _this$getStoreDispatc6 = this.getStoreDispatchers("view"), setRenderDate = _this$getStoreDispatc6.setRenderDate;
                var dateToChange = new date_TZDate(date2);
                setRenderDate(dateToChange);
                this.renderRange = this.calculateRenderRange(dateToChange);
              }
            }, {
              key: "next",
              value: function next() {
                this.move(1);
              }
            }, {
              key: "prev",
              value: function prev() {
                this.move(-1);
              }
            }, {
              key: "setCalendarColor",
              value: function setCalendarColor(calendarId2, colorOptions) {
                var setCalendarColor2 = this.getStoreDispatchers().calendar.setCalendarColor;
                setCalendarColor2(calendarId2, colorOptions);
              }
            }, {
              key: "changeView",
              value: function changeView(viewName) {
                var _this$getStoreDispatc7 = this.getStoreDispatchers("view"), changeView2 = _this$getStoreDispatc7.changeView;
                changeView2(viewName);
                this.renderRange = this.calculateRenderRange(this.getDate());
              }
            }, {
              key: "getElement",
              value: function getElement(eventId, calendarId2) {
                var event = this.getEvent(eventId, calendarId2);
                if (event && this.container) {
                  return this.container.querySelector('[data-event-id="'.concat(eventId, '"][data-calendar-id="').concat(calendarId2, '"]'));
                }
                return null;
              }
            }, {
              key: "setTheme",
              value: function setTheme(theme) {
                var setTheme2 = this.theme.getState().dispatch.setTheme;
                setTheme2(theme);
              }
            }, {
              key: "getOptions",
              value: function getOptions() {
                var _this$getStoreState4 = this.getStoreState(), options = _this$getStoreState4.options, template = _this$getStoreState4.template;
                var _this$theme$getState = this.theme.getState();
                _this$theme$getState.dispatch;
                var theme = calendarCore_objectWithoutProperties(_this$theme$getState, calendarCore_excluded);
                return calendarCore_objectSpread(calendarCore_objectSpread({}, options), {}, {
                  template,
                  theme
                });
              }
            }, {
              key: "setOptions",
              value: function setOptions(options) {
                var theme = options.theme, template = options.template, restOptions = calendarCore_objectWithoutProperties(options, _excluded2);
                var setTheme = this.theme.getState().dispatch.setTheme;
                var _this$getStoreDispatc8 = this.getStoreDispatchers(), setOptions2 = _this$getStoreDispatc8.options.setOptions, setTemplate = _this$getStoreDispatc8.template.setTemplate;
                if (isPresent(theme)) {
                  setTheme(theme);
                }
                if (isPresent(template)) {
                  setTemplate(template);
                }
                setOptions2(restOptions);
              }
            }, {
              key: "getDate",
              value: function getDate() {
                var renderDate = this.getStoreState().view.renderDate;
                return renderDate;
              }
            }, {
              key: "getDateRangeStart",
              value: function getDateRangeStart() {
                return this.renderRange.start;
              }
            }, {
              key: "getDateRangeEnd",
              value: function getDateRangeEnd() {
                return this.renderRange.end;
              }
            }, {
              key: "getViewName",
              value: function getViewName() {
                var _this$getStoreState5 = this.getStoreState("view"), currentView = _this$getStoreState5.currentView;
                return currentView;
              }
            }, {
              key: "setCalendars",
              value: function setCalendars(calendars) {
                var setCalendars2 = this.getStoreDispatchers().calendar.setCalendars;
                setCalendars2(calendars);
              }
            }, {
              key: "openFormPopup",
              value: function openFormPopup(event) {
                var showFormPopup = this.getStoreDispatchers().popup.showFormPopup;
                var eventModel = new EventModel(event);
                var title = eventModel.title, location2 = eventModel.location, start = eventModel.start, end = eventModel.end, isAllday2 = eventModel.isAllday, isPrivate = eventModel.isPrivate, eventState = eventModel.state;
                showFormPopup({
                  isCreationPopup: true,
                  event: eventModel,
                  title,
                  location: location2,
                  start,
                  end,
                  isAllday: isAllday2,
                  isPrivate,
                  eventState
                });
              }
            }, {
              key: "clearGridSelections",
              value: function clearGridSelections() {
                var clearAll = this.getStoreDispatchers().gridSelection.clearAll;
                clearAll();
              }
            }, {
              key: "fire",
              value: function fire(eventName) {
                var _this$eventBus;
                for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                  args[_key - 1] = arguments[_key];
                }
                (_this$eventBus = this.eventBus).fire.apply(_this$eventBus, [eventName].concat(args));
                return this;
              }
            }, {
              key: "off",
              value: function off(eventName, handler) {
                this.eventBus.off(eventName, handler);
                return this;
              }
            }, {
              key: "on",
              value: function on(eventName, handler) {
                this.eventBus.on(eventName, handler);
                return this;
              }
            }, {
              key: "once",
              value: function once(eventName, handler) {
                this.eventBus.once(eventName, handler);
                return this;
              }
            }]);
          }();
          function factory_calendar_typeof(o2) {
            "@babel/helpers - typeof";
            return factory_calendar_typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o3) {
              return typeof o3;
            } : function(o3) {
              return o3 && "function" == typeof Symbol && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
            }, factory_calendar_typeof(o2);
          }
          function calendar_classCallCheck(a2, n2) {
            if (!(a2 instanceof n2))
              throw new TypeError("Cannot call a class as a function");
          }
          function calendar_defineProperties(e2, r2) {
            for (var t = 0; t < r2.length; t++) {
              var o2 = r2[t];
              o2.enumerable = o2.enumerable || false, o2.configurable = true, "value" in o2 && (o2.writable = true), Object.defineProperty(e2, factory_calendar_toPropertyKey(o2.key), o2);
            }
          }
          function calendar_createClass(e2, r2, t) {
            return r2 && calendar_defineProperties(e2.prototype, r2), t && calendar_defineProperties(e2, t), Object.defineProperty(e2, "prototype", { writable: false }), e2;
          }
          function factory_calendar_toPropertyKey(t) {
            var i2 = factory_calendar_toPrimitive(t, "string");
            return "symbol" == factory_calendar_typeof(i2) ? i2 : i2 + "";
          }
          function factory_calendar_toPrimitive(t, r2) {
            if ("object" != factory_calendar_typeof(t) || !t)
              return t;
            var e2 = t[Symbol.toPrimitive];
            if (void 0 !== e2) {
              var i2 = e2.call(t, r2 || "default");
              if ("object" != factory_calendar_typeof(i2))
                return i2;
              throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === r2 ? String : Number)(t);
          }
          function calendar_callSuper(t, o2, e2) {
            return o2 = calendar_getPrototypeOf(o2), calendar_possibleConstructorReturn(t, calendar_isNativeReflectConstruct() ? Reflect.construct(o2, e2 || [], calendar_getPrototypeOf(t).constructor) : o2.apply(t, e2));
          }
          function calendar_possibleConstructorReturn(t, e2) {
            if (e2 && ("object" == factory_calendar_typeof(e2) || "function" == typeof e2))
              return e2;
            if (void 0 !== e2)
              throw new TypeError("Derived constructors may only return object or undefined");
            return calendar_assertThisInitialized(t);
          }
          function calendar_assertThisInitialized(e2) {
            if (void 0 === e2)
              throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e2;
          }
          function calendar_isNativeReflectConstruct() {
            try {
              var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
              }));
            } catch (t2) {
            }
            return (calendar_isNativeReflectConstruct = function _isNativeReflectConstruct2() {
              return !!t;
            })();
          }
          function calendar_getPrototypeOf(t) {
            return calendar_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t2) {
              return t2.__proto__ || Object.getPrototypeOf(t2);
            }, calendar_getPrototypeOf(t);
          }
          function calendar_inherits(t, e2) {
            if ("function" != typeof e2 && null !== e2)
              throw new TypeError("Super expression must either be null or a function");
            t.prototype = Object.create(e2 && e2.prototype, { constructor: { value: t, writable: true, configurable: true } }), Object.defineProperty(t, "prototype", { writable: false }), e2 && calendar_setPrototypeOf(t, e2);
          }
          function calendar_setPrototypeOf(t, e2) {
            return calendar_setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t2, e3) {
              return t2.__proto__ = e3, t2;
            }, calendar_setPrototypeOf(t, e2);
          }
          function isValidViewType(viewType) {
            return !!Object.values(VIEW_TYPE).find(function(type) {
              return type === viewType;
            });
          }
          var Calendar = /* @__PURE__ */ function(_CalendarCore) {
            function Calendar2(container) {
              var _this;
              var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
              calendar_classCallCheck(this, Calendar2);
              _this = calendar_callSuper(this, Calendar2, [container, options]);
              var _options$defaultView = options.defaultView, defaultView = _options$defaultView === void 0 ? "week" : _options$defaultView;
              if (!isValidViewType(defaultView)) {
                throw new InvalidViewTypeError(defaultView);
              }
              _this.render();
              return _this;
            }
            calendar_inherits(Calendar2, _CalendarCore);
            return calendar_createClass(Calendar2, [{
              key: "getComponent",
              value: function getComponent() {
                return _(Main, null);
              }
            }]);
          }(CalendarCore);
          var src_0 = Calendar;
        }();
        __webpack_exports__ = __webpack_exports__["default"];
        return __webpack_exports__;
      }();
    });
  })(toastuiCalendar_ie11);
  var ToastUICalendar = /* @__PURE__ */ getDefaultExportFromCjs(toastuiCalendar_ie11.exports);
  const hasOwnProp = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key);
  function isEqual(a, b) {
    if (a === b) {
      return true;
    }
    if (a instanceof Function) {
      return a.toString() === b.toString();
    }
    if (a && b && typeof a === "object" && typeof b === "object") {
      let length;
      if (a.constructor !== b.constructor) {
        return false;
      }
      if (Array.isArray(a)) {
        length = a.length;
        if (length !== b.length) {
          return false;
        }
        for (let i = 0; i < length; i += 1) {
          if (!isEqual(a[i], b[i])) {
            return false;
          }
        }
        return true;
      }
      if (a.valueOf !== Object.prototype.valueOf) {
        return a.valueOf() === b.valueOf();
      }
      if (a.toString !== Object.prototype.toString) {
        return a.toString() === b.toString();
      }
      const keys = Object.keys(a);
      length = keys.length;
      if (length !== Object.keys(b).length) {
        return false;
      }
      for (let i = 0; i < length; i += 1) {
        const key = keys[i];
        if (!hasOwnProp(b, key) || !isEqual(a[key], b[key])) {
          return false;
        }
      }
      return true;
    }
    return a !== a && b !== b;
  }
  var jsxDevRuntime = { exports: {} };
  /*
  object-assign
  (c) Sindre Sorhus
  @license MIT
  */
  var objectAssign;
  var hasRequiredObjectAssign;
  function requireObjectAssign() {
    if (hasRequiredObjectAssign)
      return objectAssign;
    hasRequiredObjectAssign = 1;
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var propIsEnumerable = Object.prototype.propertyIsEnumerable;
    function toObject(val) {
      if (val === null || val === void 0) {
        throw new TypeError("Object.assign cannot be called with null or undefined");
      }
      return Object(val);
    }
    function shouldUseNative() {
      try {
        if (!Object.assign) {
          return false;
        }
        var test1 = new String("abc");
        test1[5] = "de";
        if (Object.getOwnPropertyNames(test1)[0] === "5") {
          return false;
        }
        var test2 = {};
        for (var i = 0; i < 10; i++) {
          test2["_" + String.fromCharCode(i)] = i;
        }
        var order2 = Object.getOwnPropertyNames(test2).map(function(n) {
          return test2[n];
        });
        if (order2.join("") !== "0123456789") {
          return false;
        }
        var test3 = {};
        "abcdefghijklmnopqrst".split("").forEach(function(letter) {
          test3[letter] = letter;
        });
        if (Object.keys(Object.assign({}, test3)).join("") !== "abcdefghijklmnopqrst") {
          return false;
        }
        return true;
      } catch (err) {
        return false;
      }
    }
    objectAssign = shouldUseNative() ? Object.assign : function(target, source) {
      var from;
      var to = toObject(target);
      var symbols;
      for (var s = 1; s < arguments.length; s++) {
        from = Object(arguments[s]);
        for (var key in from) {
          if (hasOwnProperty.call(from, key)) {
            to[key] = from[key];
          }
        }
        if (getOwnPropertySymbols) {
          symbols = getOwnPropertySymbols(from);
          for (var i = 0; i < symbols.length; i++) {
            if (propIsEnumerable.call(from, symbols[i])) {
              to[symbols[i]] = from[symbols[i]];
            }
          }
        }
      }
      return to;
    };
    return objectAssign;
  }
  var reactJsxDevRuntime_development = {};
  /** @license React v17.0.2
   * react-jsx-dev-runtime.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  var hasRequiredReactJsxDevRuntime_development;
  function requireReactJsxDevRuntime_development() {
    if (hasRequiredReactJsxDevRuntime_development)
      return reactJsxDevRuntime_development;
    hasRequiredReactJsxDevRuntime_development = 1;
    (function(exports2) {
      {
        (function() {
          var React2 = React__default["default"];
          var _assign = requireObjectAssign();
          var REACT_ELEMENT_TYPE = 60103;
          var REACT_PORTAL_TYPE = 60106;
          exports2.Fragment = 60107;
          var REACT_STRICT_MODE_TYPE = 60108;
          var REACT_PROFILER_TYPE = 60114;
          var REACT_PROVIDER_TYPE = 60109;
          var REACT_CONTEXT_TYPE = 60110;
          var REACT_FORWARD_REF_TYPE = 60112;
          var REACT_SUSPENSE_TYPE = 60113;
          var REACT_SUSPENSE_LIST_TYPE = 60120;
          var REACT_MEMO_TYPE = 60115;
          var REACT_LAZY_TYPE = 60116;
          var REACT_BLOCK_TYPE = 60121;
          var REACT_SERVER_BLOCK_TYPE = 60122;
          var REACT_FUNDAMENTAL_TYPE = 60117;
          var REACT_DEBUG_TRACING_MODE_TYPE = 60129;
          var REACT_LEGACY_HIDDEN_TYPE = 60131;
          if (typeof Symbol === "function" && Symbol.for) {
            var symbolFor = Symbol.for;
            REACT_ELEMENT_TYPE = symbolFor("react.element");
            REACT_PORTAL_TYPE = symbolFor("react.portal");
            exports2.Fragment = symbolFor("react.fragment");
            REACT_STRICT_MODE_TYPE = symbolFor("react.strict_mode");
            REACT_PROFILER_TYPE = symbolFor("react.profiler");
            REACT_PROVIDER_TYPE = symbolFor("react.provider");
            REACT_CONTEXT_TYPE = symbolFor("react.context");
            REACT_FORWARD_REF_TYPE = symbolFor("react.forward_ref");
            REACT_SUSPENSE_TYPE = symbolFor("react.suspense");
            REACT_SUSPENSE_LIST_TYPE = symbolFor("react.suspense_list");
            REACT_MEMO_TYPE = symbolFor("react.memo");
            REACT_LAZY_TYPE = symbolFor("react.lazy");
            REACT_BLOCK_TYPE = symbolFor("react.block");
            REACT_SERVER_BLOCK_TYPE = symbolFor("react.server.block");
            REACT_FUNDAMENTAL_TYPE = symbolFor("react.fundamental");
            symbolFor("react.scope");
            symbolFor("react.opaque.id");
            REACT_DEBUG_TRACING_MODE_TYPE = symbolFor("react.debug_trace_mode");
            symbolFor("react.offscreen");
            REACT_LEGACY_HIDDEN_TYPE = symbolFor("react.legacy_hidden");
          }
          var MAYBE_ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
          var FAUX_ITERATOR_SYMBOL = "@@iterator";
          function getIteratorFn(maybeIterable) {
            if (maybeIterable === null || typeof maybeIterable !== "object") {
              return null;
            }
            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
            if (typeof maybeIterator === "function") {
              return maybeIterator;
            }
            return null;
          }
          var ReactSharedInternals = React2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
          function error(format) {
            {
              for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                args[_key2 - 1] = arguments[_key2];
              }
              printWarning("error", format, args);
            }
          }
          function printWarning(level, format, args) {
            {
              var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
              var stack = ReactDebugCurrentFrame2.getStackAddendum();
              if (stack !== "") {
                format += "%s";
                args = args.concat([stack]);
              }
              var argsWithFormat = args.map(function(item) {
                return "" + item;
              });
              argsWithFormat.unshift("Warning: " + format);
              Function.prototype.apply.call(console[level], console, argsWithFormat);
            }
          }
          var enableScopeAPI = false;
          function isValidElementType(type) {
            if (typeof type === "string" || typeof type === "function") {
              return true;
            }
            if (type === exports2.Fragment || type === REACT_PROFILER_TYPE || type === REACT_DEBUG_TRACING_MODE_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || type === REACT_LEGACY_HIDDEN_TYPE || enableScopeAPI) {
              return true;
            }
            if (typeof type === "object" && type !== null) {
              if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_BLOCK_TYPE || type[0] === REACT_SERVER_BLOCK_TYPE) {
                return true;
              }
            }
            return false;
          }
          function getWrappedName(outerType, innerType, wrapperName) {
            var functionName = innerType.displayName || innerType.name || "";
            return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
          }
          function getContextName(type) {
            return type.displayName || "Context";
          }
          function getComponentName(type) {
            if (type == null) {
              return null;
            }
            {
              if (typeof type.tag === "number") {
                error("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue.");
              }
            }
            if (typeof type === "function") {
              return type.displayName || type.name || null;
            }
            if (typeof type === "string") {
              return type;
            }
            switch (type) {
              case exports2.Fragment:
                return "Fragment";
              case REACT_PORTAL_TYPE:
                return "Portal";
              case REACT_PROFILER_TYPE:
                return "Profiler";
              case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
              case REACT_SUSPENSE_TYPE:
                return "Suspense";
              case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
            }
            if (typeof type === "object") {
              switch (type.$$typeof) {
                case REACT_CONTEXT_TYPE:
                  var context = type;
                  return getContextName(context) + ".Consumer";
                case REACT_PROVIDER_TYPE:
                  var provider = type;
                  return getContextName(provider._context) + ".Provider";
                case REACT_FORWARD_REF_TYPE:
                  return getWrappedName(type, type.render, "ForwardRef");
                case REACT_MEMO_TYPE:
                  return getComponentName(type.type);
                case REACT_BLOCK_TYPE:
                  return getComponentName(type._render);
                case REACT_LAZY_TYPE: {
                  var lazyComponent = type;
                  var payload = lazyComponent._payload;
                  var init = lazyComponent._init;
                  try {
                    return getComponentName(init(payload));
                  } catch (x) {
                    return null;
                  }
                }
              }
            }
            return null;
          }
          var disabledDepth = 0;
          var prevLog;
          var prevInfo;
          var prevWarn;
          var prevError;
          var prevGroup;
          var prevGroupCollapsed;
          var prevGroupEnd;
          function disabledLog() {
          }
          disabledLog.__reactDisabledLog = true;
          function disableLogs() {
            {
              if (disabledDepth === 0) {
                prevLog = console.log;
                prevInfo = console.info;
                prevWarn = console.warn;
                prevError = console.error;
                prevGroup = console.group;
                prevGroupCollapsed = console.groupCollapsed;
                prevGroupEnd = console.groupEnd;
                var props = {
                  configurable: true,
                  enumerable: true,
                  value: disabledLog,
                  writable: true
                };
                Object.defineProperties(console, {
                  info: props,
                  log: props,
                  warn: props,
                  error: props,
                  group: props,
                  groupCollapsed: props,
                  groupEnd: props
                });
              }
              disabledDepth++;
            }
          }
          function reenableLogs() {
            {
              disabledDepth--;
              if (disabledDepth === 0) {
                var props = {
                  configurable: true,
                  enumerable: true,
                  writable: true
                };
                Object.defineProperties(console, {
                  log: _assign({}, props, {
                    value: prevLog
                  }),
                  info: _assign({}, props, {
                    value: prevInfo
                  }),
                  warn: _assign({}, props, {
                    value: prevWarn
                  }),
                  error: _assign({}, props, {
                    value: prevError
                  }),
                  group: _assign({}, props, {
                    value: prevGroup
                  }),
                  groupCollapsed: _assign({}, props, {
                    value: prevGroupCollapsed
                  }),
                  groupEnd: _assign({}, props, {
                    value: prevGroupEnd
                  })
                });
              }
              if (disabledDepth < 0) {
                error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
              }
            }
          }
          var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
          var prefix;
          function describeBuiltInComponentFrame(name, source, ownerFn) {
            {
              if (prefix === void 0) {
                try {
                  throw Error();
                } catch (x) {
                  var match = x.stack.trim().match(/\n( *(at )?)/);
                  prefix = match && match[1] || "";
                }
              }
              return "\n" + prefix + name;
            }
          }
          var reentry = false;
          var componentFrameCache;
          {
            var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
            componentFrameCache = new PossiblyWeakMap();
          }
          function describeNativeComponentFrame(fn, construct) {
            if (!fn || reentry) {
              return "";
            }
            {
              var frame = componentFrameCache.get(fn);
              if (frame !== void 0) {
                return frame;
              }
            }
            var control;
            reentry = true;
            var previousPrepareStackTrace = Error.prepareStackTrace;
            Error.prepareStackTrace = void 0;
            var previousDispatcher;
            {
              previousDispatcher = ReactCurrentDispatcher.current;
              ReactCurrentDispatcher.current = null;
              disableLogs();
            }
            try {
              if (construct) {
                var Fake = function() {
                  throw Error();
                };
                Object.defineProperty(Fake.prototype, "props", {
                  set: function() {
                    throw Error();
                  }
                });
                if (typeof Reflect === "object" && Reflect.construct) {
                  try {
                    Reflect.construct(Fake, []);
                  } catch (x) {
                    control = x;
                  }
                  Reflect.construct(fn, [], Fake);
                } else {
                  try {
                    Fake.call();
                  } catch (x) {
                    control = x;
                  }
                  fn.call(Fake.prototype);
                }
              } else {
                try {
                  throw Error();
                } catch (x) {
                  control = x;
                }
                fn();
              }
            } catch (sample) {
              if (sample && control && typeof sample.stack === "string") {
                var sampleLines = sample.stack.split("\n");
                var controlLines = control.stack.split("\n");
                var s = sampleLines.length - 1;
                var c = controlLines.length - 1;
                while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
                  c--;
                }
                for (; s >= 1 && c >= 0; s--, c--) {
                  if (sampleLines[s] !== controlLines[c]) {
                    if (s !== 1 || c !== 1) {
                      do {
                        s--;
                        c--;
                        if (c < 0 || sampleLines[s] !== controlLines[c]) {
                          var _frame = "\n" + sampleLines[s].replace(" at new ", " at ");
                          {
                            if (typeof fn === "function") {
                              componentFrameCache.set(fn, _frame);
                            }
                          }
                          return _frame;
                        }
                      } while (s >= 1 && c >= 0);
                    }
                    break;
                  }
                }
              }
            } finally {
              reentry = false;
              {
                ReactCurrentDispatcher.current = previousDispatcher;
                reenableLogs();
              }
              Error.prepareStackTrace = previousPrepareStackTrace;
            }
            var name = fn ? fn.displayName || fn.name : "";
            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
            {
              if (typeof fn === "function") {
                componentFrameCache.set(fn, syntheticFrame);
              }
            }
            return syntheticFrame;
          }
          function describeFunctionComponentFrame(fn, source, ownerFn) {
            {
              return describeNativeComponentFrame(fn, false);
            }
          }
          function shouldConstruct(Component) {
            var prototype = Component.prototype;
            return !!(prototype && prototype.isReactComponent);
          }
          function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
            if (type == null) {
              return "";
            }
            if (typeof type === "function") {
              {
                return describeNativeComponentFrame(type, shouldConstruct(type));
              }
            }
            if (typeof type === "string") {
              return describeBuiltInComponentFrame(type);
            }
            switch (type) {
              case REACT_SUSPENSE_TYPE:
                return describeBuiltInComponentFrame("Suspense");
              case REACT_SUSPENSE_LIST_TYPE:
                return describeBuiltInComponentFrame("SuspenseList");
            }
            if (typeof type === "object") {
              switch (type.$$typeof) {
                case REACT_FORWARD_REF_TYPE:
                  return describeFunctionComponentFrame(type.render);
                case REACT_MEMO_TYPE:
                  return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
                case REACT_BLOCK_TYPE:
                  return describeFunctionComponentFrame(type._render);
                case REACT_LAZY_TYPE: {
                  var lazyComponent = type;
                  var payload = lazyComponent._payload;
                  var init = lazyComponent._init;
                  try {
                    return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                  } catch (x) {
                  }
                }
              }
            }
            return "";
          }
          var loggedTypeFailures = {};
          var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
          function setCurrentlyValidatingElement(element) {
            {
              if (element) {
                var owner = element._owner;
                var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
                ReactDebugCurrentFrame.setExtraStackFrame(stack);
              } else {
                ReactDebugCurrentFrame.setExtraStackFrame(null);
              }
            }
          }
          function checkPropTypes(typeSpecs, values, location2, componentName, element) {
            {
              var has = Function.call.bind(Object.prototype.hasOwnProperty);
              for (var typeSpecName in typeSpecs) {
                if (has(typeSpecs, typeSpecName)) {
                  var error$1 = void 0;
                  try {
                    if (typeof typeSpecs[typeSpecName] !== "function") {
                      var err = Error((componentName || "React class") + ": " + location2 + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                      err.name = "Invariant Violation";
                      throw err;
                    }
                    error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location2, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                  } catch (ex) {
                    error$1 = ex;
                  }
                  if (error$1 && !(error$1 instanceof Error)) {
                    setCurrentlyValidatingElement(element);
                    error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location2, typeSpecName, typeof error$1);
                    setCurrentlyValidatingElement(null);
                  }
                  if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                    loggedTypeFailures[error$1.message] = true;
                    setCurrentlyValidatingElement(element);
                    error("Failed %s type: %s", location2, error$1.message);
                    setCurrentlyValidatingElement(null);
                  }
                }
              }
            }
          }
          var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
          var hasOwnProperty = Object.prototype.hasOwnProperty;
          var RESERVED_PROPS = {
            key: true,
            ref: true,
            __self: true,
            __source: true
          };
          var specialPropKeyWarningShown;
          var specialPropRefWarningShown;
          var didWarnAboutStringRefs;
          {
            didWarnAboutStringRefs = {};
          }
          function hasValidRef(config) {
            {
              if (hasOwnProperty.call(config, "ref")) {
                var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
                if (getter && getter.isReactWarning) {
                  return false;
                }
              }
            }
            return config.ref !== void 0;
          }
          function hasValidKey(config) {
            {
              if (hasOwnProperty.call(config, "key")) {
                var getter = Object.getOwnPropertyDescriptor(config, "key").get;
                if (getter && getter.isReactWarning) {
                  return false;
                }
              }
            }
            return config.key !== void 0;
          }
          function warnIfStringRefCannotBeAutoConverted(config, self2) {
            {
              if (typeof config.ref === "string" && ReactCurrentOwner.current && self2 && ReactCurrentOwner.current.stateNode !== self2) {
                var componentName = getComponentName(ReactCurrentOwner.current.type);
                if (!didWarnAboutStringRefs[componentName]) {
                  error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', getComponentName(ReactCurrentOwner.current.type), config.ref);
                  didWarnAboutStringRefs[componentName] = true;
                }
              }
            }
          }
          function defineKeyPropWarningGetter(props, displayName) {
            {
              var warnAboutAccessingKey = function() {
                if (!specialPropKeyWarningShown) {
                  specialPropKeyWarningShown = true;
                  error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
                }
              };
              warnAboutAccessingKey.isReactWarning = true;
              Object.defineProperty(props, "key", {
                get: warnAboutAccessingKey,
                configurable: true
              });
            }
          }
          function defineRefPropWarningGetter(props, displayName) {
            {
              var warnAboutAccessingRef = function() {
                if (!specialPropRefWarningShown) {
                  specialPropRefWarningShown = true;
                  error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
                }
              };
              warnAboutAccessingRef.isReactWarning = true;
              Object.defineProperty(props, "ref", {
                get: warnAboutAccessingRef,
                configurable: true
              });
            }
          }
          var ReactElement = function(type, key, ref, self2, source, owner, props) {
            var element = {
              $$typeof: REACT_ELEMENT_TYPE,
              type,
              key,
              ref,
              props,
              _owner: owner
            };
            {
              element._store = {};
              Object.defineProperty(element._store, "validated", {
                configurable: false,
                enumerable: false,
                writable: true,
                value: false
              });
              Object.defineProperty(element, "_self", {
                configurable: false,
                enumerable: false,
                writable: false,
                value: self2
              });
              Object.defineProperty(element, "_source", {
                configurable: false,
                enumerable: false,
                writable: false,
                value: source
              });
              if (Object.freeze) {
                Object.freeze(element.props);
                Object.freeze(element);
              }
            }
            return element;
          };
          function jsxDEV(type, config, maybeKey, source, self2) {
            {
              var propName;
              var props = {};
              var key = null;
              var ref = null;
              if (maybeKey !== void 0) {
                key = "" + maybeKey;
              }
              if (hasValidKey(config)) {
                key = "" + config.key;
              }
              if (hasValidRef(config)) {
                ref = config.ref;
                warnIfStringRefCannotBeAutoConverted(config, self2);
              }
              for (propName in config) {
                if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                  props[propName] = config[propName];
                }
              }
              if (type && type.defaultProps) {
                var defaultProps = type.defaultProps;
                for (propName in defaultProps) {
                  if (props[propName] === void 0) {
                    props[propName] = defaultProps[propName];
                  }
                }
              }
              if (key || ref) {
                var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
                if (key) {
                  defineKeyPropWarningGetter(props, displayName);
                }
                if (ref) {
                  defineRefPropWarningGetter(props, displayName);
                }
              }
              return ReactElement(type, key, ref, self2, source, ReactCurrentOwner.current, props);
            }
          }
          var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
          var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
          function setCurrentlyValidatingElement$1(element) {
            {
              if (element) {
                var owner = element._owner;
                var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
                ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
              } else {
                ReactDebugCurrentFrame$1.setExtraStackFrame(null);
              }
            }
          }
          var propTypesMisspellWarningShown;
          {
            propTypesMisspellWarningShown = false;
          }
          function isValidElement(object) {
            {
              return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
            }
          }
          function getDeclarationErrorAddendum() {
            {
              if (ReactCurrentOwner$1.current) {
                var name = getComponentName(ReactCurrentOwner$1.current.type);
                if (name) {
                  return "\n\nCheck the render method of `" + name + "`.";
                }
              }
              return "";
            }
          }
          function getSourceInfoErrorAddendum(source) {
            {
              if (source !== void 0) {
                var fileName = source.fileName.replace(/^.*[\\\/]/, "");
                var lineNumber = source.lineNumber;
                return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
              }
              return "";
            }
          }
          var ownerHasKeyUseWarning = {};
          function getCurrentComponentErrorInfo(parentType) {
            {
              var info = getDeclarationErrorAddendum();
              if (!info) {
                var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
                if (parentName) {
                  info = "\n\nCheck the top-level render call using <" + parentName + ">.";
                }
              }
              return info;
            }
          }
          function validateExplicitKey(element, parentType) {
            {
              if (!element._store || element._store.validated || element.key != null) {
                return;
              }
              element._store.validated = true;
              var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
              if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
                return;
              }
              ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
              var childOwner = "";
              if (element && element._owner && element._owner !== ReactCurrentOwner$1.current) {
                childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
              }
              setCurrentlyValidatingElement$1(element);
              error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
              setCurrentlyValidatingElement$1(null);
            }
          }
          function validateChildKeys(node, parentType) {
            {
              if (typeof node !== "object") {
                return;
              }
              if (Array.isArray(node)) {
                for (var i = 0; i < node.length; i++) {
                  var child = node[i];
                  if (isValidElement(child)) {
                    validateExplicitKey(child, parentType);
                  }
                }
              } else if (isValidElement(node)) {
                if (node._store) {
                  node._store.validated = true;
                }
              } else if (node) {
                var iteratorFn = getIteratorFn(node);
                if (typeof iteratorFn === "function") {
                  if (iteratorFn !== node.entries) {
                    var iterator = iteratorFn.call(node);
                    var step;
                    while (!(step = iterator.next()).done) {
                      if (isValidElement(step.value)) {
                        validateExplicitKey(step.value, parentType);
                      }
                    }
                  }
                }
              }
            }
          }
          function validatePropTypes(element) {
            {
              var type = element.type;
              if (type === null || type === void 0 || typeof type === "string") {
                return;
              }
              var propTypes;
              if (typeof type === "function") {
                propTypes = type.propTypes;
              } else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_MEMO_TYPE)) {
                propTypes = type.propTypes;
              } else {
                return;
              }
              if (propTypes) {
                var name = getComponentName(type);
                checkPropTypes(propTypes, element.props, "prop", name, element);
              } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
                propTypesMisspellWarningShown = true;
                var _name = getComponentName(type);
                error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
              }
              if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) {
                error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
              }
            }
          }
          function validateFragmentProps(fragment) {
            {
              var keys = Object.keys(fragment.props);
              for (var i = 0; i < keys.length; i++) {
                var key = keys[i];
                if (key !== "children" && key !== "key") {
                  setCurrentlyValidatingElement$1(fragment);
                  error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                  setCurrentlyValidatingElement$1(null);
                  break;
                }
              }
              if (fragment.ref !== null) {
                setCurrentlyValidatingElement$1(fragment);
                error("Invalid attribute `ref` supplied to `React.Fragment`.");
                setCurrentlyValidatingElement$1(null);
              }
            }
          }
          function jsxWithValidation(type, props, key, isStaticChildren, source, self2) {
            {
              var validType = isValidElementType(type);
              if (!validType) {
                var info = "";
                if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
                  info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                }
                var sourceInfo = getSourceInfoErrorAddendum(source);
                if (sourceInfo) {
                  info += sourceInfo;
                } else {
                  info += getDeclarationErrorAddendum();
                }
                var typeString;
                if (type === null) {
                  typeString = "null";
                } else if (Array.isArray(type)) {
                  typeString = "array";
                } else if (type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE) {
                  typeString = "<" + (getComponentName(type.type) || "Unknown") + " />";
                  info = " Did you accidentally export a JSX literal instead of a component?";
                } else {
                  typeString = typeof type;
                }
                error("React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
              }
              var element = jsxDEV(type, props, key, source, self2);
              if (element == null) {
                return element;
              }
              if (validType) {
                var children = props.children;
                if (children !== void 0) {
                  if (isStaticChildren) {
                    if (Array.isArray(children)) {
                      for (var i = 0; i < children.length; i++) {
                        validateChildKeys(children[i], type);
                      }
                      if (Object.freeze) {
                        Object.freeze(children);
                      }
                    } else {
                      error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
                    }
                  } else {
                    validateChildKeys(children, type);
                  }
                }
              }
              if (type === exports2.Fragment) {
                validateFragmentProps(element);
              } else {
                validatePropTypes(element);
              }
              return element;
            }
          }
          var jsxDEV$1 = jsxWithValidation;
          exports2.jsxDEV = jsxDEV$1;
        })();
      }
    })(reactJsxDevRuntime_development);
    return reactJsxDevRuntime_development;
  }
  (function(module2) {
    {
      module2.exports = requireReactJsxDevRuntime_development();
    }
  })(jsxDevRuntime);
  var _jsxFileName = "C:\\Users\\zuzex-42\\Desktop\\projects\\tui.calendar\\apps\\react-calendar\\src\\index.tsx";
  const optionsProps = ["useFormPopup", "useDetailPopup", "isReadOnly", "week", "month", "gridSelection", "usageStatistics", "eventFilter", "timezone", "template"];
  const reactCalendarEventNames = ["onSelectDateTime", "onBeforeCreateEvent", "onBeforeUpdateEvent", "onBeforeDeleteEvent", "onAfterRenderEvent", "onClickDayName", "onClickEvent", "onClickMoreEventsBtn", "onClickTimezonesCollapseBtn"];
  class ToastUIReactCalendar extends React__default["default"].Component {
    constructor() {
      super(...arguments);
      __publicField(this, "containerElementRef", React__default["default"].createRef());
      __publicField(this, "calendarInstance", null);
    }
    componentDidMount() {
      const {
        height,
        events = [],
        view,
        ...options
      } = this.props;
      const container = this.containerElementRef.current;
      if (container) {
        this.calendarInstance = new ToastUICalendar(container, {
          ...options,
          defaultView: view
        });
        container.style.height = height;
      }
      this.setEvents(events);
      this.bindEventHandlers(options);
    }
    shouldComponentUpdate(nextProps) {
      var _a, _b, _c, _d;
      const {
        calendars,
        height,
        events,
        theme,
        view
      } = this.props;
      const {
        calendars: nextCalendars,
        height: nextHeight,
        events: nextEvents,
        theme: nextTheme = {},
        view: nextView = "week"
      } = nextProps;
      if (!isEqual(height, nextHeight) && this.containerElementRef.current) {
        this.containerElementRef.current.style.height = nextHeight;
      }
      if (!isEqual(calendars, nextCalendars)) {
        this.setCalendars(nextCalendars);
      }
      if (!isEqual(events, nextEvents)) {
        (_a = this.calendarInstance) == null ? void 0 : _a.clear();
        this.setEvents(nextEvents);
      }
      if (!isEqual(theme, nextTheme)) {
        (_b = this.calendarInstance) == null ? void 0 : _b.setTheme(nextTheme);
      }
      if (!isEqual(view, nextView)) {
        (_c = this.calendarInstance) == null ? void 0 : _c.changeView(nextView);
      }
      const nextOptions = optionsProps.reduce((acc, key) => {
        if (!isEqual(this.props[key], nextProps[key])) {
          acc[key] = nextProps[key];
        }
        return acc;
      }, {});
      (_d = this.calendarInstance) == null ? void 0 : _d.setOptions(nextOptions);
      this.bindEventHandlers(nextProps);
      return false;
    }
    componentWillUnmount() {
      var _a;
      (_a = this.calendarInstance) == null ? void 0 : _a.destroy();
    }
    setCalendars(calendars) {
      var _a;
      if (calendars) {
        (_a = this.calendarInstance) == null ? void 0 : _a.setCalendars(calendars);
      }
    }
    setEvents(events) {
      var _a;
      if (events) {
        (_a = this.calendarInstance) == null ? void 0 : _a.createEvents(events);
      }
    }
    bindEventHandlers(externalEvents) {
      const eventNames = Object.keys(externalEvents).filter((key) => reactCalendarEventNames.includes(key));
      eventNames.forEach((key) => {
        const eventName = key[2].toLowerCase() + key.slice(3);
        if (this.calendarInstance) {
          this.calendarInstance.off(eventName);
          this.calendarInstance.on(eventName, externalEvents[key]);
        }
      });
    }
    getInstance() {
      return this.calendarInstance;
    }
    getRootElement() {
      return this.containerElementRef.current;
    }
    render() {
      return /* @__PURE__ */ jsxDevRuntime.exports.jsxDEV("div", {
        className: "container",
        ref: this.containerElementRef
      }, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 158,
        columnNumber: 12
      }, this);
    }
  }
  __publicField(ToastUIReactCalendar, "defaultProps", {
    height: "800px",
    view: "week"
  });
  return ToastUIReactCalendar;
});
